"use strict";(self.webpackChunkmithril_doc=self.webpackChunkmithril_doc||[]).push([[8501],{12298:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var s=n(64057),r=n(74848),i=n(28453);const o={slug:10,title:"10. Specific Mithril Http status code\n",authors:[{name:"Mithril Team"}],tags:["Accepted"],date:new Date("2025-03-21T00:00:00.000Z")},c=void 0,a={authorsImageUrls:[void 0]},d=[{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Consequences",id:"consequences",level:2}];function l(e){const t={h2:"h2",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"status",children:"Status"}),"\n",(0,r.jsx)(t.p,{children:"Accepted"}),"\n",(0,r.jsx)(t.h2,{id:"context",children:"Context"}),"\n",(0,r.jsx)(t.p,{children:"In exchanges between the signer and the aggregator, we need to retrieve the reason why a request was unsuccessful.\nError handling will depend on the specific functional case of Mithril.\nWe could have reused existing HTTP codes, but they are too general and could be returned for cases other than the one we wish to isolate."}),"\n",(0,r.jsx)(t.h2,{id:"decision",children:"Decision"}),"\n",(0,r.jsx)(t.p,{children:"We therefore decided to return specific error codes when we need to identify the functional case.\nWe start at 450 for client error codes and at 550 for server error codes."}),"\n",(0,r.jsx)(t.h2,{id:"consequences",children:"Consequences"}),"\n",(0,r.jsx)(t.p,{children:"Specific Mithril HTTP status code on server error should be between 550 and 599.\nFor client error the HTTP status code should be between 450 and 499."})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var s=n(96540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}},64057:e=>{e.exports=JSON.parse('{"permalink":"/doc/adr/10","source":"@site/adr/010-http-status-code.md","title":"10. Specific Mithril Http status code\\n","description":"Status","date":"2025-03-21T00:00:00.000Z","tags":[{"inline":true,"label":"Accepted","permalink":"/doc/adr/tags/accepted"}],"readingTime":0.6,"hasTruncateMarker":false,"authors":[{"name":"Mithril Team","socials":{},"key":null,"page":null}],"frontMatter":{"slug":"10","title":"10. Specific Mithril Http status code\\n","authors":[{"name":"Mithril Team"}],"tags":["Accepted"],"date":"2025-03-21T00:00:00.000Z"},"unlisted":false,"nextItem":{"title":"9. Database migration squashing\\n","permalink":"/doc/adr/9"}}')}}]);