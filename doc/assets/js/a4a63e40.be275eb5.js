"use strict";(self.webpackChunkmithril_doc=self.webpackChunkmithril_doc||[]).push([[1045],{19409:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"mithril/beginner/why-use-mithril","title":"Why should you use Mithril?","description":"Mithril was developed with a focus on optimization, scalability, and interoperability. It addresses several key challenges in the blockchain ecosystem:","source":"@site/versioned_docs/version-maintained/mithril/beginner/why-use-mithril.md","sourceDirName":"mithril/beginner","slug":"/mithril/beginner/why-use-mithril","permalink":"/doc/mithril/beginner/why-use-mithril","draft":false,"unlisted":false,"editUrl":"https://github.com/input-output-hk/mithril/edit/main/docs/website/root/mithril/beginner/why-use-mithril.md","tags":[],"version":"maintained","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Why should you use Mithril?"},"sidebar":"mithrilSideBar","previous":{"title":"Mithril in a nutshell","permalink":"/doc/mithril/beginner/mithril-in-a-nutshell"},"next":{"title":"How it works","permalink":"/doc/mithril/beginner/how-it-works"}}');var s=t(74848),r=t(28453);const o={sidebar_position:2,sidebar_label:"Why should you use Mithril?"},a="Why should you use Mithril?",l={},h=[{value:"Challenges",id:"challenges",level:2},{value:"Solutions",id:"solutions",level:2}];function d(e){const i={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"why-should-you-use-mithril",children:"Why should you use Mithril?"})}),"\n",(0,s.jsx)(i.p,{children:"Mithril was developed with a focus on optimization, scalability, and interoperability. It addresses several key challenges in the blockchain ecosystem:"}),"\n",(0,s.jsx)(i.h2,{id:"challenges",children:"Challenges"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Slow node bootstrapping."})," Synchronizing a full Cardano node from scratch can take days, hindering user participation and development."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Light client security and decentralization."})," Light clients such as wallets offer efficiency but often rely on centralized and trusted third parties for data, compromising security and decentralization."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Layer 2 interaction."})," Layer 2 solutions designed to enhance scalability need efficient methods to verify their state and interact with the main chain without requiring validator nodes to run a full Cardano node."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"solutions",children:"Solutions"}),"\n",(0,s.jsx)(i.p,{children:"Mithril addresses these challenges through its stake-based threshold multi-signature (STM) scheme. This approach allows for efficient and secure verification of blockchain data without the need to run a full node, thereby improving scalability and accessibility."}),"\n",(0,s.jsx)(i.p,{children:"Here's how Mithril provides solutions:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Fast bootstrapping."})," Mithril enables the rapid setup of a full Cardano node in under 20 minutes by providing certified snapshots of the Cardano database. These snapshots can be quickly verified using the multi-signature scheme."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Secure and efficient data exchange for lightweight applications."})," Lightweight applications such as wallets can leverage Mithril to verify transaction data associated with specific addresses without relying on third parties or running a full node. This maintains decentralization and security while offering greater efficiency."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Support for layer 2 solutions."})," Mithril allows lightweight verification of the state and transactions of layer 2 solutions, improving their interaction with the main chain. For example, it can verify the stake of validator nodes in a bridge."]}),"\n"]})]})}function c(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>a});var n=t(96540);const s={},r=n.createContext(s);function o(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);