"use strict";(self.webpackChunkmithril_doc=self.webpackChunkmithril_doc||[]).push([[7343],{28733:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"manual/develop/nodes/mithril-client-library-wasm","title":"Mithril client library WASM","description":"Mithril client library WASM can be used by Javascript developers to use the Mithril network in their web applications.","source":"@site/root/manual/develop/nodes/mithril-client-library-wasm.md","sourceDirName":"manual/develop/nodes","slug":"/manual/develop/nodes/mithril-client-library-wasm","permalink":"/doc/next/manual/develop/nodes/mithril-client-library-wasm","draft":false,"unlisted":false,"editUrl":"https://github.com/input-output-hk/mithril/edit/main/docs/website/root/manual/develop/nodes/mithril-client-library-wasm.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"manualSideBar","previous":{"title":"Mithril client library","permalink":"/doc/next/manual/develop/nodes/mithril-client-library"},"next":{"title":"Run a private network","permalink":"/doc/next/manual/develop/run-mithril-devnet"}}');var r=i(74848),s=i(28453);const a={sidebar_position:5},l="Mithril client library WASM",c={},o=[{value:"Resources",id:"resources",level:2},{value:"Installation",id:"installation",level:2},{value:"Using Mithril client library",id:"using-mithril-client-library",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"mithril-client-library-wasm",children:"Mithril client library WASM"})}),"\n",(0,r.jsxs)(t.admonition,{type:"info",children:[(0,r.jsx)(t.p,{children:"Mithril client library WASM can be used by Javascript developers to use the Mithril network in their web applications."}),(0,r.jsx)(t.p,{children:"It is responsible for handling the different types of data certified by Mithril and available through a Mithril aggregator:"}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/doc/next/glossary#cardano-transaction",children:(0,r.jsx)(t.strong,{children:"Cardano transaction"})}),": list and get snapshots, get proofs"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/doc/next/glossary#stake-distribution",children:(0,r.jsx)(t.strong,{children:"Cardano stake distribution"})}),": list, get and get by epoch"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/doc/next/glossary#cardano-database",children:(0,r.jsx)(t.strong,{children:"Cardano database"})}),": list and get"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/doc/next/glossary#stake-distribution",children:(0,r.jsx)(t.strong,{children:"Mithril stake distribution"})}),": list and get"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/doc/next/glossary#certificate",children:(0,r.jsx)(t.strong,{children:"Certificate"})}),": list, get, and chain validation."]}),"\n"]})]}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["For more information about the ",(0,r.jsx)(t.strong,{children:"Mithril network"}),", please see the ",(0,r.jsx)(t.a,{href:"/doc/next/mithril/advanced/mithril-network/architecture",children:"architecture"})," overview."]}),"\n"]})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["The Mithril network configurations are available in the ",(0,r.jsx)(t.a,{href:"/doc/next/manual/getting-started/network-configurations",children:(0,r.jsx)(t.strong,{children:"Network configurations"})})," section of the user manual."]})}),"\n",(0,r.jsx)(t.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Node"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Source repository"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Rust documentation"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Network configurations"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.strong,{children:"Mithril client WASM"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"https://github.com/input-output-hk/mithril/tree/main/mithril-client-wasm",children:"\u2197\ufe0f"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"https://mithril.network/rust-doc/mithril_client_wasm/index.html",children:"\u2197\ufe0f"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"/doc/next/manual/getting-started/network-configurations",children:"\u2197\ufe0f"})})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(t.p,{children:"The Mithril client library is compatible with the following browsers:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Browser"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Minimum version"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Released"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Tested in CI"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Chrome"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"54"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"2016-10-12"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"\u2714\ufe0f"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Edge"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"79"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"2020-01-15"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Firefox"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"38"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"2015-05-12"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"\u2714\ufe0f"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Opera"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"41"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"2016-10-25"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Safari"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"15.4"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"2022-03-14"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Chrome Android"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"54"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"2016-10-19"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Firefox for Android"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"38"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"2015-05-12"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Opera Android"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"41"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"2016-10-25"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Safari on iOS"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"15.4"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"2022-03-14"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"-"})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["In your Javascript project, use ",(0,r.jsx)(t.code,{children:"npm"})," to add ",(0,r.jsx)(t.a,{href:"https://www.npmjs.com/package/@mithril-dev/mithril-client-wasm",children:"mithril-client-wasm"})," library as a dependency:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm i @mithril-dev/mithril-client-wasm\n"})}),"\n",(0,r.jsx)(t.h2,{id:"using-mithril-client-library",children:"Using Mithril client library"}),"\n",(0,r.jsx)(t.p,{children:"Below is a basic example of how to use most of the functions exposed by the Mithril client library:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'import initMithrilClient, {\n  MithrilClient,\n} from "@mithril-dev/mithril-client-wasm";\n\nlet aggregator_endpoint =\n  "https://aggregator.testing-preview.api.mithril.network/aggregator";\nlet genesis_verification_key =\n  "5b3132372c37332c3132342c3136312c362c3133372c3133312c3231332c3230372c3131372c3139382c38352c3137362c3139392c3136322c3234312c36382c3132332c3131392c3134352c31332c3233322c3234332c34392c3232392c322c3234392c3230352c3230352c33392c3233352c34345d";\n\nconst broadcast_channel = new BroadcastChannel("mithril-client");\nbroadcast_channel.onmessage = (e) => {\n  let event = e.data;\n  if (event.type == "CertificateChainValidationStarted") {\n    console.log("The certificate chain validation has started");\n  } else if (event.type == "CertificateValidated") {\n    console.log(\n      "A certificate has been validated, certificate_hash: " +\n        event.payload.certificate_hash,\n    );\n  } else if (event.type == "CertificateChainValidated") {\n    console.log("The certificate chain is valid");\n  } else {\n    console.log(event);\n  }\n};\n\nawait initMithrilClient();\n\nlet client = new MithrilClient(aggregator_endpoint, genesis_verification_key, {\n  // The following option activates the unstable features of the client.\n  // Unstable features will trigger an error if this option is not set.\n  unstable: true,\n});\nlet mithril_stake_distributions_list =\n  await client.list_mithril_stake_distributions();\nconsole.log("stake distributions:", mithril_stake_distributions_list);\n\nlet last_mithril_stake_distribution = mithril_stake_distributions_list[0];\nconsole.log(\n  "last_mithril_stake_distribution:",\n  last_mithril_stake_distribution,\n);\n\nlet last_stake_distribution = await client.get_mithril_stake_distribution(\n  last_mithril_stake_distribution.hash,\n);\nconsole.log("last_stake_distribution:", last_stake_distribution);\n\nlet certificate = await client.get_mithril_certificate(\n  last_stake_distribution.certificate_hash,\n);\nconsole.log("certificate:", certificate);\n\nlet last_certificate_from_chain = await client.verify_certificate_chain(\n  certificate.hash,\n);\nconsole.log(\n  "verify certificate chain OK, last_certificate_from_chain:",\n  last_certificate_from_chain,\n);\n\nlet mithril_stake_distributions_message =\n  await client.compute_mithril_stake_distribution_message(\n    last_stake_distribution,\n  );\nconsole.log(\n  "mithril_stake_distributions_message:",\n  mithril_stake_distributions_message,\n);\n\nlet valid_stake_distribution_message =\n  await client.verify_message_match_certificate(\n    mithril_stake_distributions_message,\n    last_certificate_from_chain,\n  );\nconsole.log(\n  "valid_stake_distribution_message:",\n  valid_stake_distribution_message,\n);\n'})}),"\n",(0,r.jsxs)(t.admonition,{title:"Adding Custom HTTP Headers",type:"tip",children:[(0,r.jsxs)(t.p,{children:["You can customize the HTTP headers sent by the Mithril client. This is particularly useful in scenarios where the Mithril client is used with a proxy, as it allows you to include headers like ",(0,r.jsx)(t.strong,{children:"Authorization"})," or custom headers for specific use cases. Below is an example of how to set custom headers:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'let http_headers_map = new Map();\nhttp_headers_map.set("Authorization", "Bearer YourBearerToken");\nhttp_headers_map.set("X-Custom-Header", "YourCustomHeaderValue");\n\nlet client_options = {\n  http_headers: http_headers_map,\n};\n\nlet client = new MithrilClient(\n  aggregator_endpoint,\n  genesis_verification_key,\n  client_options,\n);\n'})})]}),"\n",(0,r.jsxs)(t.p,{children:["If the aggregator signs ",(0,r.jsx)(t.strong,{children:"CardanoTransactions"}),", you can add the code below to the previous example:"]}),"\n",(0,r.jsxs)(t.admonition,{type:"tip",children:[(0,r.jsxs)(t.p,{children:["You can verify that the aggregator signs ",(0,r.jsx)(t.strong,{children:"CardanoTransactions"})," by running the command below:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"wget -q -O - YOUR_AGGREGATOR_ENDPOINT | jq '.capabilities.signed_entity_types | contains([\"CardanoTransactions\"])'\n"})}),(0,r.jsxs)(t.p,{children:["For example with the aggregator on ",(0,r.jsx)(t.code,{children:"pre-release-preview"})," Mithril network:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"wget -q -O - https://aggregator.pre-release-preview.api.mithril.network/aggregator | jq '.capabilities.signed_entity_types | contains([\"CardanoTransactions\"])'\n"})})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'const proof = await client.get_cardano_transaction_proofs([\n  "CARDANO_TRANSACTION_HASH_1",\n  "CARDANO_TRANSACTION_HASH_2",\n]);\nconsole.log("Proof tx hash", proof.transactions_hashes);\nconsole.log("Proof certificate hash", proof.certificate_hash);\n\nlet proof_certificate = await client.verify_certificate_chain(\n  proof.certificate_hash,\n);\nconsole.log(\n  "verify_certificate_chain OK, last_certificate_from_chain:",\n  proof_certificate,\n);\n\nlet valid_cardano_transaction_proof =\n  await client.verify_cardano_transaction_proof_then_compute_message(\n    proof,\n    proof_certificate,\n  );\nconsole.log(\n  "valid_cardano_transaction_proof:",\n  valid_cardano_transaction_proof,\n);\n'})}),"\n",(0,r.jsxs)(t.p,{children:["With the same logic as above, if the aggregator signs ",(0,r.jsx)(t.strong,{children:"CardanoStakeDistribution"}),", you can add the code below to the previous example:"]}),"\n",(0,r.jsxs)(t.admonition,{type:"tip",children:[(0,r.jsxs)(t.p,{children:["You can verify that the aggregator signs ",(0,r.jsx)(t.strong,{children:"CardanoStakeDistribution"})," by running the command below:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"wget -q -O - YOUR_AGGREGATOR_ENDPOINT | jq '.capabilities.signed_entity_types | contains([\"CardanoStakeDistribution\"])'\n"})}),(0,r.jsxs)(t.p,{children:["For example, with the aggregator on the ",(0,r.jsx)(t.code,{children:"testing-preview"})," Mithril network:"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"wget -q -O - https://aggregator.testing-preview.api.mithril.network/aggregator | jq '.capabilities.signed_entity_types | contains([\"CardanoStakeDistribution\"])'\n"})})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'let cardano_stake_distributions_list =\n  await client.list_cardano_stake_distributions();\nconsole.log("cardano stake distributions:", cardano_stake_distributions_list);\n\nlet last_cardano_stake_distribution =\n  await client.get_cardano_stake_distribution(\n    cardano_stake_distributions_list[0].hash,\n  );\nconsole.log(\n  "last_cardano_stake_distribution:",\n  last_cardano_stake_distribution,\n);\n\nlet certificate = await client.get_mithril_certificate(\n  last_cardano_stake_distribution.certificate_hash,\n);\nconsole.log("certificate:", certificate);\n\nlet last_certificate_from_chain = await client.verify_certificate_chain(\n  certificate.hash,\n);\nconsole.log(\n  "verify certificate chain OK, last_certificate_from_chain:",\n  last_certificate_from_chain,\n);\n\nlet cardano_stake_distribution_message =\n  await client.compute_cardano_stake_distribution_message(\n    certificate,\n    last_cardano_stake_distribution,\n  );\nconsole.log(\n  "cardano_stake_distribution_message:",\n  cardano_stake_distribution_message,\n);\n\nlet valid_cardano_stake_distribution_message =\n  await client.verify_message_match_certificate(\n    cardano_stake_distribution_message,\n    last_certificate_from_chain,\n  );\nconsole.log(\n  "valid_cardano_stake_distribution_message:",\n  valid_cardano_stake_distribution_message,\n);\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>l});var n=i(96540);const r={},s=n.createContext(r);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);