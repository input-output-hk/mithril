"use strict";(self.webpackChunkmithril_doc=self.webpackChunkmithril_doc||[]).push([[1576],{8620:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>s});const t=JSON.parse('{"id":"manual/develop/run-mithril-devnet","title":"Run a private network","description":"In this guide, you will learn how to run a demonstration of a Mithril network working on top of a private Cardano devnet network. This network is completely autonomous and set up to produce Mithril snapshots every minute.","source":"@site/root/manual/develop/run-mithril-devnet.md","sourceDirName":"manual/develop","slug":"/manual/develop/run-mithril-devnet","permalink":"/doc/next/manual/develop/run-mithril-devnet","draft":false,"unlisted":false,"editUrl":"https://github.com/input-output-hk/mithril/edit/main/docs/website/root/manual/develop/run-mithril-devnet.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"manualSideBar","previous":{"title":"Mithril client library WASM","permalink":"/doc/next/manual/develop/nodes/mithril-client-library-wasm"},"next":{"title":"Protocol simulation","permalink":"/doc/next/manual/develop/protocol-simulation"}}');var o=a(74848),i=a(28453);const r={sidebar_position:2},c="Run a private network",d={},s=[{value:"Video demonstration",id:"video-demonstration",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Download the source file",id:"download-the-source-file",level:2},{value:"Change the directory",id:"change-the-directory",level:2},{value:"Run a private Mithril/Cardano network (<code>devnet</code>) locally",id:"run-a-private-mithrilcardano-network-devnet-locally",level:2},{value:"Step 1: Launch the devnet",id:"step-1-launch-the-devnet",level:3},{value:"Step 2: Query the devnet",id:"step-2-query-the-devnet",level:3},{value:"Step 3: Observe the devnet",id:"step-3-observe-the-devnet",level:3},{value:"Interact with the Mithril aggregator by using the Mithril client",id:"interact-with-the-mithril-aggregator-by-using-the-mithril-client",level:2},{value:"Step 1: Prepare some useful variables",id:"step-1-prepare-some-useful-variables",level:3},{value:"Step 2: Select a Cardano DB snapshot",id:"step-2-select-a-cardano-db-snapshot",level:3},{value:"Step 3: Show Cardano DB snapshot details",id:"step-3-show-cardano-db-snapshot-details",level:3},{value:"Step 4: Download and verify the selected Cardano DB snapshot",id:"step-4-download-and-verify-the-selected-cardano-db-snapshot",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"run-a-private-network",children:"Run a private network"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["In this guide, you will learn how to run a demonstration of a ",(0,o.jsx)(n.strong,{children:"Mithril network"})," working on top of a private Cardano ",(0,o.jsx)(n.code,{children:"devnet"})," network. This network is completely autonomous and set up to produce Mithril snapshots every minute."]})}),"\n",(0,o.jsx)(n.p,{children:"You can launch a private Mithril network using the following topology:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"2"})," ",(0,o.jsx)(n.strong,{children:"Cardano nodes"})," configured as ",(0,o.jsx)(n.strong,{children:"stake pool operators (SPOs)"})," with a ",(0,o.jsx)(n.strong,{children:"Mithril signer"})," on top"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"1"})," ",(0,o.jsx)(n.strong,{children:"Cardano node"})," configured as a ",(0,o.jsx)(n.strong,{children:"Full node"})," with a ",(0,o.jsx)(n.strong,{children:"Mithril aggregator"})," on top."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Devnet Topology",src:a(12043).A+"",width:"1010",height:"749"})}),"\n",(0,o.jsx)(n.admonition,{type:"danger",children:(0,o.jsx)(n.p,{children:"This demonstration works exclusively on Linux machines."})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["More information about the private Cardano/Mithril ",(0,o.jsx)(n.code,{children:"devnet"})," is available ",(0,o.jsx)(n.a,{href:"https://github.com/input-output-hk/mithril/blob/main/mithril-test-lab/mithril-devnet/README.md",children:"here"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"video-demonstration",children:"Video demonstration"}),"\n",(0,o.jsx)("iframe",{style:{width:"100%",height:"480px"},src:"https://www.youtube.com/embed/qu3GoO1UwYI",title:"Run a Private Mithril network",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"true"}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Install the latest stable version of a ",(0,o.jsx)(n.a,{href:"https://www.rust-lang.org/learn/get-started",children:"correctly configured"})," Rust toolchain"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Install build tools ",(0,o.jsx)(n.code,{children:"build-essential"})," and ",(0,o.jsx)(n.code,{children:"m4"}),"; for example, on Ubuntu/Debian/Mint, run ",(0,o.jsx)(n.code,{children:"sudo apt install build-essential m4"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Install the OpenSSL development libraries; for example, on Ubuntu/Debian/Mint, run ",(0,o.jsx)(n.code,{children:"apt install libssl-dev"}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"download-the-source-file",children:"Download the source file"}),"\n",(0,o.jsx)(n.p,{children:"Download the source file from GitHub (HTTPS):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/input-output-hk/mithril.git\n"})}),"\n",(0,o.jsx)(n.p,{children:"Or (SSH):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"git clone git@github.com:input-output-hk/mithril.git\n"})}),"\n",(0,o.jsx)(n.h2,{id:"change-the-directory",children:"Change the directory"}),"\n",(0,o.jsx)(n.p,{children:"To change the directory, go to the devnet folder:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd mithril-test-lab/mithril-devnet\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"run-a-private-mithrilcardano-network-devnet-locally",children:["Run a private Mithril/Cardano network (",(0,o.jsx)(n.code,{children:"devnet"}),") locally"]}),"\n",(0,o.jsx)(n.h3,{id:"step-1-launch-the-devnet",children:"Step 1: Launch the devnet"}),"\n",(0,o.jsx)(n.p,{children:"Open a terminal window. Run a devnet with one BTF and two SPO Cardano nodes."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Option 1"}),": Use remote Docker images"]}),"\n",(0,o.jsx)(n.p,{children:"The network setup will be quicker when using remote Docker images:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MITHRIL_IMAGE_ID=latest FULL_NODES=1 NUM_POOL_NODES=2 ./devnet-run.sh\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Option 2"}),": Use local Docker images"]}),"\n",(0,o.jsx)(n.p,{children:"Note that using local Docker images to build Mithril nodes may take more time:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"FULL_NODES=1 NUM_POOL_NODES=2 ./devnet-run.sh\n"})}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsx)(n.p,{children:"Throughout the devnet launch process, you will encounter the following steps:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Bootstrapping the devnet"}),": generate the artifacts of the devnet, depending on the configuration parameters (cryptographic keys, network topology, transactions to set up pool nodes, etc)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Starting the Cardano network"}),": run the nodes of the ",(0,o.jsx)(n.strong,{children:"Cardano network"}),", wait for it to be ready, and activate the pool nodes"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Starting the Mithril network"}),": run the nodes of the ",(0,o.jsx)(n.strong,{children:"Mithril network"}),", which will work on top of the ",(0,o.jsx)(n.strong,{children:"Cardano network"}),"."]}),"\n"]})]}),"\n",(0,o.jsx)(n.p,{children:"You should see the following information displayed:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'=====================================================================\n Bootstrap Mithril/Cardano devnet\n=====================================================================\n\n>> The artifacts directory was force deleted\n>> Devnet Version: 0.4.6\n>> Artifacts Directory[env::ARTIFACTS_DIR]: artifacts\n>> Cardano Full nodes [env::NUM_FULL_NODES]: 1\n>> Cardano SPO nodes [env::NUM_POOL_NODES]: 2\n>> Cardano Node Version [env::CARDANO_NODE_VERSION]: 10.5.1\n>> Cardano Network Magic [env::NETWORK_MAGIC]: 42\n>> Cardano Hard Fork Babbage At Epoch [env::HARD_FORK_BABBAGE_AT_EPOCH]: 0\n>> Cardano Hard Fork Conway At Epoch [env::HARD_FORK_CONWAY_AT_EPOCH]: 0\n>> Cardano Slot Length [env::SLOT_LENGTH]: 0.75s\n>> Cardano Epoch Length [env::EPOCH_LENGTH]: 100s\n>> Cardano Listening Address [env::LISTENING_ADDR]: 127.0.0.1\n>> Creating artifacts directory...\n>> Downloading cardano-cli & cardano-node...\n>> Extracting cardano-cli & cardano-node...\ngenerated genesis with: 3 genesis keys, 2 non-delegating UTxO keys, 2 stake pools, 2 delegating UTxO keys, 2 delegation map entries,\n\n=====================================================================\n Start Cardano nodes\n=====================================================================\n\n>> Start Cardano network\ncardano-cli 10.1.1.0 - linux-x86_64 - ghc-8.10\ngit rev 01bda2e2cb0a70cd95067d696dbb44665f1d680a\ncardano-node 10.5.1 - linux-x86_64 - ghc-8.10\ngit rev 01bda2e2cb0a70cd95067d696dbb44665f1d680a\n>> Starting Cardano node \'node-full1\'\n>> Starting Cardano node \'node-pool1\'\n>> Starting Cardano node \'node-pool2\'\n>> Wait for Cardano network to be ready\n>>>> Cardano network is not ready yet... [attempt 1]\n>>>> Cardano network is not ready yet... [attempt 2]\n>>>> Cardano network is not ready yet... [attempt 3]\n>>>> Cardano network is ready!\n>> Wait for Cardano nodes to have enough immutable files\n>> Wait for node-full1 to have enough immutable files\n>>>> node-full1 has not enough immutable files yet... [attempt 1]\n>>>> node-full1 has not enough immutable files yet... [attempt 2]\n>>>> node-full1 has not enough immutable files yet... [attempt 3]\n>>>> node-full1 has not enough immutable files yet... [attempt 4]\n>>>> node-full1 has not enough immutable files yet... [attempt 5]\n>>>> node-full1 has not enough immutable files yet... [attempt 6]\n>>>> node-full1 has not enough immutable files yet... [attempt 7]\n>>>> node-full1 has not enough immutable files yet... [attempt 8]\n>>>> node-full1 has not enough immutable files yet... [attempt 9]\n>>>> node-full1 has not enough immutable files yet... [attempt 10]\n>>>> node-full1 has not enough immutable files yet... [attempt 11]\n>>>> node-full1 has enough immutable files!\n>> Wait for node-pool1 to have enough immutable files\n>>>> node-pool1 has enough immutable files!\n>> Wait for node-pool2 to have enough immutable files\n>>>> node-pool2 has enough immutable files!\n\n>> Info: Mithril Aggregator will be attached to the first Cardano Full node\n>> Info: Mithril Signers will be attached to each Cardano SPO node\n=====================================================================\n Start Mithril nodes\n=====================================================================\n\n>> Start Mithril network\nGoing to remove artifacts_mithril-aggregator-genesis_run_48d3af826a41\n[+] Running 1/0\n \u283f Container artifacts_mithril-aggregator-genesis_run_48d3af826a41  Removed                                                       0.0s\n[+] Running 4/4\n \u283f Network artifacts_mithril_network                Created                                                                       0.1s\n \u283f Container artifacts-mithril-signer-node-pool1-1  Started                                                                       0.4s\n \u283f Container artifacts-mithril-aggregator-1         Started                                                                       0.5s\n \u283f Container artifacts-mithril-signer-node-pool2-1  Started                                                                       0.5s\n>> List of Mithril signers\n--------  --------------------------------------------------------  -----------------------------------\nSigner 1  pool1vtck0eeqq2x3d5avpxhd904y73syn4l00yurvl0teg7u6nh3afv  Certified PoolId\nSigner 2  pool1y3pxhtqytcwy3mmnawqf2ej0x9sz5frkkwkz6scfqmzyyw8u38v  Certified PoolId\n>> Wait for Mithril signers to be registered\n>>>> Not ready yet\n>>>> Not ready yet\n>>>> Not ready yet\n>>>> Not ready yet\n>>>> Not ready yet\n>>>> Not ready yet\n>>>> Not ready yet\n>>>> Not ready yet\n>>>> Not ready yet\n>>>> Not ready yet\n>>>> Not ready yet\n>>>> Not ready yet\n>>>> Ready!\n>> Bootstrap the Genesis certificate\n{"msg":"Started","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:29:07.953666896Z","hostname":"c993b6b764f2","pid":1,"node_version":"0.5.110+e2fa1e0","run_mode":"dev"}\n{Genesis bootstrap for test only!\n"msg":"BOOTSTRAP GENESIS command","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:29:07.95394937Z","hostname":"c993b6b764f2","pid":1,"config":"Configuration { environment: Production, cardano_cli_path: \\"/app/bin/cardano-cli\\", cardano_node_socket_path: \\"/data/ipc/node.sock\\", cardano_node_version: \\"10.5.1\\", network_magic: Some(42), network: \\"devnet\\", chain_observer_type: Pallas, protocol_parameters: ProtocolParameters { k: 5, m: 100, phi_f: 0.65 }, snapshot_uploader_type: Local, snapshot_bucket_name: None, snapshot_use_cdn_domain: false, server_ip: \\"0.0.0.0\\", server_port: 8080, run_interval: 1000, db_directory: \\"/data/db\\", snapshot_directory: \\".\\", data_stores_directory: \\"/data/mithril/aggregator/stores\\", genesis_verification_key: \\"5b33322c3235332c3138362c3230312c3137372c31312c3131372c3133352c3138372c3136372c3138312c3138382c32322c35392c3230362c3130352c3233312c3135302c3231352c33302c37382c3231322c37362c31362c3235322c3138302c37322c3133342c3133372c3234372c3136312c36385d\\", reset_digests_cache: false, disable_digests_cache: false, store_retention_limit: None, era_reader_adapter_type: Bootstrap, era_reader_adapter_params: None, signed_entity_types: None, snapshot_compression_algorithm: Zstandard, zstandard_parameters: None, cexplorer_pools_url: None, signer_importer_run_interval: 720, allow_unparsable_block: false, cardano_transactions_prover_cache_pool_size: 10, cardano_transactions_database_connection_pool_size: 10, cardano_transactions_signing_config: CardanoTransactionsSigningConfig { security_parameter: BlockNumber(3000), step: BlockNumber(120) }, cardano_transactions_prover_max_hashes_allowed_by_request: 100, cardano_transactions_block_streamer_max_roll_forwards_per_poll: 10000, enable_metrics_server: false, metrics_server_ip: \\"0.0.0.0\\", metrics_server_port: 9090, persist_usage_report_interval_in_seconds: 10 }"}\n{"msg":"Opening SQLite connection","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:29:07.954098066Z","hostname":"c993b6b764f2","pid":1,"src":"ConnectionBuilder","path":"/data/mithril/aggregator/stores/aggregator.sqlite3"}\n{"msg":"Enabling SQLite Write Ahead Log journal mode","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:29:07.954185725Z","hostname":"c993b6b764f2","pid":1,"src":"ConnectionBuilder"}\n{"msg":"Enabling SQLite foreign key support","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:29:07.954483371Z","hostname":"c993b6b764f2","pid":1,"src":"ConnectionBuilder"}\n{"msg":"Applying database migrations","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:29:07.954561009Z","hostname":"c993b6b764f2","pid":1,"src":"ConnectionBuilder"}\n{"msg":"Check database version","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:29:07.954635652Z","hostname":"c993b6b764f2","pid":1,"src":"DatabaseVersionChecker"}\n{"msg":"database up to date","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:29:07.954704978Z","hostname":"c993b6b764f2","pid":1,"src":"DatabaseVersionChecker"}\n{"msg":"New MithrilCertificateVerifier created","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:29:07.954756269Z","hostname":"c993b6b764f2","pid":1}\n{"msg":"Handle discrepancies at startup of epoch settings store, will record epoch settings from the configuration for epoch 3","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:29:07.956326275Z","hostname":"c993b6b764f2","pid":1,"epoch_settings_configuration":"AggregatorEpochSettings { protocol_parameters: ProtocolParameters { k: 5, m: 100, phi_f: 0.65 }, cardano_transactions_signing_config: CardanoTransactionsSigningConfig { security_parameter: BlockNumber(3000), step: BlockNumber(120) } }"}\n\n=====================================================================\n Schedule Cardano Stake Delegation\n=====================================================================\n\n>> Begin scheduled stakes delegation\n>> 11:29:08: Wait 180s until next stakes delegation round...\n'})}),"\n",(0,o.jsx)(n.h3,{id:"step-2-query-the-devnet",children:"Step 2: Query the devnet"}),"\n",(0,o.jsx)(n.p,{children:"Open a second terminal window. Watch the state queried from the devnet:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"watch -n 1 ./devnet-query.sh\n"})}),"\n",(0,o.jsx)(n.p,{children:"The networks will be queried every second and will display:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Certificate production information gathered from the ",(0,o.jsx)(n.strong,{children:"Mithril network"})]}),"\n",(0,o.jsxs)(n.li,{children:["UTXO, stake pools, and stake distribution from the ",(0,o.jsx)(n.strong,{children:"Cardano network"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'=====================================================================\n Query Mithril/Cardano devnet\n=====================================================================\n\n=====================================================================\n=== Mithril Network\n=====================================================================\n\n>> Query latest certificates\n[\n  {\n    "hash": "cbbf3fc1165ff41f2f0691643febe7f8c2d4f99b5c551d01d5f6cca538db0cd4",\n    "previous_hash": "3d1ceee23e79b1f510c7a6ce4503552495c6f7134afd04a88042d99264da8515",\n    "epoch": 15,\n    "signed_entity_type": {\n      "CardanoTransactions": [\n        15,\n        1589\n      ]\n    },\n    "metadata": {\n      "network": "devnet",\n      "version": "0.1.0",\n      "parameters": {\n        "k": 5,\n        "m": 100,\n        "phi_f": 0.65\n      },\n      "initiated_at": "2024-11-14T10:45:15.434075727Z",\n      "sealed_at": "2024-11-14T10:45:16.441653366Z",\n      "total_signers": 2\n    },\n    "protocol_message": {\n      "message_parts": {\n        "cardano_transactions_merkle_root": "ecfeb3584f505906de1fadcc6f4acaa9fda55da82c771073a83bbb288bb62b6e",\n        "next_aggregate_verification_key": "7b226d745f636f6d6d69746d656e74223a7b22726f6f74223a5b3137382c39342c33322c3132392c3132302c3132382c31372c3232352c37332c3135372c3136362c3132342c3234362c3130362c35352c33362c3135372c332c3137372c3231392c35332c3139342c3139322c39342c3133382c36332c3134332c3233312c3230332c3138362c36342c3134335d2c226e725f6c6561766573223a322c22686173686572223a6e756c6c7d2c22746f74616c5f7374616b65223a3230323830313337303631347d",\n        "latest_block_number": "1589"\n      }\n    },\n    "signed_message": "3b2242e276f1d1e8f28e5ffeb0f0c666ef3d5a5b2c8bf827576d4a513ab2de29",\n    "aggregate_verification_key": "7b226d745f636f6d6d69746d656e74223a7b22726f6f74223a5b3233322c33332c3132362c38392c3134332c3138312c32362c3130362c3131362c37392c3230392c34382c3232302c3136332c3133322c3232302c33312c3136392c3131312c3133382c3130332c39382c37332c37312c3135322c3235352c34352c3138322c39362c32382c3137362c3136355d2c226e725f6c6561766573223a322c22686173686572223a6e756c6c7d2c22746f74616c5f7374616b65223a3139303036353437303735387d"\n  },\n  {\n    "hash": "47068954d8600c214a194be00790a6108c7b397fc91f950f063c7877d8121b92",\n    "previous_hash": "3d1ceee23e79b1f510c7a6ce4503552495c6f7134afd04a88042d99264da8515",\n    "epoch": 15,\n    "signed_entity_type": {\n      "CardanoTransactions": [\n        15,\n        1574\n      ]\n    },\n    "metadata": {\n      "network": "devnet",\n      "version": "0.1.0",\n      "parameters": {\n        "k": 5,\n        "m": 100,\n        "phi_f": 0.65\n      },\n      "initiated_at": "2024-11-14T10:45:04.382631109Z",\n      "sealed_at": "2024-11-14T10:45:05.394615861Z",\n      "total_signers": 2\n    },\n    "protocol_message": {\n      "message_parts": {\n        "cardano_transactions_merkle_root": "ecfeb3584f505906de1fadcc6f4acaa9fda55da82c771073a83bbb288bb62b6e",\n        "next_aggregate_verification_key": "7b226d745f636f6d6d69746d656e74223a7b22726f6f74223a5b3137382c39342c33322c3132392c3132302c3132382c31372c3232352c37332c3135372c3136362c3132342c3234362c3130362c35352c33362c3135372c332c3137372c3231392c35332c3139342c3139322c39342c3133382c36332c3134332c3233312c3230332c3138362c36342c3134335d2c226e725f6c6561766573223a322c22686173686572223a6e756c6c7d2c22746f74616c5f7374616b65223a3230323830313337303631347d",\n        "latest_block_number": "1574"\n      }\n    },\n    "signed_message": "ed76b5a8b41e4800fd4babc5bcffe483fe9daf43342aaddefe1f197907f0af06",\n    "aggregate_verification_key": "7b226d745f636f6d6d69746d656e74223a7b22726f6f74223a5b3233322c33332c3132362c38392c3134332c3138312c32362c3130362c3131362c37392c3230392c34382c3232302c3136332c3133322c3232302c33312c3136392c3131312c3133382c3130332c39382c37332c37312c3135322c3235352c34352c3138322c39362c32382c3137362c3136355d2c226e725f6c6561766573223a322c22686173686572223a6e756c6c7d2c22746f74616c5f7374616b65223a3139303036353437303735387d"\n  }\n]\n\n>> Query latest mithril stake distributions\n[\n  {\n    "epoch": 15,\n    "hash": "61239e7ea3388238aae9336ccbce50c477ad42478f6fc1642210708118c7ca00",\n    "certificate_hash": "3d1ceee23e79b1f510c7a6ce4503552495c6f7134afd04a88042d99264da8515",\n    "created_at": "2024-11-14T10:44:11.099191475Z"\n  },\n  {\n    "epoch": 14,\n    "hash": "0c1962696593e52c21683287df30f47027ae5d5f669384f5534784e6f51cdd33",\n    "certificate_hash": "fa6fc82a1a2bf93a81f5920f1d0ac143aa73183b4b8226a54f3e16741f3705a1",\n    "created_at": "2024-11-14T10:42:55.567493973Z"\n  }\n]\n\n>> Query latest snapshots\n[\n  {\n    "digest": "4c7b06dd2bef1416391b92a46dae7d2f606ced2954b628f844b021ba5b52b15f",\n    "network": "devnet",\n    "beacon": {\n      "network": "devnet",\n      "epoch": 15,\n      "immutable_file_number": 14\n    },\n    "certificate_hash": "f601ab107b546d8791075916b9fd6ba374b30a7ce6030549e140bac04078b3b6",\n    "size": 519351,\n    "created_at": "2024-11-14T10:44:17.153390171Z",\n    "locations": [\n      "http://0.0.0.0:8080/aggregator/artifact/snapshot/4c7b06dd2bef1416391b92a46dae7d2f606ced2954b628f844b021ba5b52b15f/download"\n    ],\n    "compression_algorithm": "zstandard",\n    "cardano_node_version": "10.5.1"\n  },\n  {\n    "digest": "b98b25f505401e967df1012a4c13385290db15d157d0292e9f8290bd9933a66e",\n    "network": "devnet",\n    "beacon": {\n      "network": "devnet",\n      "epoch": 14,\n      "immutable_file_number": 13\n    },\n    "certificate_hash": "1ec38ed6f158664bf792fb2fddd08e49b52232023b4130b3ebd92e90d659f200",\n    "size": 469807,\n    "created_at": "2024-11-14T10:43:01.620428990Z",\n    "locations": [\n      "http://0.0.0.0:8080/aggregator/artifact/snapshot/b98b25f505401e967df1012a4c13385290db15d157d0292e9f8290bd9933a66e/download"\n    ],\n    "compression_algorithm": "zstandard",\n    "cardano_node_version": "10.5.1"\n  }\n]\n\n\n=====================================================================\n=== Cardano Network\n=====================================================================\n\n>> Query chain tip\n{\n  "block": 1599,\n  "epoch": 15,\n  "era": "Conway",\n  "hash": "1d46bbd5179968366568822961f8df9d0e0ea0d74bcf1b371402ddeee315ea41",\n  "slot": 1599,\n  "slotInEpoch": 99,\n  "slotsToEpochEnd": 1,\n  "syncProgress": "100.00"\n}\n\n>> Query whole utxo\n                           TxHash                                 TxIx        Amount\n--------------------------------------------------------------------------------------\n0227b08e4971e69af83e4f7f37f9b6db11a4e5b0293259bcbc18b960cca2aa34     0        2000003 lovelace + TxOutDatumNone\n07ccbb09c88f1789512879adc5c46b70f746d27fc77a938d879b0235ffd06e10     0        20000000001 lovelace + TxOutDatumNone\n08823e13632b63dcd2eaf6f064c960b94f1d51652dc218e306305ee13fec5d9f     0        2000002 lovelace + TxOutDatumNone\n099b200f28beedd811298150f55f96e3f9c100975dd1b978040e8cc667d44093     0        1000001 lovelace + TxOutDatumNone\n13c36c25cbd8afb893813f996907ab13f9f89fd46b5c9a79710996869311ae83     0        6000000 lovelace + TxOutDatumNone\n22d4daa27b05d1045f788ae981297ec6038c0856c974f8042be7209b8e6d94db     0        1000002 lovelace + TxOutDatumNone\n46e00ecedaa75c64bf23b9c4d95b74e1432570feb800ecb0ab5eb1de05a6e4f1     0        2000004 lovelace + TxOutDatumNone\n4a1c33bb474d27398bcd2d79ffca99e675850cba01655a7a7fc1110b3a0b85e3     0        1000003 lovelace + TxOutDatumNone\n993b375acdd9f28ce1e7eab5a870d382d090b6ec1ce3372581c7c8b03e356d3b     0        2000001 lovelace + TxOutDatumNone\nb9b28ace208bd3fb5feda08e6978ea274be8c2f8d8852ac8ea08dd27cd99133e     0        6000000 lovelace + TxOutDatumNone\nbf208279833e96f02cf5d91805898b40784a9516f7f122edcf1fb2c773019861     0        1000005 lovelace + TxOutDatumNone\nbf208279833e96f02cf5d91805898b40784a9516f7f122edcf1fb2c773019861     1        899993679904 lovelace + TxOutDatumNone\ne0e68233e335f20b319d220a4e3e0fbca8f4b0c493a2ba216fa81a17520de4a4     0        20000000001 lovelace + TxOutDatumNone\ne9ca751d4fc6bd00203d36184de814f6687f017ec6a4c6e481e1e188208c8b1f     0        2000005 lovelace + TxOutDatumNone\ne9ca751d4fc6bd00203d36184de814f6687f017ec6a4c6e481e1e188208c8b1f     1        899988679904 lovelace + TxOutDatumNone\nf5f61cdd76949003172e85941f4aae85ce99764b4a66e378dfb1e1f7fd1abde7     0        1000004 lovelace + TxOutDatumNone\n\n>> Query stake pools\npool1y3pxhtqytcwy3mmnawqf2ej0x9sz5frkkwkz6scfqmzyyw8u38v\npool1vtck0eeqq2x3d5avpxhd904y73syn4l00yurvl0teg7u6nh3afv\n\n>> Query stake distribution\n{\n  "pools": {\n    "24426bac045e1c48ef73eb8095664f31602a2476b3ac2d430906c442": {\n      "stakeGo": 96954320166,\n      "stakeMark": 110102978737,\n      "stakeSet": 103772355610\n    },\n    "62f167e720028d16d3ac09aed2bea4f46049d7ef7938367debca3dcd": {\n      "stakeGo": 93111150592,\n      "stakeMark": 105309514088,\n      "stakeSet": 99029015004\n    }\n  },\n  "total": {\n    "stakeGo": 190065470758,\n    "stakeMark": 215412492825,\n    "stakeSet": 202801370614\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"step-3-observe-the-devnet",children:"Step 3: Observe the devnet"}),"\n",(0,o.jsx)(n.p,{children:"Open a third terminal window. Watch the logs of each devnet node:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"watch -n 1 `LINES=5 ./devnet-log.sh`\n"})}),"\n",(0,o.jsx)(n.p,{children:"The nodes will be queried every second and will display thus:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'=====================================================================\n Logs Mithril/Cardano devnet\n=====================================================================\n\n=====================================================================\n=== Mithril Network\n=====================================================================\n\n---------------------------------------------------------------------\ndocker logs -n 5 artifacts-mithril-aggregator-1\n---------------------------------------------------------------------\n{"msg":"Marked expired open messages","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:45:00.368456608Z","hostname":"bd8372c8c9d5","pid":1,"src":"AggregatorRunner","expired_open_message":"None"}\n{"msg":">> get_open_message(signed_entity_type: CardanoTransactions(Epoch(15), BlockNumber(1559)))","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:45:00.368471645Z","hostname":"bd8372c8c9d5","pid":1,"src":"MithrilCertifierService"}\n{"msg":" \u22c5 No open message to certify, waiting\u2026","v":0,"name":"mithril-aggregator","level":30,"time":"2024-11-14T10:45:00.36863267Z","hostname":"bd8372c8c9d5","pid":1,"src":"AggregatorRuntime","time_point":"TimePoint { epoch: Epoch(15), immutable_file_number: 14, chain_point: ChainPoint { slot_number: SlotNumber(1569), block_number: BlockNumber(1569), block_hash: \\"6aadd9a1c21c53f79b703cabfc2a49032dcde2464b94ab578719b6aadb222f23\\" } }"}\n{"msg":"Incrementing \'mithril_aggregator_runtime_cycle_success_since_startup\' counter","v":0,"name":"mithril-aggregator","level":20,"time":"2024-11-14T10:45:00.368647673Z","hostname":"bd8372c8c9d5","pid":1,"src":"MetricsService"}\n{"msg":"\u2026 Cycle finished, Sleeping for 1000 ms","v":0,"name":"mithril-aggregator","level":30,"time":"2024-11-14T10:45:00.368664195Z","hostname":"bd8372c8c9d5","pid":1,"src":"AggregatorRuntime"}\n---------------------------------------------------------------------\n\n---------------------------------------------------------------------\ndocker logs -n 5 artifacts-mithril-signer-node-pool1-1\n---------------------------------------------------------------------\n{"msg":">> get_current_time_point","v":0,"name":"mithril-signer","level":20,"time":"2024-11-14T10:45:00.5408476Z","hostname":"143e20c318ed","pid":1,"src":"SignerRunner"}\n{"msg":">> get_beacon_to_sign(time_point: TimePoint (epoch: 15, immutable_file_number: 14, chain_point: ChainPoint (slot_number: 1571, block_number: 1571, block_hash: 50640d2cbcc7a36cda9bb42b127769448b3799b95613ebcc021b0b416b793942)))","v":0,"name":"mithril-signer","level":20,"time":"2024-11-14T10:45:00.541841221Z","hostname":"143e20c318ed","pid":1,"src":"SignerRunner"}\n{"msg":" \u22c5 No beacon to sign, waiting\u2026","v":0,"name":"mithril-signer","level":30,"time":"2024-11-14T10:45:00.541994982Z","hostname":"143e20c318ed","pid":1,"src":"StateMachine"}\n{"msg":"Incrementing \'mithril_signer_runtime_cycle_success_since_startup\' counter","v":0,"name":"mithril-signer","level":20,"time":"2024-11-14T10:45:00.542006483Z","hostname":"143e20c318ed","pid":1,"src":"MetricsService"}\n{"msg":"\u2026 Cycle finished, Sleeping for 700 ms","v":0,"name":"mithril-signer","level":30,"time":"2024-11-14T10:45:00.542022062Z","hostname":"143e20c318ed","pid":1,"src":"StateMachine"}\n---------------------------------------------------------------------\n\n---------------------------------------------------------------------\ndocker logs -n 5 artifacts-mithril-signer-node-pool2-1\n---------------------------------------------------------------------\n{"msg":">> get_current_time_point","v":0,"name":"mithril-signer","level":20,"time":"2024-11-14T10:45:00.526442506Z","hostname":"b675f9c9de52","pid":1,"src":"SignerRunner"}\n{"msg":">> get_beacon_to_sign(time_point: TimePoint (epoch: 15, immutable_file_number: 14, chain_point: ChainPoint (slot_number: 1571, block_number: 1571, block_hash: 50640d2cbcc7a36cda9bb42b127769448b3799b95613ebcc021b0b416b793942)))","v":0,"name":"mithril-signer","level":20,"time":"2024-11-14T10:45:00.527386742Z","hostname":"b675f9c9de52","pid":1,"src":"SignerRunner"}\n{"msg":" \u22c5 No beacon to sign, waiting\u2026","v":0,"name":"mithril-signer","level":30,"time":"2024-11-14T10:45:00.527529799Z","hostname":"b675f9c9de52","pid":1,"src":"StateMachine"}\n{"msg":"Incrementing \'mithril_signer_runtime_cycle_success_since_startup\' counter","v":0,"name":"mithril-signer","level":20,"time":"2024-11-14T10:45:00.527539103Z","hostname":"b675f9c9de52","pid":1,"src":"MetricsService"}\n{"msg":"\u2026 Cycle finished, Sleeping for 700 ms","v":0,"name":"mithril-signer","level":30,"time":"2024-11-14T10:45:00.527547906Z","hostname":"b675f9c9de52","pid":1,"src":"StateMachine"}\n---------------------------------------------------------------------\n\n\n=====================================================================\n=== Cardano Network\n=====================================================================\n\n---------------------------------------------------------------------\ntail -n 5 ./node-full1/node.log\n---------------------------------------------------------------------\n[denis-XP:cardano.node.LocalErrorPolicy:Error:63] [2024-11-14 10:45:00.36 UTC] IP LocalAddress "node-full1/ipc/node.sock@2660" ErrorPolicyUnhandledApplicationException (MuxError MuxBearerClosed "<socket: 28> closed when reading data, waiting on next header True")\n[denis-XP:cardano.node.LocalErrorPolicy:Error:63] [2024-11-14 10:45:00.36 UTC] IP LocalAddress "node-full1/ipc/node.sock@2659" ErrorPolicyUnhandledApplicationException (MuxError MuxBearerClosed "<socket: 27> closed when reading data, waiting on next header True")\n[denis-XP:cardano.node.ChainDB:Notice:23] [2024-11-14 10:45:01.00 UTC] Chain extended, new tip: d710c33fa606ae604b9de61eb10e83cd937ef4ab33cfb5afdce42e782b752a0a at slot 1572\n[denis-XP:cardano.node.Mempool:Info:31] [2024-11-14 10:45:01.00 UTC] fromList [("enclosingTime",Object (fromList [("tag",String "RisingEdge")])),("kind",String "TraceMempoolSynced")]\n[denis-XP:cardano.node.Mempool:Info:31] [2024-11-14 10:45:01.00 UTC] fromList [("enclosingTime",Object (fromList [("contents",Number 6.8471e-5),("tag",String "FallingEdgeWith")])),("kind",String "TraceMempoolSynced")]\n---------------------------------------------------------------------\n\n---------------------------------------------------------------------\ntail -n 5 ./node-pool1/node.log\n---------------------------------------------------------------------\n[denis-XP:cardano.node.LocalErrorPolicy:Error:64] [2024-11-14 10:45:00.83 UTC] IP LocalAddress "node-pool1/ipc/node.sock@3353" ErrorPolicyUnhandledApplicationException (MuxError MuxBearerClosed "<socket: 31> closed when reading data, waiting on next header True")\n[denis-XP:cardano.node.LocalErrorPolicy:Error:64] [2024-11-14 10:45:00.83 UTC] IP LocalAddress "node-pool1/ipc/node.sock@3352" ErrorPolicyUnhandledApplicationException (MuxError MuxBearerClosed "<socket: 30> closed when reading data, waiting on next header True")\n[denis-XP:cardano.node.ChainDB:Notice:22] [2024-11-14 10:45:01.00 UTC] Chain extended, new tip: d710c33fa606ae604b9de61eb10e83cd937ef4ab33cfb5afdce42e782b752a0a at slot 1572\n[denis-XP:cardano.node.Mempool:Info:30] [2024-11-14 10:45:01.00 UTC] fromList [("enclosingTime",Object (fromList [("tag",String "RisingEdge")])),("kind",String "TraceMempoolSynced")]\n[denis-XP:cardano.node.Mempool:Info:30] [2024-11-14 10:45:01.00 UTC] fromList [("enclosingTime",Object (fromList [("contents",Number 6.2125e-5),("tag",String "FallingEdgeWith")])),("kind",String "TraceMempoolSynced")]\n---------------------------------------------------------------------\n\n---------------------------------------------------------------------\ntail -n 5 ./node-pool2/node.log\n---------------------------------------------------------------------\n[denis-XP:cardano.node.Mempool:Info:30] [2024-11-14 10:45:01.00 UTC] fromList [("enclosingTime",Object (fromList [("contents",Number 5.1172e-5),("tag",String "FallingEdgeWith")])),("kind",String "TraceMempoolSynced")]\n[denis-XP:cardano.node.ChainDB:Info:22] [2024-11-14 10:45:01.00 UTC] Block fits onto some fork: d710c33fa606ae604b9de61eb10e83cd937ef4ab33cfb5afdce42e782b752a0a at slot 1572\n[denis-XP:cardano.node.ChainDB:Notice:22] [2024-11-14 10:45:01.00 UTC] Switched to a fork, new tip: d710c33fa606ae604b9de61eb10e83cd937ef4ab33cfb5afdce42e782b752a0a at slot 1572\n[denis-XP:cardano.node.Mempool:Info:30] [2024-11-14 10:45:01.00 UTC] fromList [("enclosingTime",Object (fromList [("tag",String "RisingEdge")])),("kind",String "TraceMempoolSynced")]\n[denis-XP:cardano.node.Mempool:Info:30] [2024-11-14 10:45:01.00 UTC] fromList [("enclosingTime",Object (fromList [("contents",Number 4.089e-5),("tag",String "FallingEdgeWith")])),("kind",String "TraceMempoolSynced")]\n---------------------------------------------------------------------\n\n'})}),"\n",(0,o.jsx)(n.h2,{id:"interact-with-the-mithril-aggregator-by-using-the-mithril-client",children:"Interact with the Mithril aggregator by using the Mithril client"}),"\n",(0,o.jsx)(n.h3,{id:"step-1-prepare-some-useful-variables",children:"Step 1: Prepare some useful variables"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Aggregator API endpoint URL\nexport AGGREGATOR_ENDPOINT=http://localhost:8080/aggregator\n\n# Digest of the latest produced cardano db snapshot for convenience of the demo\n# You can also modify this variable and set it to the value of the digest of a cardano db snapshot that you can retrieve at step 2\nexport SNAPSHOT_DIGEST=latest\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can pick an online test aggregator directly from the ",(0,o.jsx)(n.a,{href:"https://mithril.network/explorer",children:"Mithril Explorer"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"step-2-select-a-cardano-db-snapshot",children:"Step 2: Select a Cardano DB snapshot"}),"\n",(0,o.jsx)(n.p,{children:"List the available snapshots with which you can bootstrap a Cardano node:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"AGGREGATOR_ENDPOINT=$AGGREGATOR_ENDPOINT ./mithril-client cardano-db snapshot list\n"})}),"\n",(0,o.jsx)(n.p,{children:"You will see a list of snapshots:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"+-------+-----------+---------+------------------------------------------------------------------+------------+-----------+-----------------------------------+\n| Epoch | Immutable | Network | Digest                                                           |       Size | Locations |                           Created |\n+-------+-----------+---------+------------------------------------------------------------------+------------+-----------+-----------------------------------+\n| 539   | 10787     | preview | db5f50a060d4b813125c4263b700ecc96e5d8c8710f0430e5c80d2f0fa79b667 | 2323485648 | 1         | 2024-04-16 12:56:22.170174972 UTC |\n+-------+-----------+---------+------------------------------------------------------------------+------------+-----------+-----------------------------------+\n| 539   | 10786     | preview | 6af5dac31e7697c4481426712742f4d6391aea0a5b1df145e08e9eaa105af4a5 | 2323875790 | 1         | 2024-04-16 11:44:25.583804349 UTC |\n+-------+-----------+---------+------------------------------------------------------------------+------------+-----------+-----------------------------------+\n| 539   | 10785     | preview | 39770647f027a214ac955668dffe4d6d51b9cf67798041de1b003b21ef2208da | 2323295044 | 1         | 2024-04-16 10:31:26.056746652 UTC |\n+-------+-----------+---------+------------------------------------------------------------------+------------+-----------+-----------------------------------+\n| 539   | 10784     | preview | 9ce64187cb6af25266563e039e8d15962d281482979df94e3ac5c5ca6a914eea | 2323079205 | 1         | 2024-04-16 09:08:14.605224999 UTC |\n+-------+-----------+---------+------------------------------------------------------------------+------------+-----------+-----------------------------------+\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"step-3-show-cardano-db-snapshot-details",children:"Step 3: Show Cardano DB snapshot details"}),"\n",(0,o.jsx)(n.p,{children:"To get more details from a specific snapshot (optional), run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"AGGREGATOR_ENDPOINT=$AGGREGATOR_ENDPOINT ./mithril-client cardano-db snapshot show $SNAPSHOT_DIGEST\n"})}),"\n",(0,o.jsx)(n.p,{children:"You will see more information about the snapshot:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Epoch                 | 539                                                                                                                                                                            |\n+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Immutable File Number | 10787                                                                                                                                                                          |\n+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Network               | preview                                                                                                                                                                        |\n+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Digest                | db5f50a060d4b813125c4263b700ecc96e5d8c8710f0430e5c80d2f0fa79b667                                                                                                               |\n+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Size                  | 2323485648                                                                                                                                                                     |\n+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Cardano node version  | 10.5.1                                                                                                                                                                          |\n+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Location              | https://storage.googleapis.com/cdn.aggregator.testing-preview.api.mithril.network/preview-e539-i10787.db5f50a060d4b813125c4263b700ecc96e5d8c8710f0430e5c80d2f0fa79b667.tar.zst |\n+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Created               | 2024-04-16 12:56:22.170174972 UTC                                                                                                                                              |\n+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Compression Algorithm | Zstandard                                                                                                                                                                      |\n+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n"})}),"\n",(0,o.jsx)(n.h3,{id:"step-4-download-and-verify-the-selected-cardano-db-snapshot",children:"Step 4: Download and verify the selected Cardano DB snapshot"}),"\n",(0,o.jsx)(n.p,{children:"To download the selected snapshot from the remote location to your remote location, run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"AGGREGATOR_ENDPOINT=$AGGREGATOR_ENDPOINT ./mithril-client cardano-db download $SNAPSHOT_DIGEST\n"})}),"\n",(0,o.jsx)(n.p,{children:"You will see that the certificate chain is validated to ensure the issued certificate is genuine and then the selected snapshot archive is downloaded, unpacked and verified against the corresponding certificate."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"1/7 - Checking local disk info\u2026\n2/7 - Fetching the certificate and verifying the certificate chain\u2026\n3/7 - Downloading and unpacking the cardano db snapshot\n4/7 - Downloading and verifying digests\u2026\n5/7 - Verifying the cardano database\n6/7 - Computing the cardano db snapshot message\n7/7 - Verifying the cardano db signature\u2026\nCardano database snapshot 'bfd6621886fe1d3810e1ffb5e366c1688f9cc2ac1ee6aa40eb99ab28f0cc1fd6' archives have been successfully unpacked. Immutable files have been successfully verified with Mithril.\n\n    Files in the directory 'db' can be used to run a Cardano node with version >= 10.5.1.\n\n    If you are using Cardano Docker image, you can restore a Cardano Node with:\n\n    docker run -v cardano-node-ipc:/ipc -v cardano-node-data:/data --mount type=bind,source=\"/home/mithril/data/testnet/bfd6621886fe1d3810e1ffb5e366c1688f9cc2ac1ee6aa40eb99ab28f0cc1fd6/db\",target=/data/db/ -e NETWORK=preview ghcr.io/intersectmbo/cardano-node:10.5.1\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},12043:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/devnet-topology-ca1bd25169f32020115ed1c52a4d1d59.png"},28453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>c});var t=a(96540);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);