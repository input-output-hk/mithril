[package]
name = "mithril-aggregator"
version = "0.7.68"
description = "A Mithril Aggregator server"
authors = { workspace = true }
edition = { workspace = true }
documentation = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
repository = { workspace = true }

[features]
default = ["jemallocator"]

bundle_tls = ["reqwest/native-tls-vendored"]
jemallocator = ["dep:tikv-jemallocator"]

[dependencies]
anyhow = { workspace = true }
async-trait = { workspace = true }
chrono = { workspace = true }
clap = { workspace = true, features = ["cargo"] }
config = { workspace = true }
flate2 = "1.1.1"
gcloud-kms = { version = "1.2.1", features = ["auth"] }
gcloud-storage = { version = "1.1.0", features = ["auth"] }
hex = { workspace = true }
mithril-cardano-node-chain = { path = "../internal/cardano-node/mithril-cardano-node-chain" }
mithril-cardano-node-internal-database = { path = "../internal/cardano-node/mithril-cardano-node-internal-database" }
mithril-cli-helper = { path = "../internal/mithril-cli-helper" }
mithril-common = { path = "../mithril-common", features = ["full"] }
mithril-doc = { path = "../internal/mithril-doc" }
mithril-era = { path = "../internal/mithril-era" }
mithril-metric = { path = "../internal/mithril-metric" }
mithril-persistence = { path = "../internal/mithril-persistence" }
mithril-resource-pool = { path = "../internal/mithril-resource-pool" }
mithril-signed-entity-lock = { path = "../internal/signed-entity/mithril-signed-entity-lock" }
mithril-signed-entity-preloader = { path = "../internal/signed-entity/mithril-signed-entity-preloader" }
mithril-ticker = { path = "../internal/mithril-ticker" }
paste = "1.0.15"
percent-encoding = "2.3.1"
rayon = { workspace = true }
regex = "1.11.1"
reqwest = { workspace = true, features = [
    "default",
    "gzip",
    "zstd",
    "deflate",
    "brotli"
] }
semver = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
slog = { workspace = true, features = [
    "max_level_trace",
    "release_max_level_debug",
] }
slog-async = { workspace = true }
slog-bunyan = { workspace = true }
sqlite = { version = "0.37.0", features = ["bundled"] }
tar = "0.4.44"
thiserror = { workspace = true }
tokio = { workspace = true, features = ["macros", "rt-multi-thread", "signal"] }
tokio-util = { version = "0.7.15", features = ["codec"] }
uuid = { version = "1.17.0", features = [
    "v4",
    "fast-rng",
    "macro-diagnostics",
] }
warp = { workspace = true }
zstd = { version = "0.13.3", features = ["zstdmt"] }

[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = { version = "0.6.0", optional = true }

[dev-dependencies]
criterion = { version = "0.6.0", features = ["html_reports", "async_tokio"] }
http = "1.3.1"
httpmock = "0.7.0"
mithril-api-spec = { path = "../internal/tests/mithril-api-spec" }
mithril-common = { path = "../mithril-common", features = [
    "allow_skip_signer_certification",
    "test_tools",
] }
mithril-test-http-server = { path = "../internal/tests/mithril-test-http-server" }
mockall = { workspace = true }
slog-scope = "4.4.0"
slog-term = { workspace = true }
tempfile = "3.20.0"

[[bench]]
name = "cardano_transactions_import"
harness = false

[[bench]]
name = "cardano_transactions_get"
harness = false
