searchState.loadedDescShard("mithril_client_cli", 0, "A command line interface that uses the Mithril Client …\nError Clap\nContext for the command execution\nConfiguration error\nConfiguration parameters holder\nDescribes a generic source of configuration parameters\nError raised when a parameter cannot be converted to …\nError raised when a required parameter is not present.\nFill the holder with parameters from a source\nCollect all the configuration parameters from the source\nCommand module This module holds the subcommands that can …\nGet a reference to the configured parameters\nGet a mutable reference to the configured parameters\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFetch a parameter from the holder.\nFetch a parameter from the holder. If the parameter is not …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if JSON output is enabled\nCheck if unstable commands are enabled\nGet the shared logger\nCreate a new command context\nConstructor\nFetch a parameter from the holder. If the parameter is not …\nEnsure that unstable commands are enabled\n<code>ToString::to_string</code>, but without panic on OOM.\nStores the deprecated command name and the new command …\nTool to handle deprecated Clap commands.\nCommands for the Cardano db artifact\nCommands for the Cardano stake distribution artifact\nCommands for the Cardano Transaction Snapshot artifact &amp; …\nReturns the argument unchanged.\nReturns the argument unchanged.\nModify the result to add information on deprecated …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCommands for the Mithril stake distribution artifact\nCreate information about a deprecated command\nTools commands\nAdd an additional message to the deprecation warning. i.e. …\nMatches the deprecated command with an alias.\nCardano db management (alias: cdb)\nBackend to use for Cardano Database commands\nClap command to download a Cardano db and verify its …\nClap command to list existing Cardano dbs\nClap command to show a given Cardano db\nCardano db snapshots\nClap command to verify a Cardano db and its associated …\nDownload a Cardano db snapshot and verify its associated …\nList available Cardano db snapshots\nShow detailed information about a Cardano db snapshot\nCardano db snapshot commands\nLegacy backend\nV2 backend\nVerify a Cardano database content\nCommand execution\nMain command execution\nCardano DB Show command\nMain command execution\nExecute Cardano db command\nExecute Cardano db snapshot command\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCardano stake distribution management (alias: csd)\nDownload and verify a Cardano stake distribution …\nCardano stake distribution LIST command\nDownload and verify the given Cardano stake distribution\nList certified Cardano stake distributions\nMain command execution\nMain command execution\nExecute Cardano stake distribution command\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCardano transactions management\nCardano transactions set\nCardano transaction snapshot list command\nClap command to show a given Cardano transaction sets\nClap command to show a given Cardano transaction snapshot\nCertify that a given list of transaction hashes are …\nList Cardano transaction sets\nShow Cardano transaction sets\nCardano transaction snapshot commands\nCardano transaction certify command\nMain command execution\nCardano transaction snapshot Show command\nExecute Cardano transaction command\nExecute Cardano transaction snapshot command\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDownload and verify the given Mithril stake distribution\nList certified stake distributions\nMithril stake distribution management (alias: msd)\nDownload and verify a Mithril stake distribution …\nMithril stake distribution LIST command\nMain command execution\nMain command execution\nExecute Mithril stake distribution command\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert a restored <code>InMemory</code> ledger snapshot to another …\nClap command to convert a restored <code>InMemory</code> Mithril …\nTools commands\nUTxO-HD related commands\nUTxO-HD related commands\nMain command execution\nExecute Tools command\nExecute UTxO-HD command\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")