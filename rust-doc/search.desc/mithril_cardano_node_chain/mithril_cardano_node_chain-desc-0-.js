searchState.loadedDescShard("mithril_cardano_node_chain", 0, "This crate provides functionality for interacting with the …\nTools to request metadata, like the current epoch or the …\nTools to read chain blocks sequentially\nThe module used for parsing Cardano transactions\nThe entities used when interacting with the chain.\nTest utilities.\nCardano Cli chain observer.\nA ChainObserver pulling it’s data using a …\nA runner able to request data from a Cardano node using the\nRetrieve data from the cardano network\nChain observer builder\nError type for chain observer builder service.\nChainObserver related errors.\nType of chain observers available\n<code>CliRunner</code> trait defines the asynchronous methods for …\n<code>TEST ONLY</code> Fake chain observer\nGeneric ChainObserver error.\nError raised when the content could not be parsed.\nMissing cardano cli runner error.\nPallas chain observer.\nA runner that uses Pallas library to interact with a …\nCreate chain observer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the current chain point of the Cardano network\nRetrieve the datums associated to an address\nRetrieve the current epoch of the Cardano network\nRetrieve the current era of the Cardano network\nRetrieve the current KES period\nRetrieve the current KES period\nRetrieve the current stake distribution of the Cardano …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLaunches the chain point.\nLaunches the epoch info.\nLaunches the era info.\nLaunches the kes period.\nLaunches the stake distribution.\nLaunches the stake snapshot.\nLaunches the stake snapshot for all pools.\nLaunches a UTxO.\nChain observer builder factory\nCardanoCliChainObserver factory\nCreates a new PallasObserver\nCardanoCliRunner factory\nThe trait that reads events to either:\nPallasChainReader reads blocks with ‘chainsync’ …\nReturns the argument unchanged.\nGet the next chain block\nCalls <code>U::from(self)</code>.\nCreates a new <code>PallasChainReader</code> with the specified socket …\nSets the chain point\nA scanner that can read cardano transactions in a cardano …\nTrait that define how blocks are streamed from a Cardano …\nCardano block scanner\nBlock streamer that streams blocks with a Chain block …\nChainScannedBlocks allows to scan new blocks and handle …\nRoll backward on the chain to the previous SlotNumber\nRoll forward on the chain to the next list of ScannedBlock\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the last polled point of the chain\nFactory\nStream the next available blocks\nScan the transactions\nFactory\nError raised when building the tx datum failed.\nBytes datum field value.\nBytes datum field value.\nChainAddress represents an on chain address.\nThe action that indicates what to do next when scanning …\nDatum represents an inline datum from UTxO.\nDatums represents a list of TxDatum.\nInteger datum field value\nInteger datum field value\nError raised when the content could not be parsed.\nPoint internal representation in the Cardano chain.\nRollBackward event (we are on an incorrect fork, we need …\nRollForward event (we are still on the correct fork)\nA block scanned from a Cardano database\nTxDatum represents transaction Datum.\nTxDatumBuilder is a TxDatum builder utility.\nTxDatum related errors.\nThe discriminants of the TxDatumFieldValue enum.\nTxDatumFieldValue represents a field value of TxDatum.\nAdd a field to the builder\nHex array of the block hash\nBlock hash\nBlock number\nBuild a TxDatum\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves the fields of the datum with given type\nRetrieves the nth field of the datum with given type\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the scanned block into a list of Cardano …\nCheck if origin\nTxDatumBuilder factory\nInstantiate a new <code>RawCardanoPoint</code>\nScanned block factory\nCreate a new origin <code>RawCardanoPoint</code>\nThe slot number\nSlot number of the block\nHashes of the transactions in the block\nNumber of transactions in the block\nInspects the given bytes and returns a decoded <code>R</code> instance.\nThe parsed chain block\nThe rollback point in the chain to read (as a new valid …\nTest doubles\nDumb block scanner\nDumb block streamer\nA Fake ChainObserver for testing purpose using fixed data.\nFakeChainReader is a fake implementation of …\nAdd to the inner streamer a …\nAdd to the inner streamer several …\nAdd to the inner streamer a …\nA Cardano era, used by get_current_era\nA TimePoint, used by get_current_epoch\nA list of TxDatum, used by get_current_datums\nDecrease the block number of the current_time_point by the …\nDecrease the slot number of the current_time_point by the …\nAdd to the inner streamer several …\nAdd to the streamer several …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTotal remaining next actions\nIncrease the block number of the current_time_point by the …\nIncrease the slot number of the current_time_point by the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the last polled point to return when …\nFactory\n<code>FakeChainObserver</code> factory\nCreates a new FakeChainReader instance.\nFactory - the resulting streamer can be polled one time …\nIncrease by one the epoch of the current_time_point.\nAdd to the streamer a ChainScannedBlocks::RollBackward …\nSet the current Era get_current_era.\nSet the time point\nSet the datums that will use to compute the result of …\nSet the last polled point to return when …\nSet the last polled point to return when …\nSet the signers that will use to compute the result of …\nA list of SignerWithStake, used for …")