(function() {
    var type_impls = Object.fromEntries([["mithril_client",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26BigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/addition.rs.html#88\">Source</a><a href=\"#impl-Add%3C%26BigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/addition.rs.html#88\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/addition.rs.html#88\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&BigInt>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/addition.rs.html#119\">Source</a><a href=\"#impl-Add%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/addition.rs.html#119\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/addition.rs.html#119\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#impl-Add%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Epoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#impl-Add%3C%26Epoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&Epoch>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26SlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#impl-Add%3C%26SlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&SlotNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#113\">Source</a></span><a href=\"#impl-Add%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#113\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#113\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CBigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/addition.rs.html#88\">Source</a><a href=\"#impl-Add%3CBigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/addition.rs.html#88\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/addition.rs.html#88\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<BigInt>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/addition.rs.html#119\">Source</a><a href=\"#impl-Add%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/addition.rs.html#119\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/addition.rs.html#119\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#impl-Add%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CEpoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#impl-Add%3CEpoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Epoch>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CSlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#impl-Add%3CSlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<SlotNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Add%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#113\">Source</a></span><a href=\"#impl-Add-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#113\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#113\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#impl-AddAssign%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26Epoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#impl-AddAssign%3C%26Epoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&Epoch>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26SlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#impl-AddAssign%3C%26SlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&SlotNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#783\">Source</a></span><a href=\"#impl-AddAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#783\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#impl-AddAssign%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CEpoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#impl-AddAssign%3CEpoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<Epoch>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CSlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#impl-AddAssign%3CSlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<SlotNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-AddAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#783\">Source</a></span><a href=\"#impl-AddAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#783\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cf32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cf64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsULE-for-u64\" class=\"impl\"><a href=\"#impl-AsULE-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsULE for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ULE\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ULE\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ULE</a> = RawBytesULE&lt;8&gt;</h4></section></summary><div class='docblock'>The ULE type corresponding to <code>Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_unaligned\" class=\"method trait-impl\"><a href=\"#method.to_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_unaligned</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as AsULE&gt;::ULE</h4></section></summary><div class='docblock'>Converts from <code>Self</code> to <code>Self::ULE</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_unaligned\" class=\"method trait-impl\"><a href=\"#method.from_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_unaligned</a>(unaligned: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as AsULE&gt;::ULE) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts from <code>Self::ULE</code> to <code>Self</code>. <a>Read more</a></div></details></div></details>","AsULE","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AtomicPrimitive-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/sync/atomic.rs.html#303\">Source</a><a href=\"#impl-AtomicPrimitive-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/sync/atomic/trait.AtomicPrimitive.html\" title=\"trait core::sync::atomic::AtomicPrimitive\">AtomicPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AtomicInner\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/sync/atomic.rs.html#303\">Source</a><a href=\"#associatedtype.AtomicInner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/sync/atomic/trait.AtomicPrimitive.html#associatedtype.AtomicInner\" class=\"associatedtype\">AtomicInner</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/sync/atomic/struct.AtomicU64.html\" title=\"struct core::sync::atomic::AtomicU64\">AtomicU64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>atomic_internals</code>)</span></div></span><div class='docblock'>Temporary implementation detail.</div></details></div></details>","AtomicPrimitive","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a></span><a href=\"#impl-Binary-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Binary.html#tymethod.fmt\">Read more</a></div></details></div></details>","Binary","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a></span><a href=\"#impl-BitAnd%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-BitAnd%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a></span><a href=\"#impl-BitAnd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a></span><a href=\"#impl-BitAndAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a></span><a href=\"#impl-BitAndAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a></span><a href=\"#impl-BitOr%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-BitOr%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a></span><a href=\"#impl-BitOr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a></span><a href=\"#impl-BitOrAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a></span><a href=\"#impl-BitOrAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a></span><a href=\"#impl-BitXor%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-BitXor%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a></span><a href=\"#impl-BitXor-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a></span><a href=\"#impl-BitXorAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-BitXorAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a></span><a href=\"#impl-BitXorAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bits-for-u64\" class=\"impl\"><a href=\"#impl-Bits-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Bits for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.EMPTY\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.EMPTY\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">EMPTY</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 0u64</h4></section></summary><div class='docblock'>A value with all bits unset.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ALL\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ALL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ALL</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 18_446_744_073_709_551_615u64</h4></section></summary><div class='docblock'>A value with all bits set.</div></details></div></details>","Bits","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowDecode%3C'de,+__Context%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/de/impls.rs.html#134\">Source</a><a href=\"#impl-BorrowDecode%3C'de,+__Context%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, __Context&gt; <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.BorrowDecode.html\" title=\"trait bincode::de::BorrowDecode\">BorrowDecode</a>&lt;'de, __Context&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/de/impls.rs.html#134\">Source</a><a href=\"#method.borrow_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.BorrowDecode.html#tymethod.borrow_decode\" class=\"fn\">borrow_decode</a>&lt;D&gt;(decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"https://docs.rs/bincode/2.0.1/bincode/error/enum.DecodeError.html\" title=\"enum bincode::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.BorrowDecoder.html\" title=\"trait bincode::de::BorrowDecoder\">BorrowDecoder</a>&lt;'de, Context = __Context&gt;,</div></h4></section></summary><div class='docblock'>Attempt to decode this type with the given <a href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.BorrowDecode.html\" title=\"trait bincode::de::BorrowDecode\">BorrowDecode</a>.</div></details></div></details>","BorrowDecode<'de, __Context>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#61\">Source</a><a href=\"#impl-Bounded-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#61\">Source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#61\">Source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CarryingMulAdd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#35-46\">Source</a><a href=\"#impl-CarryingMulAdd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.CarryingMulAdd.html\" title=\"trait core::intrinsics::fallback::CarryingMulAdd\">CarryingMulAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Unsigned\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#35-46\">Source</a><a href=\"#associatedtype.Unsigned\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.CarryingMulAdd.html#associatedtype.Unsigned\" class=\"associatedtype\">Unsigned</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_intrinsics_fallbacks</code>)</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#35-46\">Source</a><a href=\"#method.carrying_mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.CarryingMulAdd.html#tymethod.carrying_mul_add\" class=\"fn\">carrying_mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_intrinsics_fallbacks</code>)</span></div></span></details></div></details>","CarryingMulAdd","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci128%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3CWrapping%3Ci128%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i128>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci16%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3CWrapping%3Ci16%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i16>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci32%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3CWrapping%3Ci32%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i32>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci64%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3CWrapping%3Ci64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i64>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci8%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3CWrapping%3Ci8%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i8>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cisize%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cisize%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<isize>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu128%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cu128%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u128>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu16%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cu16%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u16>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu32%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cu32%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u32>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu64%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u64>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu8%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cu8%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u8>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cusize%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cusize%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<usize>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cf32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">Source</a><a href=\"#impl-Cast%3Cf32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<f32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cf64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">Source</a><a href=\"#impl-Cast%3Cf64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<f64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#25\">Source</a><a href=\"#impl-CheckedAdd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedAdd.html\" title=\"trait num_traits::ops::checked::CheckedAdd\">CheckedAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#25\">Source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci128%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci128%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i128>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci16%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci16%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i16>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci32%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci32%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i32>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci64%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i64>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci8%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci8%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i8>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cisize%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cisize%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<isize>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu128%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu128%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u128>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu16%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu16%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u16>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu32%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu32%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u32>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu64%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u64>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu8%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu8%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u8>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cusize%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cusize%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<usize>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cf32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">Source</a><a href=\"#impl-CheckedCast%3Cf32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<f32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cf64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">Source</a><a href=\"#impl-CheckedCast%3Cf64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<f64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#90\">Source</a><a href=\"#impl-CheckedDiv-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedDiv.html\" title=\"trait num_traits::ops::checked::CheckedDiv\">CheckedDiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#90\">Source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedEuclid-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#185\">Source</a><a href=\"#impl-CheckedEuclid-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html\" title=\"trait num_traits::ops::euclid::CheckedEuclid\">CheckedEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#185\">Source</a><a href=\"#method.checked_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Performs euclid division that returns <code>None</code> instead of panicking on division by zero\nand instead of wrapping around on underflow and overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#185\">Source</a><a href=\"#method.checked_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Finds the euclid remainder of dividing two numbers, checking for underflow, overflow and\ndivision by zero. If any of that happens, <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#163\">Source</a><a href=\"#method.checked_div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#method.checked_div_rem_euclid\" class=\"fn\">checked_div_rem_euclid</a>(&amp;self, v: &amp;Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(Self, Self)&gt;</h4></section></summary><div class='docblock'>Returns both the quotient and remainder from checked Euclidean division. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#method.checked_div_rem_euclid\">Read more</a></div></details></div></details>","CheckedEuclid","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#68\">Source</a><a href=\"#impl-CheckedMul-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedMul.html\" title=\"trait num_traits::ops::checked::CheckedMul\">CheckedMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#68\">Source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, <code>None</code> is returned.</div></details></div></details>","CheckedMul","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedNeg-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#175\">Source</a><a href=\"#impl-CheckedNeg-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html\" title=\"trait num_traits::ops::checked::CheckedNeg\">CheckedNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#175\">Source</a><a href=\"#method.checked_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Negates a number, returning <code>None</code> for results that can’t be represented, like signed <code>MIN</code>\nvalues that can’t be positive, or non-zero unsigned values that can’t be negative. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html#tymethod.checked_neg\">Read more</a></div></details></div></details>","CheckedNeg","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedRem-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#129\">Source</a><a href=\"#impl-CheckedRem-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html\" title=\"trait num_traits::ops::checked::CheckedRem\">CheckedRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#129\">Source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Finds the remainder of dividing two numbers, checking for underflow, overflow and division\nby zero. If any of that happens, <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html#tymethod.checked_rem\">Read more</a></div></details></div></details>","CheckedRem","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShl-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#219\">Source</a><a href=\"#impl-CheckedShl-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html\" title=\"trait num_traits::ops::checked::CheckedShl\">CheckedShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#219\">Source</a><a href=\"#method.checked_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html#tymethod.checked_shl\">Read more</a></div></details></div></details>","CheckedShl","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShr-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#252\">Source</a><a href=\"#impl-CheckedShr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html\" title=\"trait num_traits::ops::checked::CheckedShr\">CheckedShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#252\">Source</a><a href=\"#method.checked_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html#tymethod.checked_shr\">Read more</a></div></details></div></details>","CheckedShr","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#46\">Source</a><a href=\"#impl-CheckedSub-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedSub.html\" title=\"trait num_traits::ops::checked::CheckedSub\">CheckedSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#46\">Source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#556-561\">Source</a></span><a href=\"#impl-Clone-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#556-561\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConditionallySelectable-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#544\">Source</a><a href=\"#impl-ConditionallySelectable-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.conditional_select\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#544\">Source</a><a href=\"#method.conditional_select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#tymethod.conditional_select\" class=\"fn\">conditional_select</a>(a: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, b: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, choice: <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Select <code>a</code> or <code>b</code> according to <code>choice</code>. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#tymethod.conditional_select\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conditional_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#544\">Source</a><a href=\"#method.conditional_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#method.conditional_assign\" class=\"fn\">conditional_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, choice: <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>)</h4></section></summary><div class='docblock'>Conditionally assign <code>other</code> to <code>self</code>, according to <code>choice</code>. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#method.conditional_assign\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conditional_swap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#544\">Source</a><a href=\"#method.conditional_swap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#method.conditional_swap\" class=\"fn\">conditional_swap</a>(a: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, b: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, choice: <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>)</h4></section></summary><div class='docblock'>Conditionally swap <code>self</code> and <code>other</code> if <code>choice == 1</code>; otherwise,\nreassign both unto themselves. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#method.conditional_swap\">Read more</a></div></details></div></details>","ConditionallySelectable","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstOne-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#166\">Source</a><a href=\"#impl-ConstOne-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.ConstOne.html\" title=\"trait num_traits::identities::ConstOne\">ConstOne</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#166\">Source</a><a href=\"#associatedconstant.ONE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.ConstOne.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 1u64</h4></section></summary><div class='docblock'>The multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","ConstOne","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstZero-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#61\">Source</a><a href=\"#impl-ConstZero-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.ConstZero.html\" title=\"trait num_traits::identities::ConstZero\">ConstZero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#61\">Source</a><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.ConstZero.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 0u64</h4></section></summary><div class='docblock'>The additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","ConstZero","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeEq-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#373\">Source</a><a href=\"#impl-ConstantTimeEq-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html\" title=\"trait subtle::ConstantTimeEq\">ConstantTimeEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#373\">Source</a><a href=\"#method.ct_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\" class=\"fn\">ct_eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are equal. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#284\">Source</a><a href=\"#method.ct_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html#method.ct_ne\" class=\"fn\">ct_ne</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are NOT equal. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html#method.ct_ne\">Read more</a></div></details></div></details>","ConstantTimeEq","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeGreater-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#917\">Source</a><a href=\"#impl-ConstantTimeGreater-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeGreater.html\" title=\"trait subtle::ConstantTimeGreater\">ConstantTimeGreater</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#917\">Source</a><a href=\"#method.ct_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeGreater.html#tymethod.ct_gt\" class=\"fn\">ct_gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class=\"docblock\"><p>Returns Choice::from(1) iff x &gt; y, and Choice::from(0) iff x &lt;= y.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This algoritm would also work for signed integers if we first\nflip the top bit, e.g. <code>let x: u8 = x ^ 0x80</code>, etc.</p>\n</div></details></div></details>","ConstantTimeGreater","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeLess-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#978\">Source</a><a href=\"#impl-ConstantTimeLess-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeLess.html\" title=\"trait subtle::ConstantTimeLess\">ConstantTimeLess</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#970\">Source</a><a href=\"#method.ct_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeLess.html#method.ct_lt\" class=\"fn\">ct_lt</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine whether <code>self &lt; other</code>. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeLess.html#method.ct_lt\">Read more</a></div></details></div></details>","ConstantTimeLess","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contiguous-for-u64\" class=\"impl\"><a href=\"#impl-Contiguous-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Contiguous for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 18_446_744_073_709_551_615u64</h4></section></summary><div class='docblock'>The upper <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 0u64</h4></section></summary><div class='docblock'>The lower <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Int\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Int\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Int</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The primitive integer type with an identical representation to this\ntype. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method trait-impl\"><a href=\"#method.from_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_integer</a>(value: Self::Int) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>If <code>value</code> is within the range for valid instances of this type,\nreturns <code>Some(converted_value)</code>, otherwise, returns <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_integer\" class=\"method trait-impl\"><a href=\"#method.into_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_integer</a>(self) -&gt; Self::Int</h4></section></summary><div class='docblock'>Perform the conversion from <code>C</code> into the underlying integral type. This\nmostly exists otherwise generic code would need unsafe for the <code>value as integer</code> <a>Read more</a></div></details></div></details>","Contiguous","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#616-619\">Source</a></span><a href=\"#impl-Debug-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#616-619\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CContext%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/de/impls.rs.html#116\">Source</a><a href=\"#impl-Decode%3CContext%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Context&gt; <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.Decode.html\" title=\"trait bincode::de::Decode\">Decode</a>&lt;Context&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/de/impls.rs.html#117\">Source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.Decode.html#tymethod.decode\" class=\"fn\">decode</a>&lt;D&gt;(decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"https://docs.rs/bincode/2.0.1/bincode/error/enum.DecodeError.html\" title=\"enum bincode::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.Decoder.html\" title=\"trait bincode::de::Decoder\">Decoder</a>&lt;Context = Context&gt;,</div></h4></section></summary><div class='docblock'>Attempt to decode this type with the given <a href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.Decode.html\" title=\"trait bincode::de::Decode\">Decode</a>.</div></details></div></details>","Decode<Context>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143894\" title=\"Tracking issue for const_default\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/default.rs.html#174\">Source</a></span><a href=\"#impl-Default-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/default.rs.html#174\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>0</code></p>\n</div></details></div></details>","Default","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#443-448\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#443-448\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DisjointBitOr-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#146-150\">Source</a><a href=\"#impl-DisjointBitOr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.DisjointBitOr.html\" title=\"trait core::intrinsics::fallback::DisjointBitOr\">DisjointBitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.disjoint_bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#146-150\">Source</a><a href=\"#method.disjoint_bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.DisjointBitOr.html#tymethod.disjoint_bitor\" class=\"fn\">disjoint_bitor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_intrinsics_fallbacks</code>)</span></div></span><div class='docblock'>See <a href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fn.disjoint_bitor.html\" title=\"fn core::intrinsics::disjoint_bitor\"><code>super::disjoint_bitor</code></a>; we just need the trait indirection to handle\ndifferent types since calling intrinsics with generics doesn’t work.</div></details></div></details>","DisjointBitOr","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#626-633\">Source</a></span><a href=\"#impl-Display-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#626-633\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26BigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#34\">Source</a><a href=\"#impl-Div%3C%26BigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#34\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#34\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&BigInt>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#378\">Source</a><a href=\"#impl-Div%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#378\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#378\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#impl-Div%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#500-503\">Source</a></span><a href=\"#impl-Div%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#500-503\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#500-503\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CBigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#84\">Source</a><a href=\"#impl-Div%3CBigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#85\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#88\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<BigInt>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#428\">Source</a><a href=\"#impl-Div%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#429\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#443\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#impl-Div%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a></span><a href=\"#impl-Div%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Same as <code>self / other.get()</code>, but because <code>other</code> is a <code>NonZero&lt;_&gt;</code>,\nthere’s never a runtime check for division-by-zero.</p>\n<p>This operation rounds towards zero, truncating any fractional\npart of the exact result, and cannot panic.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details></div></details>","Div<NonZero<u64>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Div%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#500-503\">Source</a></span><a href=\"#impl-Div-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3><div class=\"docblock\"><p>This operation rounds towards zero, truncating any\nfractional part of the exact result.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>This operation will panic if <code>other == 0</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#500-503\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#500-503\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#impl-DivAssign%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#965\">Source</a></span><a href=\"#impl-DivAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#965\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#impl-DivAssign%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.79.0\">1.79.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a></span><a href=\"#impl-DivAssign%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Same as <code>self /= other.get()</code>, but because <code>other</code> is a <code>NonZero&lt;_&gt;</code>,\nthere’s never a runtime check for division-by-zero.</p>\n<p>This operation rounds towards zero, truncating any fractional\npart of the exact result, and cannot panic.</p>\n</div></details></div></details>","DivAssign<NonZero<u64>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-DivAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#965\">Source</a></span><a href=\"#impl-DivAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#965\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/enc/impls.rs.html#88\">Source</a><a href=\"#impl-Encode-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/enc/trait.Encode.html\" title=\"trait bincode::enc::Encode\">Encode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/enc/impls.rs.html#89\">Source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bincode/2.0.1/bincode/enc/trait.Encode.html#tymethod.encode\" class=\"fn\">encode</a>&lt;E&gt;(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"https://docs.rs/bincode/2.0.1/bincode/error/enum.EncodeError.html\" title=\"enum bincode::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/enc/trait.Encoder.html\" title=\"trait bincode::enc::Encoder\">Encoder</a>,</div></h4></section></summary><div class='docblock'>Encode a given type.</div></details></div></details>","Encode","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Euclid-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#89\">Source</a><a href=\"#impl-Euclid-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html\" title=\"trait num_traits::ops::euclid::Euclid\">Euclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#89\">Source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Calculates Euclidean division, the matching method for <code>rem_euclid</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#89\">Source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Calculates the least nonnegative remainder of <code>self (mod v)</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#67\">Source</a><a href=\"#method.div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#method.div_rem_euclid\" class=\"fn\">div_rem_euclid</a>(&amp;self, v: &amp;Self) -&gt; (Self, Self)</h4></section></summary><div class='docblock'>Returns both the quotient and remainder from Euclidean division. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#method.div_rem_euclid\">Read more</a></div></details></div></details>","Euclid","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedBits-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBits-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBits.html\" title=\"trait fixed::traits_bits::FixedBits\">FixedBits</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#associatedconstant.MIN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBits.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 0u64</h4></section></summary><div class='docblock'>The smallest value that can be represented by this integer type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBits.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 18_446_744_073_709_551_615u64</h4></section></summary><div class='docblock'>The largest value that can be represented by this integer type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_SIGNED\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#associatedconstant.IS_SIGNED\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBits.html#associatedconstant.IS_SIGNED\" class=\"constant\">IS_SIGNED</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> = false</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\" title=\"primitive bool\"><code>true</code></a> if this integer type is signed.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#associatedconstant.BITS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBits.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a> = 64u32</h4></section></summary><div class='docblock'>The size of this integer type in bits.</div></details></div></details>","FixedBits","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedEquiv-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#impl-FixedEquiv-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html\" title=\"trait fixed::traits::FixedEquiv\">FixedEquiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Equiv\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#associatedtype.Equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#associatedtype.Equiv\" class=\"associatedtype\">Equiv</a> = <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>The equivalent fixed-point type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.to_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#tymethod.to_fixed_equiv\" class=\"fn\">to_fixed_equiv</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>Converts an owned value to the equivalent fixed-point type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.as_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#tymethod.as_fixed_equiv\" class=\"fn\">as_fixed_equiv</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>Converts a reference into a reference to the equivalent fixed-point\ntype.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_equiv_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.as_fixed_equiv_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#tymethod.as_fixed_equiv_mut\" class=\"fn\">as_fixed_equiv_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>Converts a mutable reference into a mutable reference to the equivalent\nfixed-point type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.from_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#tymethod.from_fixed_equiv\" class=\"fn\">from_fixed_equiv</a>(f: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts an owned equivalent fixed-point type to this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.ref_from_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#tymethod.ref_from_fixed_equiv\" class=\"fn\">ref_from_fixed_equiv</a>(f: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts a reference to the equivalent fixed-point type into a reference\nto this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.mut_from_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#tymethod.mut_from_fixed_equiv\" class=\"fn\">mut_from_fixed_equiv</a>(f: &amp;mut <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts a mutable reference to the equivalent fixed-point type into a\nmutable reference to this type.</div></details></div></details>","FixedEquiv","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChar%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ascii/ascii_char.rs.html#560\">Source</a><a href=\"#impl-From%3CChar%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ascii/ascii_char.rs.html#560\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(chr: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AsciiChar>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU16%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#543\">Source</a><a href=\"#impl-From%3CFixedU16%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#543\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU16<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU32%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#548\">Source</a><a href=\"#impl-From%3CFixedU32%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#548\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU32<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU64%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#551\">Source</a><a href=\"#impl-From%3CFixedU64%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#551\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU64<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU8%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#537\">Source</a><a href=\"#impl-From%3CFixedU8%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#537\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU8<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CU16%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-From%3CU16%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;U16&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: U16&lt;O&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<U16<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CU32%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-From%3CU32%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;U32&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: U32&lt;O&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<U32<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-From%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: U64&lt;O&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cbool%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0, const unstable\">1.28.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#89\">Source</a></span><a href=\"#impl-From%3Cbool%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#89\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a> losslessly.\nThe resulting value is <code>0</code> for <code>false</code> and <code>1</code> for <code>true</code> values.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u64::from(<span class=\"bool-val\">true</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(u64::from(<span class=\"bool-val\">false</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>","From<bool>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cchar%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0, const unstable\">1.51.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/char/convert.rs.html#58\">Source</a></span><a href=\"#impl-From%3Cchar%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\">char</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/char/convert.rs.html#69\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\">char</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\" title=\"primitive char\"><code>char</code></a> into a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>c = <span class=\"string\">'👤'</span>;\n<span class=\"kw\">let </span>u = u64::from(c);\n<span class=\"macro\">assert!</span>(<span class=\"number\">8 </span>== size_of_val(<span class=\"kw-2\">&amp;</span>u))</code></pre></div>\n</div></details></div></details>","From<char>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0, const unstable\">1.5.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#106\">Source</a></span><a href=\"#impl-From%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#106\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a> to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a> losslessly.</p>\n</div></details></div></details>","From<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0, const unstable\">1.5.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#108\">Source</a></span><a href=\"#impl-From%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#108\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a> to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a> losslessly.</p>\n</div></details></div></details>","From<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0, const unstable\">1.5.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#102\">Source</a></span><a href=\"#impl-From%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#102\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a> to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a> losslessly.</p>\n</div></details></div></details>","From<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#impl-FromBytes-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in big endian. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in little endian. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#method.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Create a number from its memory representation as a byte array in native endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#method.from_ne_bytes\">Read more</a></div></details></div></details>","FromBytes","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-u64\" class=\"impl\"><a href=\"#impl-FromBytes-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_bytes\" class=\"method trait-impl\"><a href=\"#method.ref_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_bytes</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Interprets the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_prefix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>source</code> as a <code>&amp;Self</code> without\ncopying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_suffix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;Self), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: Immutable + KnownLayout,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given bytes as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_bytes\" class=\"method trait-impl\"><a href=\"#method.mut_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_bytes</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: IntoBytes + KnownLayout,</div></h4></section></summary><div class='docblock'>Interprets the given <code>source</code> as a <code>&amp;mut Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_prefix</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: IntoBytes + KnownLayout,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>source</code> as a <code>&amp;mut Self</code> without\ncopying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_suffix</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;mut Self), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: IntoBytes + KnownLayout,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>source</code> as a <code>&amp;mut Self</code> without\ncopying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_bytes_with_elems\" class=\"method trait-impl\"><a href=\"#method.ref_from_bytes_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_bytes_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Interprets the given <code>source</code> as a <code>&amp;Self</code> with a DST length equal to\n<code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix_with_elems\" class=\"method trait-impl\"><a href=\"#method.ref_from_prefix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_prefix_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>source</code> as a DST <code>&amp;Self</code> with length\nequal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix_with_elems\" class=\"method trait-impl\"><a href=\"#method.ref_from_suffix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_suffix_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;Self), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>source</code> as a DST <code>&amp;Self</code> with length\nequal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_bytes_with_elems\" class=\"method trait-impl\"><a href=\"#method.mut_from_bytes_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_bytes_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: IntoBytes + KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Interprets the given <code>source</code> as a <code>&amp;mut Self</code> with a DST length equal\nto <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix_with_elems\" class=\"method trait-impl\"><a href=\"#method.mut_from_prefix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_prefix_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: IntoBytes + KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>source</code> as a <code>&amp;mut Self</code> with DST\nlength equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix_with_elems\" class=\"method trait-impl\"><a href=\"#method.mut_from_suffix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_suffix_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;mut Self), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: IntoBytes + KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>source</code> as a <code>&amp;mut Self</code> with DST\nlength equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_bytes\" class=\"method trait-impl\"><a href=\"#method.read_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_from_bytes</a>(source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the given <code>source</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_from_prefix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of the given <code>source</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_from_suffix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self), SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of the given <code>source</code>. <a>Read more</a></div></details></div></details>","FromBytes","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromFixed-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#impl-FromFixed-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#tymethod.from_fixed\" class=\"fn\">from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>When debug assertions are enabled, panics if the value\ndoes not fit. When debug assertions are not enabled,\nthe wrapped value can be returned, but it is not\nconsidered a breaking change if in the future it\npanics; if wrapping is required use\n<a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#tymethod.wrapping_from_fixed\" title=\"associated function fixed::traits::FromFixed::wrapping_from_fixed\"><code>wrapping_from_fixed</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.checked_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#tymethod.checked_from_fixed\" class=\"fn\">checked_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer if it fits, otherwise returns <a href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.saturating_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#tymethod.saturating_from_fixed\" class=\"fn\">saturating_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer, saturating if it does not fit.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.wrapping_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#tymethod.wrapping_from_fixed\" class=\"fn\">wrapping_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer, wrapping if it does not fit.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.overflowing_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#tymethod.overflowing_from_fixed\" class=\"fn\">overflowing_from_fixed</a>&lt;F&gt;(src: F) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the value and a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether\nan overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.unwrapped_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#method.unwrapped_from_fixed\" class=\"fn\">unwrapped_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer, panicking if it does not fit.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the value\ndoes not fit, even when debug assertions are not enabled.</p>\n</div></details></div></details>","FromFixed","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#impl-FromPrimitive-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details></div></details>","FromPrimitive","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a></span><a href=\"#impl-FromStr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an integer from a string slice with decimal digits.</p>\n<p>The characters are expected to be an optional\n<code>+</code>\nsign followed by only digits. Leading and trailing non-digit characters (including\nwhitespace) represent an error. Underscores (which are accepted in Rust literals)\nalso represent an error.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"macro\">assert_eq!</span>(u64::from_str(<span class=\"string\">\"+10\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));</code></pre></div>\n<p>Trailing space returns error:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(u64::from_str(<span class=\"string\">\"1 \"</span>).is_err());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeros-for-u64\" class=\"impl\"><a href=\"#impl-FromZeros-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromZeros for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeros. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a>Read more</a></div></details></div></details>","FromZeros","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#829-842\">Source</a></span><a href=\"#impl-Hash-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#829-842\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#829-842\">Source</a><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Integer-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itoa/1.0.15/src/itoa/lib.rs.html#221\">Source</a><a href=\"#impl-Integer-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/itoa/1.0.15/itoa/trait.Integer.html\" title=\"trait itoa::Integer\">Integer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_STR_LEN\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itoa/1.0.15/src/itoa/lib.rs.html#221\">Source</a><a href=\"#associatedconstant.MAX_STR_LEN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/itoa/1.0.15/itoa/trait.Integer.html#associatedconstant.MAX_STR_LEN\" class=\"constant\">MAX_STR_LEN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a> = 20usize</h4></section></summary><div class='docblock'>The maximum length of string that formatting an integer of this type can\nproduce on the current target platform.</div></details></div></details>","Integer","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Integer-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#impl-Integer-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.div_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.div_floor\" class=\"fn\">div_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unsigned integer division. Returns the same result as <code>div</code> (<code>/</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mod_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.mod_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.mod_floor\" class=\"fn\">mod_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unsigned integer modulo operation. Returns the same result as <code>rem</code> (<code>%</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.gcd\" class=\"fn\">gcd</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Calculates the Greatest Common Divisor (GCD) of the number and <code>other</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.lcm\" class=\"fn\">lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Calculates the Lowest Common Multiple (LCM) of the number and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd_lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.gcd_lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.gcd_lcm\" class=\"fn\">gcd_lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.is_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.is_multiple_of\" class=\"fn\">is_multiple_of</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is a multiple of <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.is_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.is_even\" class=\"fn\">is_even</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is divisible by <code>2</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_odd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.is_odd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.is_odd\" class=\"fn\">is_odd</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is not divisible by <code>2</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.div_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.div_rem\" class=\"fn\">div_rem</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class=\"docblock\"><p>Simultaneous truncated integer division and modulus.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.div_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_ceil\" class=\"fn\">div_ceil</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Ceiled integer division. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extended_gcd_lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.extended_gcd_lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.extended_gcd_lcm\" class=\"fn\">extended_gcd_lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"struct\" href=\"https://docs.rs/num-integer/0.1/num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Greatest common divisor, least common multiple, and Bézout coefficients.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extended_gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#159-161\">Source</a><a href=\"#method.extended_gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.extended_gcd\" class=\"fn\">extended_gcd</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-integer/0.1/num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Greatest common divisor and Bézout coefficients. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.extended_gcd\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.divides\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#206\">Source</a><a href=\"#method.divides\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.divides\" class=\"fn\">divides</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Please use is_multiple_of instead</span></div></span><div class='docblock'>Deprecated, use <code>is_multiple_of</code> instead.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_mod_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#279\">Source</a><a href=\"#method.div_mod_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_mod_floor\" class=\"fn\">div_mod_floor</a>(&amp;self, other: &amp;Self) -&gt; (Self, Self)</h4></section></summary><div class='docblock'>Simultaneous floored integer division and modulus.\nReturns <code>(quotient, remainder)</code>. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_mod_floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#303-305\">Source</a><a href=\"#method.next_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.next_multiple_of\" class=\"fn\">next_multiple_of</a>(&amp;self, other: &amp;Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Rounds up to nearest multiple of argument. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.next_multiple_of\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prev_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#336-338\">Source</a><a href=\"#method.prev_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.prev_multiple_of\" class=\"fn\">prev_multiple_of</a>(&amp;self, other: &amp;Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Rounds down to nearest multiple of argument. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.prev_multiple_of\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#353-355\">Source</a><a href=\"#method.dec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.dec\" class=\"fn\">dec</a>(&amp;mut self)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Decrements self by one. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.dec\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#370-372\">Source</a><a href=\"#method.inc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.inc\" class=\"fn\">inc</a>(&amp;mut self)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Increments self by one. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.inc\">Read more</a></div></details></div></details>","Integer","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoBytes-for-u64\" class=\"impl\"><a href=\"#impl-IntoBytes-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a><div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_bytes\" class=\"method trait-impl\"><a href=\"#method.as_mut_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_mut_bytes</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: FromBytes,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SizeError&lt;&amp;Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;&gt;<div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_prefix</a>(\n    &amp;self,\n    dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SizeError&lt;&amp;Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;&gt;<div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_suffix</a>(\n    &amp;self,\n    dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SizeError&lt;&amp;Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;&gt;<div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>dst</code>. <a>Read more</a></div></details></div></details>","IntoBytes","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/value.rs.html#336\">Source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, E&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.IntoDeserializer.html\" title=\"trait serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/value.rs.html#336\">Source</a><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"https://docs.rs/serde/1.0.219/serde/de/value/struct.U64Deserializer.html\" title=\"struct serde::de::value::U64Deserializer\">U64Deserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/value.rs.html#336\">Source</a><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/serde/1.0.219/serde/de/value/struct.U64Deserializer.html\" title=\"struct serde::de::value::U64Deserializer\">U64Deserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KnownLayout-for-u64\" class=\"impl\"><a href=\"#impl-KnownLayout-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl KnownLayout for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PointerMetadata\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PointerMetadata\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PointerMetadata</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of metadata stored in a pointer to <code>Self</code>. <a>Read more</a></div></details></div></details>","KnownLayout","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI128%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#590\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI128%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#590\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI128<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI16%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#587\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI16%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#587\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI16<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI32%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#588\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI32%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#588\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI32<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI64%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#589\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI64%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#589\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI64<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI8%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#586\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI8%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#586\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI8<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU128%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#595\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU128%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#595\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU128<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU16%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#592\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU16%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#592\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU16<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU32%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#593\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU32%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#593\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU32<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU64%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#594\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU64%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#594\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU64<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU8%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#591\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU8%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#591\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU8<UTerm>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cbool%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#898\">Source</a><a href=\"#impl-LosslessTryFrom%3Cbool%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#898\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<bool>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#909\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#909\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#903\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#903\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#905\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#905\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#907\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#907\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#901\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#901\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#911\">Source</a><a href=\"#impl-LosslessTryFrom%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#911\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#922\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#922\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#915\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#915\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#917\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#917\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#919\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#919\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#913\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#913\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#924\">Source</a><a href=\"#impl-LosslessTryFrom%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#924\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU128%3CFracSrc%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#676\">Source</a><a href=\"#impl-LossyFrom%3CFixedU128%3CFracSrc%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#676\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU128<FracSrc>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU16%3CFracSrc%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#673\">Source</a><a href=\"#impl-LossyFrom%3CFixedU16%3CFracSrc%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#673\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU16<FracSrc>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU32%3CFracSrc%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#674\">Source</a><a href=\"#impl-LossyFrom%3CFixedU32%3CFracSrc%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#674\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU32<FracSrc>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU64%3CFracSrc%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#675\">Source</a><a href=\"#impl-LossyFrom%3CFixedU64%3CFracSrc%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#675\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU64<FracSrc>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU8%3CFracSrc%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#672\">Source</a><a href=\"#impl-LossyFrom%3CFixedU8%3CFracSrc%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#672\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU8<FracSrc>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cbool%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#898\">Source</a><a href=\"#impl-LossyFrom%3Cbool%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#898\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<bool>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#915\">Source</a><a href=\"#impl-LossyFrom%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#915\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#917\">Source</a><a href=\"#impl-LossyFrom%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#917\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#919\">Source</a><a href=\"#impl-LossyFrom%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#919\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#913\">Source</a><a href=\"#impl-LossyFrom%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#913\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerExp-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#634-637\">Source</a></span><a href=\"#impl-LowerExp-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.LowerExp.html\" title=\"trait core::fmt::LowerExp\">LowerExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#634-637\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.LowerExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.LowerExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerExp","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a></span><a href=\"#impl-LowerHex-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26BigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/multiplication.rs.html#71\">Source</a><a href=\"#impl-Mul%3C%26BigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/multiplication.rs.html#71\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/multiplication.rs.html#71\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&BigInt>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/multiplication.rs.html#516\">Source</a><a href=\"#impl-Mul%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/multiplication.rs.html#516\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/multiplication.rs.html#516\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#impl-Mul%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26FixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/arith.rs.html#568\">Source</a><a href=\"#impl-Mul%3C%26FixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/arith.rs.html#568\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/arith.rs.html#568\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&FixedU64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#358\">Source</a></span><a href=\"#impl-Mul%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#358\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#358\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CBigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/multiplication.rs.html#71\">Source</a><a href=\"#impl-Mul%3CBigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/multiplication.rs.html#71\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/multiplication.rs.html#71\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<BigInt>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/multiplication.rs.html#516\">Source</a><a href=\"#impl-Mul%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/multiplication.rs.html#516\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/multiplication.rs.html#516\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#impl-Mul%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/arith.rs.html#568\">Source</a><a href=\"#impl-Mul%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/arith.rs.html#568\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/arith.rs.html#568\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<FixedU64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Mul%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#358\">Source</a></span><a href=\"#impl-Mul-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#358\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#358\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAdd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#71\">Source</a><a href=\"#impl-MulAdd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html\" title=\"trait num_traits::ops::mul_add::MulAdd\">MulAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#71\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the fused multiply-add.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#71\">Source</a><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html\" title=\"trait num_traits::ops::mul_add::MulAdd\">MulAdd</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#associatedtype.Output\" title=\"type num_traits::ops::mul_add::MulAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the fused multiply-add operation <code>(self * a) + b</code></div></details></div></details>","MulAdd","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAddAssign-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#101\">Source</a><a href=\"#impl-MulAddAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAddAssign.html\" title=\"trait num_traits::ops::mul_add::MulAddAssign\">MulAddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#101\">Source</a><a href=\"#method.mul_add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAddAssign.html#tymethod.mul_add_assign\" class=\"fn\">mul_add_assign</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the fused multiply-add assignment operation <code>*self = (*self * a) + b</code></div></details></div></details>","MulAddAssign","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#impl-MulAssign%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#908\">Source</a></span><a href=\"#impl-MulAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#908\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#impl-MulAssign%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-MulAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#908\">Source</a></span><a href=\"#impl-MulAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#908\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#68\">Source</a></span><a href=\"#impl-Not-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#68\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#68\">Source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/lib.rs.html#174\">Source</a><a href=\"#impl-Num-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/lib.rs.html#174\">Source</a><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/lib.rs.html#174\">Source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Convert from a string and radix (typically <code>2..=36</code>). <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#tymethod.from_str_radix\">Read more</a></div></details></div></details>","Num","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumBufferTrait-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num_buffer.rs.html#26-33\">Source</a><a href=\"#impl-NumBufferTrait-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/num_buffer/trait.NumBufferTrait.html\" title=\"trait core::fmt::num_buffer::NumBufferTrait\">NumBufferTrait</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.BUF_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num_buffer.rs.html#26-33\">Source</a><a href=\"#associatedconstant.BUF_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/num_buffer/trait.NumBufferTrait.html#associatedconstant.BUF_SIZE\" class=\"constant\">BUF_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a> = 20usize</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_format_into</code>)</span></div></span><div class='docblock'>Maximum number of digits in decimal base of the implemented integer.</div></details></div></details>","NumBufferTrait","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumCast-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#686\">Source</a><a href=\"#impl-NumCast-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#686\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html#tymethod.from\" class=\"fn\">from</a>&lt;N&gt;(n: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a>,</div></h4></section></summary><div class='docblock'>Creates a number from another value that can be converted into\na primitive via the <code>ToPrimitive</code> trait. If the source value cannot be\nrepresented by the target type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html#tymethod.from\">Read more</a></div></details></div></details>","NumCast","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a></span><a href=\"#impl-Octal-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Octal.html#tymethod.fmt\">Read more</a></div></details></div></details>","Octal","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#166\">Source</a><a href=\"#impl-One-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#166\">Source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#166\">Source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#118\">Source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","One","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a></span><a href=\"#impl-Ord-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1013-1015\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1052-1054\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1078-1080\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingAdd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#26\">Source</a><a href=\"#impl-OverflowingAdd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingAdd.html\" title=\"trait num_traits::ops::overflowing::OverflowingAdd\">OverflowingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#26\">Source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingAdd.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingAdd","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-OverflowingCast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-OverflowingCast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-OverflowingCast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-OverflowingCast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-OverflowingCast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-OverflowingCast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-OverflowingCast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-OverflowingCast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-OverflowingCast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-OverflowingCast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-OverflowingCast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-OverflowingCast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingMul-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#68\">Source</a><a href=\"#impl-OverflowingMul-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingMul.html\" title=\"trait num_traits::ops::overflowing::OverflowingMul\">OverflowingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#68\">Source</a><a href=\"#method.overflowing_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingMul.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the product along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingMul","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingSub-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#47\">Source</a><a href=\"#impl-OverflowingSub-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingSub.html\" title=\"trait num_traits::ops::overflowing::OverflowingSub\">OverflowingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#47\">Source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingSub.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingSub","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedFe32-for-u64\" class=\"impl\"><a href=\"#impl-PackedFe32-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl PackedFe32 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ONE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ONE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 1u64</h4></section></summary><div class='docblock'>The one constant, for which stdlib provides no existing trait.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack\" class=\"method trait-impl\"><a href=\"#method.unpack\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unpack</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Extracts the coefficient of the x^n from the packed polynomial.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_by_x_then_add\" class=\"method trait-impl\"><a href=\"#method.mul_by_x_then_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_by_x_then_add</a>(&amp;mut self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, add: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Multiply the polynomial by x, drop its highest coefficient (and return it), and\nadd a new field element to the now-0 constant coefficient. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.WIDTH\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.WIDTH\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">WIDTH</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The number of fe32s that can fit into the type; computed as floor(bitwidth / 5).</div></details></div></details>","PackedFe32","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParseHex-for-u64\" class=\"impl\"><a href=\"#impl-ParseHex-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ParseHex for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_hex\" class=\"method trait-impl\"><a href=\"#method.parse_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_hex</a>(input: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, ParseError&gt;</h4></section></summary><div class='docblock'>Parse the value from hex.</div></details></div></details>","ParseHex","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#56\">Source</a><a href=\"#impl-PartialEq%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#56\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<&BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26Epoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#121\">Source</a><a href=\"#impl-PartialEq%3C%26Epoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#121\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<&Epoch>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26SlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#48\">Source</a><a href=\"#impl-PartialEq%3C%26SlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#48\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<&SlotNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#56\">Source</a><a href=\"#impl-PartialEq%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#56\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CEpoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#121\">Source</a><a href=\"#impl-PartialEq%3CEpoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#121\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Epoch>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#impl-PartialEq%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#impl-PartialEq%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#impl-PartialEq%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#impl-PartialEq%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#impl-PartialEq%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#impl-PartialEq%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#impl-PartialEq%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#impl-PartialEq%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#impl-PartialEq%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CSlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#48\">Source</a><a href=\"#impl-PartialEq%3CSlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#48\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<SlotNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CValue%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.143/src/serde_json/value/partial_eq.rs.html#97-103\">Source</a><a href=\"#impl-PartialEq%3CValue%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.143/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.143/src/serde_json/value/partial_eq.rs.html#97-103\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.143/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Value>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143800\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1836-1838\">Source</a></span><a href=\"#impl-PartialEq-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1836-1838\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1836-1838\">Source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#impl-PartialOrd%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#impl-PartialOrd%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#impl-PartialOrd%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#impl-PartialOrd%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#impl-PartialOrd%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#impl-PartialOrd%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#impl-PartialOrd%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#impl-PartialOrd%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#impl-PartialOrd%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a></span><a href=\"#impl-PartialOrd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#94\">Source</a><a href=\"#impl-Pow%3C%26u16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#94\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#94\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#95\">Source</a><a href=\"#impl-Pow%3C%26u32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#95\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#95\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#93\">Source</a><a href=\"#impl-Pow%3C%26u8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#93\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#93\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26usize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#96\">Source</a><a href=\"#impl-Pow%3C%26usize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#96\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#96\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CPInt%3CU%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#impl-Pow%3CPInt%3CU%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.NonZero.html\" title=\"trait typenum::marker_traits::NonZero\">NonZero</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<PInt<U>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CUInt%3CU,+B%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#impl-Pow%3CUInt%3CU,+B%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, B&gt; <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,\n    B: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Bit.html\" title=\"trait typenum::marker_traits::Bit\">Bit</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<UInt<U, B>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CUTerm%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#impl-Pow%3CUTerm%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<UTerm>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CZ0%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#impl-Pow%3CZ0%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<Z0>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#94\">Source</a><a href=\"#impl-Pow%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#94\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#94\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#95\">Source</a><a href=\"#impl-Pow%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#95\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#95\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#93\">Source</a><a href=\"#impl-Pow%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#93\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#93\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#96\">Source</a><a href=\"#impl-Pow%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#96\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#96\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PrimInt-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#impl-PrimInt-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.count_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of ones in the binary representation of <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.count_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of zeros in the binary representation of <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.leading_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading ones in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.leading_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.leading_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading zeros in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.leading_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.trailing_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing ones in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.trailing_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.trailing_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing zeros in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.trailing_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.rotate_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the end of the resulting integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.rotate_right\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the beginning of the resulting integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_right\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.signed_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shl\" class=\"fn\">signed_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.signed_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shr\" class=\"fn\">signed_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, copying\nthe “sign bit” in the most significant bits even for unsigned types. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.unsigned_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shl\" class=\"fn\">unsigned_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.unsigned_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shr\" class=\"fn\">unsigned_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, filling\nzeros in the most significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.swap_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Reverses the byte order of the integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.swap_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.reverse_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Reverses the order of bits in the integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.reverse_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.from_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert an integer from big endian to the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.from_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert an integer from little endian to the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.to_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to big endian from the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to little endian from the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Raises self to the power of <code>exp</code>, using exponentiation by squaring. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.pow\">Read more</a></div></details></div></details>","PrimInt","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a></span><a href=\"#impl-Product%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by multiplying\nthe items.</div></details></div></details>","Product<&'a u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a></span><a href=\"#impl-Product-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by multiplying\nthe items.</div></details></div></details>","Product","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RandomGen%3CGenerator,+OUTPUT%3E-for-u64\" class=\"impl\"><a href=\"#impl-RandomGen%3CGenerator,+OUTPUT%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Generator, const OUTPUT: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; RandomGen&lt;Generator, OUTPUT&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Generator: Rng&lt;OUTPUT&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method trait-impl\"><a href=\"#method.random\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">random</a>(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut Generator</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Return a random instance of the implementing type, from the specified RNG instance.</div></details></div></details>","RandomGen<Generator, OUTPUT>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RandomRange%3CGenerator,+OUTPUT%3E-for-u64\" class=\"impl\"><a href=\"#impl-RandomRange%3CGenerator,+OUTPUT%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Generator, const OUTPUT: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; RandomRange&lt;Generator, OUTPUT&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Generator: Rng&lt;OUTPUT&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.random_range\" class=\"method trait-impl\"><a href=\"#method.random_range\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">random_range</a>&lt;Bounds&gt;(rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut Generator</a>, bounds: Bounds) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Bounds: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class='docblock'>Return a ranged number of the implementing type, from the specified RNG instance. <a>Read more</a></div></details></div></details>","RandomRange<Generator, OUTPUT>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RangePattern-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/pat.rs.html#59-62\">Source</a><a href=\"#impl-RangePattern-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/pat/trait.RangePattern.html\" title=\"trait core::pat::RangePattern\">RangePattern</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/pat.rs.html#59-62\">Source</a><a href=\"#associatedconstant.MIN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://doc.rust-lang.org/1.90.0/core/pat/trait.RangePattern.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 0u64</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern_type_range_trait</code>)</span></div></span><div class='docblock'>Trait version of the inherent <code>MIN</code> assoc const.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/pat.rs.html#59-62\">Source</a><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://doc.rust-lang.org/1.90.0/core/pat/trait.RangePattern.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 18_446_744_073_709_551_615u64</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern_type_range_trait</code>)</span></div></span><div class='docblock'>Trait version of the inherent <code>MIN</code> assoc const.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/pat.rs.html#59-62\">Source</a><a href=\"#method.sub_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/pat/trait.RangePattern.html#tymethod.sub_one\" class=\"fn\">sub_one</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern_type_range_trait</code>)</span></div></span><div class='docblock'>A compile-time helper to subtract 1 for exclusive ranges.</div></details></div></details>","RangePattern","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26BigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#265\">Source</a><a href=\"#impl-Rem%3C%26BigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#265\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#265\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&BigInt>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#544\">Source</a><a href=\"#impl-Rem%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#544\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#544\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#impl-Rem%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#606-609\">Source</a></span><a href=\"#impl-Rem%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#606-609\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#606-609\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CBigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#315\">Source</a><a href=\"#impl-Rem%3CBigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#316\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#319\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<BigInt>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#618\">Source</a><a href=\"#impl-Rem%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#619\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#622\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#impl-Rem%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a></span><a href=\"#impl-Rem%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>This operation satisfies <code>n % d == n - (n / d) * d</code>, and cannot panic.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details></div></details>","Rem<NonZero<u64>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Rem%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#606-609\">Source</a></span><a href=\"#impl-Rem-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3><div class=\"docblock\"><p>This operation satisfies <code>n % d == n - (n / d) * d</code>. The\nresult has the same sign as the left operand.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>This operation will panic if <code>other == 0</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#606-609\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#606-609\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#591\">Source</a><a href=\"#impl-RemAssign%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#591\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#impl-RemAssign%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#1026\">Source</a></span><a href=\"#impl-RemAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#1026\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#591\">Source</a><a href=\"#impl-RemAssign%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#591\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#impl-RemAssign%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.79.0\">1.79.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a></span><a href=\"#impl-RemAssign%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>This operation satisfies <code>n % d == n - (n / d) * d</code>, and cannot panic.</p>\n</div></details></div></details>","RemAssign<NonZero<u64>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-RemAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#1026\">Source</a></span><a href=\"#impl-RemAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#1026\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Roots-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#385\">Source</a><a href=\"#impl-Roots-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html\" title=\"trait num_integer::roots::Roots\">Roots</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_root\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#385\">Source</a><a href=\"#method.nth_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#tymethod.nth_root\" class=\"fn\">nth_root</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the truncated principal <code>n</code>th root of an integer\n– <code>if x &gt;= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }</code> <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#tymethod.nth_root\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#385\">Source</a><a href=\"#method.sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.sqrt\" class=\"fn\">sqrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the truncated principal square root of an integer – <code>⌊√x⌋</code> <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cbrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#385\">Source</a><a href=\"#method.cbrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.cbrt\" class=\"fn\">cbrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the truncated principal cube root of an integer –\n<code>if x &gt;= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }</code> <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.cbrt\">Read more</a></div></details></div></details>","Roots","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SampleUniform-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distr/uniform_int.rs.html#271\">Source</a><a href=\"#impl-SampleUniform-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distr/uniform/trait.SampleUniform.html\" title=\"trait rand::distr::uniform::SampleUniform\">SampleUniform</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Sampler\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distr/uniform_int.rs.html#271\">Source</a><a href=\"#associatedtype.Sampler\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://rust-random.github.io/rand/rand/distr/uniform/trait.SampleUniform.html#associatedtype.Sampler\" class=\"associatedtype\">Sampler</a> = <a class=\"struct\" href=\"https://rust-random.github.io/rand/rand/distr/uniform/int/struct.UniformInt.html\" title=\"struct rand::distr::uniform::int::UniformInt\">UniformInt</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>The <code>UniformSampler</code> implementation supporting type <code>X</code>.</div></details></div></details>","SampleUniform","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Saturating-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#32\">Source</a><a href=\"#impl-Saturating-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html\" title=\"trait num_traits::ops::saturating::Saturating\">Saturating</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#32\">Source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#32\">Source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.</div></details></div></details>","Saturating","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#55\">Source</a><a href=\"#impl-SaturatingAdd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingAdd.html\" title=\"trait num_traits::ops::saturating::SaturatingAdd\">SaturatingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#55\">Source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Saturating addition. Computes <code>self + other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingAdd","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-SaturatingCast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-SaturatingCast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-SaturatingCast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-SaturatingCast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-SaturatingCast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-SaturatingCast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-SaturatingCast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-SaturatingCast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-SaturatingCast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-SaturatingCast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-SaturatingCast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-SaturatingCast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingMul-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#97\">Source</a><a href=\"#impl-SaturatingMul-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingMul.html\" title=\"trait num_traits::ops::saturating::SaturatingMul\">SaturatingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#97\">Source</a><a href=\"#method.saturating_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingMul.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Saturating multiplication. Computes <code>self * other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingMul","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#76\">Source</a><a href=\"#impl-SaturatingSub-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingSub.html\" title=\"trait num_traits::ops::saturating::SaturatingSub\">SaturatingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#76\">Source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Saturating subtraction. Computes <code>self - other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingSub","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/ser/impls.rs.html#32\">Source</a><a href=\"#impl-Serialize-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/ser/impls.rs.html#32\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26i128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26i16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26i32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26i64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26i8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26isize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26isize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26u128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26u16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26u32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26u8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26usize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26usize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Shl%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cisize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cusize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26i128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26i16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26i32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26i64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26i8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26isize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26isize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26u128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26u16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26u32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26u8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26usize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26usize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-ShlAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cisize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cusize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26i128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26i16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26i32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26i64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26i8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26isize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26isize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26u128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26u16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26u32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26u8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26usize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26usize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Shr%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cisize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cusize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26i128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26i16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26i32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26i64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26i8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26isize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26isize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26u128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26u16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26u32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26u8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26usize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26usize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-ShrAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cisize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cusize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdElement-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/vector.rs.html#1135\">Source</a><a href=\"#impl-SimdElement-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/vector/trait.SimdElement.html\" title=\"trait core::core_simd::vector::SimdElement\">SimdElement</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Mask\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/vector.rs.html#1136\">Source</a><a href=\"#associatedtype.Mask\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/vector/trait.SimdElement.html#associatedtype.Mask\" class=\"associatedtype\">Mask</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>portable_simd</code>)</span></div></span><div class='docblock'>The mask element type corresponding to this element type.</div></details></div></details>","SimdElement","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Step-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#impl-Step-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html\" title=\"trait core::iter::range::Step\">Step</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.forward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.forward\" class=\"fn\">forward</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.forward\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.backward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.backward\" class=\"fn\">backward</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.backward\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.forward_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.forward_unchecked\" class=\"fn\">forward_unchecked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.forward_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.backward_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.backward_unchecked\" class=\"fn\">backward_unchecked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.backward_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.steps_between\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.steps_between\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#tymethod.steps_between\" class=\"fn\">steps_between</a>(start: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, end: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the bounds on the number of <em>successor</em> steps required to get from <code>start</code> to <code>end</code>\nlike <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.size_hint\" title=\"method core::iter::traits::iterator::Iterator::size_hint\"><code>Iterator::size_hint()</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#tymethod.steps_between\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward_checked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.forward_checked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#tymethod.forward_checked\" class=\"fn\">forward_checked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#tymethod.forward_checked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward_checked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.backward_checked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#tymethod.backward_checked\" class=\"fn\">backward_checked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#tymethod.backward_checked\">Read more</a></div></details></div></details>","Step","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26BigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/subtraction.rs.html#87\">Source</a><a href=\"#impl-Sub%3C%26BigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/subtraction.rs.html#87\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/subtraction.rs.html#87\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&BigInt>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/subtraction.rs.html#147\">Source</a><a href=\"#impl-Sub%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/subtraction.rs.html#147\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/subtraction.rs.html#147\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#impl-Sub%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26Epoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#impl-Sub%3C%26Epoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&Epoch>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26SlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#impl-Sub%3C%26SlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&SlotNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#225\">Source</a></span><a href=\"#impl-Sub%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#225\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#225\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CBigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/subtraction.rs.html#123\">Source</a><a href=\"#impl-Sub%3CBigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/subtraction.rs.html#124\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/subtraction.rs.html#127\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<BigInt>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/subtraction.rs.html#220\">Source</a><a href=\"#impl-Sub%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/subtraction.rs.html#221\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/subtraction.rs.html#236\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#impl-Sub%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CEpoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#impl-Sub%3CEpoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Epoch>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CSlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#impl-Sub%3CSlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<SlotNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Sub%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#225\">Source</a></span><a href=\"#impl-Sub-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#225\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#225\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#impl-SubAssign%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26Epoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#impl-SubAssign%3C%26Epoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&Epoch>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26SlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#impl-SubAssign%3C%26SlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&SlotNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#850\">Source</a></span><a href=\"#impl-SubAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#850\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#impl-SubAssign%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.BlockNumber.html\" title=\"struct mithril_client::common::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<BlockNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CEpoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#impl-SubAssign%3CEpoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.Epoch.html\" title=\"struct mithril_client::common::Epoch\">Epoch</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<Epoch>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CSlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#impl-SubAssign%3CSlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_client/common/struct.SlotNumber.html\" title=\"struct mithril_client::common::SlotNumber\">SlotNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<SlotNumber>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-SubAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<U64<O>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#850\">Source</a></span><a href=\"#impl-SubAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#850\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a></span><a href=\"#impl-Sum%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum<&'a u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a></span><a href=\"#impl-Sum-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBigInt-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#357\">Source</a><a href=\"#impl-ToBigInt-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/trait.ToBigInt.html\" title=\"trait num_bigint::bigint::ToBigInt\">ToBigInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bigint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#357\">Source</a><a href=\"#method.to_bigint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/trait.ToBigInt.html#tymethod.to_bigint\" class=\"fn\">to_bigint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <a href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\"><code>BigInt</code></a>.</div></details></div></details>","ToBigInt","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBigUint-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#584\">Source</a><a href=\"#impl-ToBigUint-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/trait.ToBigUint.html\" title=\"trait num_bigint::biguint::ToBigUint\">ToBigUint</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_biguint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#584\">Source</a><a href=\"#method.to_biguint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/trait.ToBigUint.html#tymethod.to_biguint\" class=\"fn\">to_biguint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <a href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\"><code>BigUint</code></a>.</div></details></div></details>","ToBigUint","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBytes-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#impl-ToBytes-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in big-endian byte order. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in little-endian byte order. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#method.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in native byte order. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#method.to_ne_bytes\">Read more</a></div></details></div></details>","ToBytes","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToFixed-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#impl-ToFixed-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#tymethod.to_fixed\" class=\"fn\">to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>When debug assertions are enabled, panics if the value\ndoes not fit. When debug assertions are not enabled,\nthe wrapped value can be returned, but it is not\nconsidered a breaking change if in the future it\npanics; if wrapping is required use\n<a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#tymethod.wrapping_to_fixed\" title=\"method fixed::traits::ToFixed::wrapping_to_fixed\"><code>wrapping_to_fixed</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.checked_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#tymethod.checked_to_fixed\" class=\"fn\">checked_to_fixed</a>&lt;F&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number if it fits, otherwise returns <a href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.saturating_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#tymethod.saturating_to_fixed\" class=\"fn\">saturating_to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number, saturating if it does not fit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.wrapping_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#tymethod.wrapping_to_fixed\" class=\"fn\">wrapping_to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number, wrapping if it does not fit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.overflowing_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#tymethod.overflowing_to_fixed\" class=\"fn\">overflowing_to_fixed</a>&lt;F&gt;(self) -&gt; (F, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a>\nindicating whether an overflow has occurred. On overflow, the\nwrapped value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.unwrapped_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#method.unwrapped_to_fixed\" class=\"fn\">unwrapped_to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number, panicking if it does not fit.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the value does not fit, even when debug\nassertions are not enabled.</p>\n</div></details></div></details>","ToFixed","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#impl-ToPrimitive-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details></div></details>","ToPrimitive","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToUsize-for-u64\" class=\"impl\"><a href=\"#impl-ToUsize-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToUsize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>converts self to usize</div></details></div></details>","ToUsize","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26BigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#132\">Source</a><a href=\"#impl-TryFrom%3C%26BigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#132\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#132\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&BigInt>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#419\">Source</a><a href=\"#impl-TryFrom%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#419\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#419\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CBigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#132\">Source</a><a href=\"#impl-TryFrom%3CBigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#132\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#132\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<BigInt>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#419\">Source</a><a href=\"#impl-TryFrom%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#419\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#419\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<BigUint>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CInteger%3E-for-u64\" class=\"impl\"><a href=\"#impl-TryFrom%3CInteger%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Integer&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: Integer) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Integer&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Integer>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#374\">Source</a></span><a href=\"#impl-TryFrom%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#374\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#374\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#369\">Source</a></span><a href=\"#impl-TryFrom%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#369\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#369\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#371\">Source</a></span><a href=\"#impl-TryFrom%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#371\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#371\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#373\">Source</a></span><a href=\"#impl-TryFrom%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#373\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#373\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#367\">Source</a></span><a href=\"#impl-TryFrom%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#367\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#367\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cisize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#438\">Source</a></span><a href=\"#impl-TryFrom%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#438\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#438\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#351\">Source</a></span><a href=\"#impl-TryFrom%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#351\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#351\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cusize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#433\">Source</a></span><a href=\"#impl-TryFrom%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#433\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#433\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFromBytes-for-u64\" class=\"impl\"><a href=\"#impl-TryFromBytes-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TryFromBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_bytes\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_bytes</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_prefix\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_prefix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_suffix\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_suffix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;Self), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_bytes\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_bytes</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;mut Self</code> without\ncopying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_prefix\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_prefix</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;mut Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_suffix\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_suffix</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;mut Self), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;mut Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_bytes_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_bytes_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_bytes_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;Self</code> with a DST length\nequal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_prefix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_prefix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_prefix_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;Self</code> with\na DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_suffix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_suffix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_suffix_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;Self), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;Self</code> with\na DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_bytes_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_bytes_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_bytes_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;mut Self</code> with a DST\nlength equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_prefix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_prefix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_prefix_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;mut Self</code>\nwith a DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_suffix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_suffix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_suffix_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;mut Self), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;mut Self</code>\nwith a DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_from_bytes\" class=\"method trait-impl\"><a href=\"#method.try_read_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read_from_bytes</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, ConvertError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempts to read the given <code>source</code> as a <code>Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_from_prefix\" class=\"method trait-impl\"><a href=\"#method.try_read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read_from_prefix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempts to read a <code>Self</code> from the prefix of the given <code>source</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_from_suffix\" class=\"method trait-impl\"><a href=\"#method.try_read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read_from_suffix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self), ConvertError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempts to read a <code>Self</code> from the suffix of the given <code>source</code>. <a>Read more</a></div></details></div></details>","TryFromBytes","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci128%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci128%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i128>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci16%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci16%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i16>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci32%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci32%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i32>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci64%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i64>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci8%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci8%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i8>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cisize%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cisize%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<isize>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu128%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu128%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u128>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu16%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu16%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u16>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu32%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu32%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u32>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu64%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u64>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu8%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu8%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u8>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cusize%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cusize%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<usize>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cf32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">Source</a><a href=\"#impl-UnwrappedCast%3Cf32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<f32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cf64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">Source</a><a href=\"#impl-UnwrappedCast%3Cf64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<f64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperExp-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#634-637\">Source</a></span><a href=\"#impl-UpperExp-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.UpperExp.html\" title=\"trait core::fmt::UpperExp\">UpperExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#634-637\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.UpperExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.UpperExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperExp","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a></span><a href=\"#impl-UpperHex-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-u64\" class=\"impl\"><a href=\"#impl-Value-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Value for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">record</a>(&amp;self, key: &amp;Field, visitor: &amp;mut dyn Visit)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-u64\" class=\"impl\"><a href=\"#impl-Value-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Value for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize</a>(\n    &amp;self,\n    _record: &amp;Record&lt;'_&gt;,\n    key: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>,\n    serializer: &amp;mut dyn Serializer,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Serialize self into <code>Serializer</code> <a>Read more</a></div></details></div></details>","Value","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Weight-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distr/weighted/mod.rs.html#60\">Source</a><a href=\"#impl-Weight-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/distr/weighted/trait.Weight.html\" title=\"trait rand::distr::weighted::Weight\">Weight</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distr/weighted/mod.rs.html#60\">Source</a><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://rust-random.github.io/rand/rand/distr/weighted/trait.Weight.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 0u64</h4></section></summary><div class='docblock'>Representation of 0</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/distr/weighted/mod.rs.html#60\">Source</a><a href=\"#method.checked_add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/distr/weighted/trait.Weight.html#tymethod.checked_add_assign\" class=\"fn\">checked_add_assign</a>(&amp;mut self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Checked addition <a href=\"https://rust-random.github.io/rand/rand/distr/weighted/trait.Weight.html#tymethod.checked_add_assign\">Read more</a></div></details></div></details>","Weight","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingAdd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#33\">Source</a><a href=\"#impl-WrappingAdd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingAdd.html\" title=\"trait num_traits::ops::wrapping::WrappingAdd\">WrappingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#33\">Source</a><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingAdd.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Wrapping (modular) addition. Computes <code>self + other</code>, wrapping around at the boundary of\nthe type.</div></details></div></details>","WrappingAdd","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU128<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU16<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU32<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU64<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU8<Frac>>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-WrappingCast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-WrappingCast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-WrappingCast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-WrappingCast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-WrappingCast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-WrappingCast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-WrappingCast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-WrappingCast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-WrappingCast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-WrappingCast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-WrappingCast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-WrappingCast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingMul-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#75\">Source</a><a href=\"#impl-WrappingMul-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingMul.html\" title=\"trait num_traits::ops::wrapping::WrappingMul\">WrappingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#75\">Source</a><a href=\"#method.wrapping_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingMul.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Wrapping (modular) multiplication. Computes <code>self * other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingMul","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingNeg-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#122\">Source</a><a href=\"#impl-WrappingNeg-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html\" title=\"trait num_traits::ops::wrapping::WrappingNeg\">WrappingNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#122\">Source</a><a href=\"#method.wrapping_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html#tymethod.wrapping_neg\">Read more</a></div></details></div></details>","WrappingNeg","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShl-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#165\">Source</a><a href=\"#impl-WrappingShl-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html\" title=\"trait num_traits::ops::wrapping::WrappingShl\">WrappingShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#165\">Source</a><a href=\"#method.wrapping_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html#tymethod.wrapping_shl\">Read more</a></div></details></div></details>","WrappingShl","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShr-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#198\">Source</a><a href=\"#impl-WrappingShr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html\" title=\"trait num_traits::ops::wrapping::WrappingShr\">WrappingShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#198\">Source</a><a href=\"#method.wrapping_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html#tymethod.wrapping_shr\">Read more</a></div></details></div></details>","WrappingShr","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingSub-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#54\">Source</a><a href=\"#impl-WrappingSub-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingSub.html\" title=\"trait num_traits::ops::wrapping::WrappingSub\">WrappingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#54\">Source</a><a href=\"#method.wrapping_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingSub.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Wrapping (modular) subtraction. Computes <code>self - other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingSub","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteHex-for-u64\" class=\"impl\"><a href=\"#impl-WriteHex-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl WriteHex for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_hex\" class=\"method trait-impl\"><a href=\"#method.write_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_hex</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Write the value as hex.</div></details></div></details>","WriteHex","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Writeable-for-u64\" class=\"impl\"><a href=\"#impl-Writeable-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Writeable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>&lt;W&gt;(&amp;self, sink: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Writes a string to the given sink. Errors from the sink are bubbled up.\nThe default implementation delegates to <code>write_to_parts</code>, and discards any\n<code>Part</code> annotations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.writeable_length_hint\" class=\"method trait-impl\"><a href=\"#method.writeable_length_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">writeable_length_hint</a>(&amp;self) -&gt; LengthHint</h4></section></summary><div class='docblock'>Returns a hint for the number of UTF-8 bytes that will be written to the sink. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_parts\" class=\"method trait-impl\"><a href=\"#method.write_to_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_parts</a>&lt;S&gt;(&amp;self, sink: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut S</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    S: PartsWrite + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Write bytes and <code>Part</code> annotations to the given sink. Errors from the\nsink are bubbled up. The default implementation delegates to <code>write_to</code>,\nand doesn’t produce any <code>Part</code> annotations.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_string\" class=\"method trait-impl\"><a href=\"#method.write_to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_string</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Creates a new <code>String</code> with the data from this <code>Writeable</code>. Like <code>ToString</code>,\nbut smaller and faster. <a>Read more</a></div></details></div></details>","Writeable","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Yokeable%3C'a%3E-for-u64\" class=\"impl\"><a href=\"#impl-Yokeable%3C'a%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; Yokeable&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>This type MUST be <code>Self</code> with the <code>'static</code> replaced with <code>'a</code>, i.e. <code>Self&lt;'a&gt;</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform\" class=\"method trait-impl\"><a href=\"#method.transform\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transform</a>(&amp;self) -&gt; &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as Yokeable&lt;'a&gt;&gt;::Output</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a Self&lt;'static&gt;</code> and <code>&amp;'a Self&lt;'a&gt;</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_owned\" class=\"method trait-impl\"><a href=\"#method.transform_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transform_owned</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as Yokeable&lt;'a&gt;&gt;::Output</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>Self&lt;'static&gt;</code> and <code>Self&lt;'a&gt;</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make\" class=\"method trait-impl\"><a href=\"#method.make\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">make</a>(this: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as Yokeable&lt;'a&gt;&gt;::Output) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>This method can be used to cast away <code>Self&lt;'a&gt;</code>’s lifetime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_mut\" class=\"method trait-impl\"><a href=\"#method.transform_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transform_mut</a>&lt;F&gt;(&amp;'a mut self, f: F)<div class=\"where\">where\n    F: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'b mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as Yokeable&lt;'a&gt;&gt;::Output),</div></h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a mut Self&lt;'static&gt;</code> and <code>&amp;'a mut Self&lt;'a&gt;</code>,\nand pass it to <code>f</code>. <a>Read more</a></div></details></div></details>","Yokeable<'a>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#61\">Source</a><a href=\"#impl-Zero-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#61\">Source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#61\">Source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#23\">Source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroFrom%3C'a,+u64%3E-for-u64\" class=\"impl\"><a href=\"#impl-ZeroFrom%3C'a,+u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; ZeroFrom&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_from\" class=\"method trait-impl\"><a href=\"#method.zero_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero_from</a>(this: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Clone the other <code>C</code> into a struct that may retain references into <code>C</code>.</div></details></div></details>","ZeroFrom<'a, u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroMapKV%3C'a%3E-for-u64\" class=\"impl\"><a href=\"#impl-ZeroMapKV%3C'a%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; ZeroMapKV&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Container\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Container\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Container</a> = ZeroVec&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>The container that can be used with this type: [<code>ZeroVec</code>] or [<code>VarZeroVec</code>].</div></details><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Slice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Slice</a> = ZeroSlice&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.GetType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.GetType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">GetType</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as AsULE&gt;::ULE</h4></section></summary><div class='docblock'>The type produced by <code>Container::get()</code> <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OwnedType</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The type produced by <code>Container::replace()</code> and <code>Container::remove()</code>,\nalso used during deserialization. If <code>Self</code> is human readable serialized,\ndeserializing to <code>Self::OwnedType</code> should produce the same value once\npassed through <code>Self::owned_as_self()</code> <a>Read more</a></div></details></div></details>","ZeroMapKV<'a>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-u64\" class=\"impl\"><a href=\"#impl-Zeroable-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Zeroable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.90.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#626-633\">Source</a><a href=\"#impl-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.format_into\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#626-633\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.format_into\" class=\"fn\">format_into</a>(self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/num_buffer/struct.NumBuffer.html\" title=\"struct core::fmt::num_buffer::NumBuffer\">NumBuffer</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_format_into</code>)</span></div></span></summary><div class=\"docblock\"><p>Allows users to write an integer (in signed decimal format) into a variable <code>buf</code> of\ntype <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/num_buffer/struct.NumBuffer.html\" title=\"struct core::fmt::num_buffer::NumBuffer\"><code>NumBuffer</code></a> that is passed by the caller by mutable reference.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(int_format_into)]\n</span><span class=\"kw\">use </span>core::fmt::NumBuffer;\n\n<span class=\"kw\">let </span>n = <span class=\"number\">0u64</span>;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buf = NumBuffer::new();\n<span class=\"macro\">assert_eq!</span>(n.format_into(<span class=\"kw-2\">&amp;mut </span>buf), <span class=\"string\">\"0\"</span>);\n\n<span class=\"kw\">let </span>n1 = <span class=\"number\">32u64</span>;\n<span class=\"macro\">assert_eq!</span>(n1.format_into(<span class=\"kw-2\">&amp;mut </span>buf), <span class=\"string\">\"32\"</span>);\n\n<span class=\"kw\">let </span>n2 = u64 :: MAX;\n<span class=\"macro\">assert_eq!</span>(n2.format_into(<span class=\"kw-2\">&amp;mut </span>buf), u64 :: MAX.to_string());</code></pre></div>\n</div></details></div></details>",0,"mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1150\">Source</a><a href=\"#impl-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.43.0\">1.43.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 0u64</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this integer type.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u64::MIN, <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.43.0\">1.43.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 18_446_744_073_709_551_615u64</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this integer type\n(2<sup>64</sup> − 1).</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u64::MAX, <span class=\"number\">18446744073709551615</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a> = 64u32</h4></section></summary><div class=\"docblock\"><p>The size of this integer type in bits.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u64::BITS, <span class=\"number\">64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b01001100u64</span>;\n<span class=\"macro\">assert_eq!</span>(n.count_ones(), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>max = u64::MAX;\n<span class=\"macro\">assert_eq!</span>(max.count_ones(), <span class=\"number\">64</span>);\n\n<span class=\"kw\">let </span>zero = <span class=\"number\">0u64</span>;\n<span class=\"macro\">assert_eq!</span>(zero.count_ones(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of zeros in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>zero = <span class=\"number\">0u64</span>;\n<span class=\"macro\">assert_eq!</span>(zero.count_zeros(), <span class=\"number\">64</span>);\n\n<span class=\"kw\">let </span>max = u64::MAX;\n<span class=\"macro\">assert_eq!</span>(max.count_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>Depending on what you’re doing with the value, you might also be interested in the\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.ilog2\" title=\"method u64::ilog2\"><code>ilog2</code></a> function which returns a consistent number, even if the type widens.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = u64::MAX &gt;&gt; <span class=\"number\">2</span>;\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">2</span>);\n\n<span class=\"kw\">let </span>zero = <span class=\"number\">0u64</span>;\n<span class=\"macro\">assert_eq!</span>(zero.leading_zeros(), <span class=\"number\">64</span>);\n\n<span class=\"kw\">let </span>max = u64::MAX;\n<span class=\"macro\">assert_eq!</span>(max.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b0101000u64</span>;\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>zero = <span class=\"number\">0u64</span>;\n<span class=\"macro\">assert_eq!</span>(zero.trailing_zeros(), <span class=\"number\">64</span>);\n\n<span class=\"kw\">let </span>max = u64::MAX;\n<span class=\"macro\">assert_eq!</span>(max.trailing_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0, const since 1.46.0\">1.46.0 (const: 1.46.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = !(u64::MAX &gt;&gt; <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(n.leading_ones(), <span class=\"number\">2</span>);\n\n<span class=\"kw\">let </span>zero = <span class=\"number\">0u64</span>;\n<span class=\"macro\">assert_eq!</span>(zero.leading_ones(), <span class=\"number\">0</span>);\n\n<span class=\"kw\">let </span>max = u64::MAX;\n<span class=\"macro\">assert_eq!</span>(max.leading_ones(), <span class=\"number\">64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0, const since 1.46.0\">1.46.0 (const: 1.46.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing ones in the binary representation\nof <code>self</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b1010111u64</span>;\n<span class=\"macro\">assert_eq!</span>(n.trailing_ones(), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>zero = <span class=\"number\">0u64</span>;\n<span class=\"macro\">assert_eq!</span>(zero.trailing_ones(), <span class=\"number\">0</span>);\n\n<span class=\"kw\">let </span>max = u64::MAX;\n<span class=\"macro\">assert_eq!</span>(max.trailing_ones(), <span class=\"number\">64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit_width\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.bit_width\" class=\"fn\">bit_width</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>uint_bit_width</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the minimum number of bits required to represent <code>self</code>.</p>\n<p>This method returns zero if <code>self</code> is zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(uint_bit_width)]\n\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0_u64</span>.bit_width(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0b111_u64</span>.bit_width(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0b1110_u64</span>.bit_width(), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.bit_width(), <span class=\"number\">64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.isolate_most_significant_one\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.isolate_most_significant_one\" class=\"fn\">isolate_most_significant_one</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>isolate_most_least_significant_one</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>self</code> with only the most significant bit set, or <code>0</code> if\nthe input is <code>0</code>.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(isolate_most_least_significant_one)]\n\n</span><span class=\"kw\">let </span>n: u64 = <span class=\"number\">0b_01100100</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.isolate_most_significant_one(), <span class=\"number\">0b_01000000</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0_u64</span>.isolate_most_significant_one(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.isolate_least_significant_one\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.isolate_least_significant_one\" class=\"fn\">isolate_least_significant_one</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>isolate_most_least_significant_one</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>self</code> with only the least significant bit set, or <code>0</code> if\nthe input is <code>0</code>.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(isolate_most_least_significant_one)]\n\n</span><span class=\"kw\">let </span>n: u64 = <span class=\"number\">0b_01100100</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.isolate_least_significant_one(), <span class=\"number\">0b_00000100</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0_u64</span>.isolate_least_significant_one(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.87.0, const since 1.87.0\">1.87.0 (const: 1.87.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.cast_signed\" class=\"fn\">cast_signed</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Returns the bit pattern of <code>self</code> reinterpreted as a signed integer of the same size.</p>\n<p>This produces the same result as an <code>as</code> cast, but ensures that the bit-width remains\nthe same.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = u64::MAX;\n\n<span class=\"macro\">assert_eq!</span>(n.cast_signed(), -<span class=\"number\">1i64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Shifts the bits to the left by a specified amount, <code>n</code>,\nwrapping the truncated bits to the end of the resulting integer.</p>\n<p>Please note this isn’t the same operation as the <code>&lt;&lt;</code> shifting operator!</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0xaa00000000006e1u64</span>;\n<span class=\"kw\">let </span>m = <span class=\"number\">0x6e10aa</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.rotate_left(<span class=\"number\">12</span>), m);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Shifts the bits to the right by a specified amount, <code>n</code>,\nwrapping the truncated bits to the beginning of the resulting\ninteger.</p>\n<p>Please note this isn’t the same operation as the <code>&gt;&gt;</code> shifting operator!</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x6e10aau64</span>;\n<span class=\"kw\">let </span>m = <span class=\"number\">0xaa00000000006e1</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.rotate_right(<span class=\"number\">12</span>), m);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Reverses the byte order of the integer.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1234567890123456u64</span>;\n<span class=\"kw\">let </span>m = n.swap_bytes();\n\n<span class=\"macro\">assert_eq!</span>(m, <span class=\"number\">0x5634129078563412</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0, const since 1.37.0\">1.37.0 (const: 1.37.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Reverses the order of bits in the integer. The least significant bit becomes the most significant bit,\nsecond least-significant bit becomes second most-significant bit, etc.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1234567890123456u64</span>;\n<span class=\"kw\">let </span>m = n.reverse_bits();\n\n<span class=\"macro\">assert_eq!</span>(m, <span class=\"number\">0x6a2c48091e6a2c48</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0</span>, <span class=\"number\">0u64</span>.reverse_bits());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts an integer from big endian to the target’s endianness.</p>\n<p>On big endian this is a no-op. On little endian the bytes are\nswapped.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au64</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(u64::from_be(n), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(u64::from_be(n), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts an integer from little endian to the target’s endianness.</p>\n<p>On little endian this is a no-op. On big endian the bytes are\nswapped.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au64</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"little\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(u64::from_le(n), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(u64::from_le(n), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>self</code> to big endian from the target’s endianness.</p>\n<p>On big endian this is a no-op. On little endian the bytes are\nswapped.</p>\n<h5 id=\"examples-19\"><a class=\"doc-anchor\" href=\"#examples-19\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au64</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(n.to_be(), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(n.to_be(), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>self</code> to little endian from the target’s endianness.</p>\n<p>On little endian this is a no-op. On big endian the bytes are\nswapped.</p>\n<h5 id=\"examples-20\"><a class=\"doc-anchor\" href=\"#examples-20\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au64</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"little\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(n.to_le(), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(n.to_le(), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer addition. Computes <code>self + rhs</code>, returning <code>None</code>\nif overflow occurred.</p>\n<h5 id=\"examples-21\"><a class=\"doc-anchor\" href=\"#examples-21\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).checked_add(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(u64::MAX - <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).checked_add(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_add\" class=\"fn\">strict_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer addition. Computes <code>self + rhs</code>, panicking\nif overflow occurred.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5><h6 id=\"overflow-behavior\"><a class=\"doc-anchor\" href=\"#overflow-behavior\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-22\"><a class=\"doc-anchor\" href=\"#examples-22\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).strict_add(<span class=\"number\">1</span>), u64::MAX - <span class=\"number\">1</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= (u64::MAX - <span class=\"number\">2</span>).strict_add(<span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.79.0, const since 1.79.0\">1.79.0 (const: 1.79.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unchecked integer addition. Computes <code>self + rhs</code>, assuming overflow\ncannot occur.</p>\n<p>Calling <code>x.unchecked_add(y)</code> is semantically equivalent to calling\n<code>x.</code><a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_add\" title=\"method u64::checked_add\"><code>checked_add</code></a><code>(y).</code><a href=\"option/enum.Option.html#method.unwrap_unchecked\"><code>unwrap_unchecked</code></a><code>()</code>.</p>\n<p>If you’re just trying to avoid the panic in debug mode, then <strong>do not</strong>\nuse this.  Instead, you’re looking for <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.wrapping_add\" title=\"method u64::wrapping_add\"><code>wrapping_add</code></a>.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This results in undefined behavior when\n<code>self + rhs &gt; u64::MAX</code> or <code>self + rhs &lt; u64::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_add\" title=\"method u64::checked_add\"><code>checked_add</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_add_signed\" class=\"fn\">checked_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked addition with a signed integer. Computes <code>self + rhs</code>,\nreturning <code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-23\"><a class=\"doc-anchor\" href=\"#examples-23\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_add_signed(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_add_signed(-<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).checked_add_signed(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_add_signed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_add_signed\" class=\"fn\">strict_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict addition with a signed integer. Computes <code>self + rhs</code>,\npanicking if overflow occurred.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5><h6 id=\"overflow-behavior-1\"><a class=\"doc-anchor\" href=\"#overflow-behavior-1\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-24\"><a class=\"doc-anchor\" href=\"#examples-24\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.strict_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);</code></pre></div>\n<p>The following panic because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">1u64</span>.strict_add_signed(-<span class=\"number\">2</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= (u64::MAX - <span class=\"number\">2</span>).strict_add_signed(<span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer subtraction. Computes <code>self - rhs</code>, returning\n<code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-25\"><a class=\"doc-anchor\" href=\"#examples-25\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_sub(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.checked_sub(<span class=\"number\">1</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_sub\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_sub\" class=\"fn\">strict_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer subtraction. Computes <code>self - rhs</code>, panicking if\noverflow occurred.</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5><h6 id=\"overflow-behavior-2\"><a class=\"doc-anchor\" href=\"#overflow-behavior-2\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-26\"><a class=\"doc-anchor\" href=\"#examples-26\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.strict_sub(<span class=\"number\">1</span>), <span class=\"number\">0</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">0u64</span>.strict_sub(<span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.79.0, const since 1.79.0\">1.79.0 (const: 1.79.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_sub\" class=\"fn\">unchecked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unchecked integer subtraction. Computes <code>self - rhs</code>, assuming overflow\ncannot occur.</p>\n<p>Calling <code>x.unchecked_sub(y)</code> is semantically equivalent to calling\n<code>x.</code><a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_sub\" title=\"method u64::checked_sub\"><code>checked_sub</code></a><code>(y).</code><a href=\"option/enum.Option.html#method.unwrap_unchecked\"><code>unwrap_unchecked</code></a><code>()</code>.</p>\n<p>If you’re just trying to avoid the panic in debug mode, then <strong>do not</strong>\nuse this.  Instead, you’re looking for <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.wrapping_sub\" title=\"method u64::wrapping_sub\"><code>wrapping_sub</code></a>.</p>\n<p>If you find yourself writing code like this:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">if </span>foo &gt;= bar {\n    <span class=\"comment\">// SAFETY: just checked it will not overflow\n    </span><span class=\"kw\">let </span>diff = <span class=\"kw\">unsafe </span>{ foo.unchecked_sub(bar) };\n    <span class=\"comment\">// ... use diff ...\n</span>}</code></pre></div>\n<p>Consider changing it to</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">if let </span><span class=\"prelude-val\">Some</span>(diff) = foo.checked_sub(bar) {\n    <span class=\"comment\">// ... use diff ...\n</span>}</code></pre></div>\n<p>As that does exactly the same thing – including telling the optimizer\nthat the subtraction cannot overflow – but avoids needing <code>unsafe</code>.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>This results in undefined behavior when\n<code>self - rhs &gt; u64::MAX</code> or <code>self - rhs &lt; u64::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_sub\" title=\"method u64::checked_sub\"><code>checked_sub</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.90.0, const since 1.90.0\">1.90.0 (const: 1.90.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_sub_signed\" class=\"fn\">checked_sub_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked subtraction with a signed integer. Computes <code>self - rhs</code>,\nreturning <code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-27\"><a class=\"doc-anchor\" href=\"#examples-27\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_sub_signed(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_sub_signed(-<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).checked_sub_signed(-<span class=\"number\">4</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_sub_signed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_sub_signed\" class=\"fn\">strict_sub_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict subtraction with a signed integer. Computes <code>self - rhs</code>,\npanicking if overflow occurred.</p>\n<h5 id=\"panics-3\"><a class=\"doc-anchor\" href=\"#panics-3\">§</a>Panics</h5><h6 id=\"overflow-behavior-3\"><a class=\"doc-anchor\" href=\"#overflow-behavior-3\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-28\"><a class=\"doc-anchor\" href=\"#examples-28\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u64</span>.strict_sub_signed(<span class=\"number\">2</span>), <span class=\"number\">1</span>);</code></pre></div>\n<p>The following panic because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">1u64</span>.strict_sub_signed(<span class=\"number\">2</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= (u64::MAX).strict_sub_signed(-<span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_signed_diff\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_signed_diff\" class=\"fn\">checked_signed_diff</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unsigned_signed_diff</code>)</span></div></span></summary><div class=\"docblock\"><p>Checked integer subtraction. Computes <code>self - rhs</code> and checks if the result fits into an <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, returning <code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-29\"><a class=\"doc-anchor\" href=\"#examples-29\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(unsigned_signed_diff)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u64</span>.checked_signed_diff(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">8</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.checked_signed_diff(<span class=\"number\">10</span>), <span class=\"prelude-val\">Some</span>(-<span class=\"number\">8</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.checked_signed_diff(i64::MAX <span class=\"kw\">as </span>u64), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>((i64::MAX <span class=\"kw\">as </span>u64).checked_signed_diff(u64::MAX), <span class=\"prelude-val\">Some</span>(i64::MIN));\n<span class=\"macro\">assert_eq!</span>((i64::MAX <span class=\"kw\">as </span>u64 + <span class=\"number\">1</span>).checked_signed_diff(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.checked_signed_diff(u64::MAX), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer multiplication. Computes <code>self * rhs</code>, returning\n<code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-30\"><a class=\"doc-anchor\" href=\"#examples-30\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.checked_mul(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.checked_mul(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_mul\" class=\"fn\">strict_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer multiplication. Computes <code>self * rhs</code>, panicking if\noverflow occurred.</p>\n<h5 id=\"panics-4\"><a class=\"doc-anchor\" href=\"#panics-4\">§</a>Panics</h5><h6 id=\"overflow-behavior-4\"><a class=\"doc-anchor\" href=\"#overflow-behavior-4\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-31\"><a class=\"doc-anchor\" href=\"#examples-31\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.strict_mul(<span class=\"number\">1</span>), <span class=\"number\">5</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= u64::MAX.strict_mul(<span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.79.0, const since 1.79.0\">1.79.0 (const: 1.79.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unchecked integer multiplication. Computes <code>self * rhs</code>, assuming overflow\ncannot occur.</p>\n<p>Calling <code>x.unchecked_mul(y)</code> is semantically equivalent to calling\n<code>x.</code><a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_mul\" title=\"method u64::checked_mul\"><code>checked_mul</code></a><code>(y).</code><a href=\"option/enum.Option.html#method.unwrap_unchecked\"><code>unwrap_unchecked</code></a><code>()</code>.</p>\n<p>If you’re just trying to avoid the panic in debug mode, then <strong>do not</strong>\nuse this.  Instead, you’re looking for <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.wrapping_mul\" title=\"method u64::wrapping_mul\"><code>wrapping_mul</code></a>.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">§</a>Safety</h5>\n<p>This results in undefined behavior when\n<code>self * rhs &gt; u64::MAX</code> or <code>self * rhs &lt; u64::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_mul\" title=\"method u64::checked_mul\"><code>checked_mul</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.52.0\">1.0.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer division. Computes <code>self / rhs</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-32\"><a class=\"doc-anchor\" href=\"#examples-32\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u64</span>.checked_div(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">64</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_div(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_div\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_div\" class=\"fn\">strict_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer division. Computes <code>self / rhs</code>.</p>\n<p>Strict division on unsigned types is just normal division. There’s no\nway overflow could ever happen. This function exists so that all\noperations are accounted for in the strict operations.</p>\n<h5 id=\"panics-5\"><a class=\"doc-anchor\" href=\"#panics-5\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-33\"><a class=\"doc-anchor\" href=\"#examples-33\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.strict_div(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n<p>The following panics because of division by zero:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= (<span class=\"number\">1u64</span>).strict_div(<span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-34\"><a class=\"doc-anchor\" href=\"#examples-34\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u64</span>.checked_div_euclid(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">64</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_div_euclid(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_div_euclid\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_div_euclid\" class=\"fn\">strict_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict Euclidean division. Computes <code>self.div_euclid(rhs)</code>.</p>\n<p>Strict division on unsigned types is just normal division. There’s no\nway overflow could ever happen. This function exists so that all\noperations are accounted for in the strict operations. Since, for the\npositive integers, all common definitions of division are equal, this\nis exactly equal to <code>self.strict_div(rhs)</code>.</p>\n<h5 id=\"panics-6\"><a class=\"doc-anchor\" href=\"#panics-6\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-35\"><a class=\"doc-anchor\" href=\"#examples-35\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.strict_div_euclid(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n<p>The following panics because of division by zero:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= (<span class=\"number\">1u64</span>).strict_div_euclid(<span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_exact_div\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_exact_div\" class=\"fn\">checked_exact_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>exact_div</code>)</span></div></span></summary><div class=\"docblock\"><p>Checked integer division without remainder. Computes <code>self / rhs</code>.</p>\n<h5 id=\"panics-7\"><a class=\"doc-anchor\" href=\"#panics-7\">§</a>Panics</h5>\n<p>This function will panic  if <code>rhs == 0</code> or <code>self % rhs != 0</code>.</p>\n<h5 id=\"examples-36\"><a class=\"doc-anchor\" href=\"#examples-36\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(exact_div)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">64u64</span>.exact_div(<span class=\"number\">2</span>), <span class=\"number\">32</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">64u64</span>.exact_div(<span class=\"number\">32</span>), <span class=\"number\">2</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(exact_div)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">65u64</span>.exact_div(<span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exact_div\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.exact_div\" class=\"fn\">exact_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>exact_div</code>)</span></div></span></summary><div class=\"docblock\"><p>Checked integer division without remainder. Computes <code>self / rhs</code>.</p>\n<h5 id=\"panics-8\"><a class=\"doc-anchor\" href=\"#panics-8\">§</a>Panics</h5>\n<p>This function will panic  if <code>rhs == 0</code> or <code>self % rhs != 0</code>.</p>\n<h5 id=\"examples-37\"><a class=\"doc-anchor\" href=\"#examples-37\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(exact_div)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">64u64</span>.exact_div(<span class=\"number\">2</span>), <span class=\"number\">32</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">64u64</span>.exact_div(<span class=\"number\">32</span>), <span class=\"number\">2</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(exact_div)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">65u64</span>.exact_div(<span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_exact_div\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_exact_div\" class=\"fn\">unchecked_exact_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>exact_div</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked integer division without remainder. Computes <code>self / rhs</code>.</p>\n<h5 id=\"safety-3\"><a class=\"doc-anchor\" href=\"#safety-3\">§</a>Safety</h5>\n<p>This results in undefined behavior when <code>rhs == 0</code> or <code>self % rhs != 0</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_exact_div\" title=\"method u64::checked_exact_div\"><code>checked_exact_div</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer remainder. Computes <code>self % rhs</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-38\"><a class=\"doc-anchor\" href=\"#examples-38\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.checked_rem(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.checked_rem(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_rem\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_rem\" class=\"fn\">strict_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer remainder. Computes <code>self % rhs</code>.</p>\n<p>Strict remainder calculation on unsigned types is just the regular\nremainder calculation. There’s no way overflow could ever happen.\nThis function exists so that all operations are accounted for in the\nstrict operations.</p>\n<h5 id=\"panics-9\"><a class=\"doc-anchor\" href=\"#panics-9\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-39\"><a class=\"doc-anchor\" href=\"#examples-39\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.strict_rem(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n<p>The following panics because of division by zero:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">5u64</span>.strict_rem(<span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-40\"><a class=\"doc-anchor\" href=\"#examples-40\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.checked_rem_euclid(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.checked_rem_euclid(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_rem_euclid\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_rem_euclid\" class=\"fn\">strict_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>.</p>\n<p>Strict modulo calculation on unsigned types is just the regular\nremainder calculation. There’s no way overflow could ever happen.\nThis function exists so that all operations are accounted for in the\nstrict operations. Since, for the positive integers, all common\ndefinitions of division are equal, this is exactly equal to\n<code>self.strict_rem(rhs)</code>.</p>\n<h5 id=\"panics-10\"><a class=\"doc-anchor\" href=\"#panics-10\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-41\"><a class=\"doc-anchor\" href=\"#examples-41\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.strict_rem_euclid(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n<p>The following panics because of division by zero:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">5u64</span>.strict_rem_euclid(<span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_disjoint_bitor\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_disjoint_bitor\" class=\"fn\">unchecked_disjoint_bitor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>disjoint_bitor</code>)</span></div></span></summary><div class=\"docblock\"><p>Same value as <code>self | other</code>, but UB if any bit position is set in both inputs.</p>\n<p>This is a situational micro-optimization for places where you’d rather\nuse addition on some platforms and bitwise or on other platforms, based\non exactly which instructions combine better with whatever else you’re\ndoing.  Note that there’s no reason to bother using this for places\nwhere it’s clear from the operations involved that they can’t overlap.\nFor example, if you’re combining <code>u16</code>s into a <code>u32</code> with\n<code>((a as u32) &lt;&lt; 16) | (b as u32)</code>, that’s fine, as the backend will\nknow those sides of the <code>|</code> are disjoint without needing help.</p>\n<h5 id=\"examples-42\"><a class=\"doc-anchor\" href=\"#examples-42\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(disjoint_bitor)]\n\n</span><span class=\"comment\">// SAFETY: `1` and `4` have no bits in common.\n</span><span class=\"kw\">unsafe </span>{\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_u64</span>.unchecked_disjoint_bitor(<span class=\"number\">4</span>), <span class=\"number\">5</span>);\n}</code></pre></div>\n<h5 id=\"safety-4\"><a class=\"doc-anchor\" href=\"#safety-4\">§</a>Safety</h5>\n<p>Requires that <code>(self &amp; other) == 0</code>, otherwise it’s immediate UB.</p>\n<p>Equivalently, requires that <code>(self | other) == (self + other)</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.ilog\" class=\"fn\">ilog</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the logarithm of the number with respect to an arbitrary base,\nrounded down.</p>\n<p>This method might not be optimized owing to implementation details;\n<code>ilog2</code> can produce results more efficiently for base 2, and <code>ilog10</code>\ncan produce results more efficiently for base 10.</p>\n<h5 id=\"panics-11\"><a class=\"doc-anchor\" href=\"#panics-11\">§</a>Panics</h5>\n<p>This function will panic if <code>self</code> is zero, or if <code>base</code> is less than 2.</p>\n<h5 id=\"examples-43\"><a class=\"doc-anchor\" href=\"#examples-43\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.ilog(<span class=\"number\">5</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<h5 id=\"panics-12\"><a class=\"doc-anchor\" href=\"#panics-12\">§</a>Panics</h5>\n<p>This function will panic if <code>self</code> is zero.</p>\n<h5 id=\"examples-44\"><a class=\"doc-anchor\" href=\"#examples-44\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.ilog2(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<h5 id=\"panics-13\"><a class=\"doc-anchor\" href=\"#panics-13\">§</a>Panics</h5>\n<p>This function will panic if <code>self</code> is zero.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u64</span>.ilog10(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_ilog\" class=\"fn\">checked_ilog</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the logarithm of the number with respect to an arbitrary base,\nrounded down.</p>\n<p>Returns <code>None</code> if the number is zero, or if the base is not at least 2.</p>\n<p>This method might not be optimized owing to implementation details;\n<code>checked_ilog2</code> can produce results more efficiently for base 2, and\n<code>checked_ilog10</code> can produce results more efficiently for base 10.</p>\n<h5 id=\"examples-45\"><a class=\"doc-anchor\" href=\"#examples-45\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.checked_ilog(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_ilog2\" class=\"fn\">checked_ilog2</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>Returns <code>None</code> if the number is zero.</p>\n<h5 id=\"examples-46\"><a class=\"doc-anchor\" href=\"#examples-46\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.checked_ilog2(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_ilog10\" class=\"fn\">checked_ilog10</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>Returns <code>None</code> if the number is zero.</p>\n<h5 id=\"examples-47\"><a class=\"doc-anchor\" href=\"#examples-47\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u64</span>.checked_ilog10(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>, returning <code>None</code> unless <code>self == 0</code>.</p>\n<p>Note that negating any positive integer will overflow.</p>\n<h5 id=\"examples-48\"><a class=\"doc-anchor\" href=\"#examples-48\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.checked_neg(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_neg\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_neg\" class=\"fn\">strict_neg</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict negation. Computes <code>-self</code>, panicking unless <code>self == 0</code>.</p>\n<p>Note that negating any positive integer will overflow.</p>\n<h5 id=\"panics-14\"><a class=\"doc-anchor\" href=\"#panics-14\">§</a>Panics</h5><h6 id=\"overflow-behavior-5\"><a class=\"doc-anchor\" href=\"#overflow-behavior-5\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-49\"><a class=\"doc-anchor\" href=\"#examples-49\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.strict_neg(), <span class=\"number\">0</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">1u64</span>.strict_neg();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"examples-50\"><a class=\"doc-anchor\" href=\"#examples-50\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u64</span>.checked_shl(<span class=\"number\">4</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0x10</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.checked_shl(<span class=\"number\">129</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.checked_shl(<span class=\"number\">63</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_shl\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_shl\" class=\"fn\">strict_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict shift left. Computes <code>self &lt;&lt; rhs</code>, panicking if <code>rhs</code> is larger\nthan or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"panics-15\"><a class=\"doc-anchor\" href=\"#panics-15\">§</a>Panics</h5><h6 id=\"overflow-behavior-6\"><a class=\"doc-anchor\" href=\"#overflow-behavior-6\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-51\"><a class=\"doc-anchor\" href=\"#examples-51\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u64</span>.strict_shl(<span class=\"number\">4</span>), <span class=\"number\">0x10</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">0x10u64</span>.strict_shl(<span class=\"number\">129</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_shl\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_shl\" class=\"fn\">unchecked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_shifts</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that\n<code>rhs</code> is less than the number of bits in <code>self</code>.</p>\n<h5 id=\"safety-5\"><a class=\"doc-anchor\" href=\"#safety-5\">§</a>Safety</h5>\n<p>This results in undefined behavior if <code>rhs</code> is larger than\nor equal to the number of bits in <code>self</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_shl\" title=\"method u64::checked_shl\"><code>checked_shl</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbounded_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.87.0, const since 1.87.0\">1.87.0 (const: 1.87.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unbounded_shl\" class=\"fn\">unbounded_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without bounding the value of <code>rhs</code>.</p>\n<p>If <code>rhs</code> is larger or equal to the number of bits in <code>self</code>,\nthe entire value is shifted out, and <code>0</code> is returned.</p>\n<h5 id=\"examples-52\"><a class=\"doc-anchor\" href=\"#examples-52\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u64</span>.unbounded_shl(<span class=\"number\">4</span>), <span class=\"number\">0x10</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u64</span>.unbounded_shl(<span class=\"number\">129</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"examples-53\"><a class=\"doc-anchor\" href=\"#examples-53\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.checked_shr(<span class=\"number\">4</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0x1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.checked_shr(<span class=\"number\">129</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_shr\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_shr\" class=\"fn\">strict_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict shift right. Computes <code>self &gt;&gt; rhs</code>, panicking <code>rhs</code> is\nlarger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"panics-16\"><a class=\"doc-anchor\" href=\"#panics-16\">§</a>Panics</h5><h6 id=\"overflow-behavior-7\"><a class=\"doc-anchor\" href=\"#overflow-behavior-7\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-54\"><a class=\"doc-anchor\" href=\"#examples-54\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.strict_shr(<span class=\"number\">4</span>), <span class=\"number\">0x1</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">0x10u64</span>.strict_shr(<span class=\"number\">129</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_shr\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_shr\" class=\"fn\">unchecked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_shifts</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that\n<code>rhs</code> is less than the number of bits in <code>self</code>.</p>\n<h5 id=\"safety-6\"><a class=\"doc-anchor\" href=\"#safety-6\">§</a>Safety</h5>\n<p>This results in undefined behavior if <code>rhs</code> is larger than\nor equal to the number of bits in <code>self</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_shr\" title=\"method u64::checked_shr\"><code>checked_shr</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbounded_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.87.0, const since 1.87.0\">1.87.0 (const: 1.87.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unbounded_shr\" class=\"fn\">unbounded_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without bounding the value of <code>rhs</code>.</p>\n<p>If <code>rhs</code> is larger or equal to the number of bits in <code>self</code>,\nthe entire value is shifted out, and <code>0</code> is returned.</p>\n<h5 id=\"examples-55\"><a class=\"doc-anchor\" href=\"#examples-55\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.unbounded_shr(<span class=\"number\">4</span>), <span class=\"number\">0x1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.unbounded_shr(<span class=\"number\">129</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked exponentiation. Computes <code>self.pow(exp)</code>, returning <code>None</code> if\noverflow occurred.</p>\n<h5 id=\"examples-56\"><a class=\"doc-anchor\" href=\"#examples-56\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.checked_pow(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">32</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.checked_pow(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_pow\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_pow\" class=\"fn\">strict_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict exponentiation. Computes <code>self.pow(exp)</code>, panicking if\noverflow occurred.</p>\n<h5 id=\"panics-17\"><a class=\"doc-anchor\" href=\"#panics-17\">§</a>Panics</h5><h6 id=\"overflow-behavior-8\"><a class=\"doc-anchor\" href=\"#overflow-behavior-8\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-57\"><a class=\"doc-anchor\" href=\"#examples-57\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.strict_pow(<span class=\"number\">5</span>), <span class=\"number\">32</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= u64::MAX.strict_pow(<span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer addition. Computes <code>self + rhs</code>, saturating at\nthe numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-58\"><a class=\"doc-anchor\" href=\"#examples-58\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.saturating_add(<span class=\"number\">1</span>), <span class=\"number\">101</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.saturating_add(<span class=\"number\">127</span>), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_add_signed\" class=\"fn\">saturating_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating addition with a signed integer. Computes <code>self + rhs</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-59\"><a class=\"doc-anchor\" href=\"#examples-59\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.saturating_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.saturating_add_signed(-<span class=\"number\">2</span>), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).saturating_add_signed(<span class=\"number\">4</span>), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer subtraction. Computes <code>self - rhs</code>, saturating\nat the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-60\"><a class=\"doc-anchor\" href=\"#examples-60\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.saturating_sub(<span class=\"number\">27</span>), <span class=\"number\">73</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">13u64</span>.saturating_sub(<span class=\"number\">127</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.90.0, const since 1.90.0\">1.90.0 (const: 1.90.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_sub_signed\" class=\"fn\">saturating_sub_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer subtraction. Computes <code>self</code> - <code>rhs</code>, saturating at\nthe numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-61\"><a class=\"doc-anchor\" href=\"#examples-61\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.saturating_sub_signed(<span class=\"number\">2</span>), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.saturating_sub_signed(-<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).saturating_sub_signed(-<span class=\"number\">4</span>), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer multiplication. Computes <code>self * rhs</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-62\"><a class=\"doc-anchor\" href=\"#examples-62\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.saturating_mul(<span class=\"number\">10</span>), <span class=\"number\">20</span>);\n<span class=\"macro\">assert_eq!</span>((u64::MAX).saturating_mul(<span class=\"number\">10</span>), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0, const since 1.58.0\">1.58.0 (const: 1.58.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_div\" class=\"fn\">saturating_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer division. Computes <code>self / rhs</code>, saturating at the\nnumeric bounds instead of overflowing.</p>\n<h5 id=\"panics-18\"><a class=\"doc-anchor\" href=\"#panics-18\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-63\"><a class=\"doc-anchor\" href=\"#examples-63\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.saturating_div(<span class=\"number\">2</span>), <span class=\"number\">2</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer exponentiation. Computes <code>self.pow(exp)</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-64\"><a class=\"doc-anchor\" href=\"#examples-64\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">4u64</span>.saturating_pow(<span class=\"number\">3</span>), <span class=\"number\">64</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.saturating_pow(<span class=\"number\">2</span>), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) addition. Computes <code>self + rhs</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-65\"><a class=\"doc-anchor\" href=\"#examples-65\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">200u64</span>.wrapping_add(<span class=\"number\">55</span>), <span class=\"number\">255</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">200u64</span>.wrapping_add(u64::MAX), <span class=\"number\">199</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_add_signed\" class=\"fn\">wrapping_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) addition with a signed integer. Computes\n<code>self + rhs</code>, wrapping around at the boundary of the type.</p>\n<h5 id=\"examples-66\"><a class=\"doc-anchor\" href=\"#examples-66\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.wrapping_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.wrapping_add_signed(-<span class=\"number\">2</span>), u64::MAX);\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).wrapping_add_signed(<span class=\"number\">4</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) subtraction. Computes <code>self - rhs</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-67\"><a class=\"doc-anchor\" href=\"#examples-67\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.wrapping_sub(<span class=\"number\">100</span>), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.wrapping_sub(u64::MAX), <span class=\"number\">101</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.90.0, const since 1.90.0\">1.90.0 (const: 1.90.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_sub_signed\" class=\"fn\">wrapping_sub_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) subtraction with a signed integer. Computes\n<code>self - rhs</code>, wrapping around at the boundary of the type.</p>\n<h5 id=\"examples-68\"><a class=\"doc-anchor\" href=\"#examples-68\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.wrapping_sub_signed(<span class=\"number\">2</span>), u64::MAX);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.wrapping_sub_signed(-<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).wrapping_sub_signed(-<span class=\"number\">4</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) multiplication. Computes <code>self * rhs</code>, wrapping around at the boundary of the type.</p>\n<h5 id=\"examples-69\"><a class=\"doc-anchor\" href=\"#examples-69\">§</a>Examples</h5>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u8</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u8</span>.wrapping_mul(<span class=\"number\">12</span>), <span class=\"number\">120</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">25u8</span>.wrapping_mul(<span class=\"number\">12</span>), <span class=\"number\">44</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.52.0\">1.2.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_div\" class=\"fn\">wrapping_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) division. Computes <code>self / rhs</code>.</p>\n<p>Wrapped division on unsigned types is just normal division. There’s\nno way wrapping could ever happen. This function exists so that all\noperations are accounted for in the wrapping operations.</p>\n<h5 id=\"panics-19\"><a class=\"doc-anchor\" href=\"#panics-19\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-70\"><a class=\"doc-anchor\" href=\"#examples-70\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.wrapping_div(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_div_euclid\" class=\"fn\">wrapping_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping Euclidean division. Computes <code>self.div_euclid(rhs)</code>.</p>\n<p>Wrapped division on unsigned types is just normal division. There’s\nno way wrapping could ever happen. This function exists so that all\noperations are accounted for in the wrapping operations. Since, for\nthe positive integers, all common definitions of division are equal,\nthis is exactly equal to <code>self.wrapping_div(rhs)</code>.</p>\n<h5 id=\"panics-20\"><a class=\"doc-anchor\" href=\"#panics-20\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-71\"><a class=\"doc-anchor\" href=\"#examples-71\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.wrapping_div_euclid(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.52.0\">1.2.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_rem\" class=\"fn\">wrapping_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) remainder. Computes <code>self % rhs</code>.</p>\n<p>Wrapped remainder calculation on unsigned types is just the regular\nremainder calculation. There’s no way wrapping could ever happen.\nThis function exists so that all operations are accounted for in the\nwrapping operations.</p>\n<h5 id=\"panics-21\"><a class=\"doc-anchor\" href=\"#panics-21\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-72\"><a class=\"doc-anchor\" href=\"#examples-72\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.wrapping_rem(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_rem_euclid\" class=\"fn\">wrapping_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>.</p>\n<p>Wrapped modulo calculation on unsigned types is just the regular\nremainder calculation. There’s no way wrapping could ever happen.\nThis function exists so that all operations are accounted for in the\nwrapping operations. Since, for the positive integers, all common\ndefinitions of division are equal, this is exactly equal to\n<code>self.wrapping_rem(rhs)</code>.</p>\n<h5 id=\"panics-22\"><a class=\"doc-anchor\" href=\"#panics-22\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-73\"><a class=\"doc-anchor\" href=\"#examples-73\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.wrapping_rem_euclid(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type.</p>\n<p>Since unsigned types do not have negative equivalents\nall applications of this function will wrap (except for <code>-0</code>).\nFor values smaller than the corresponding signed type’s maximum\nthe result is the same as casting the corresponding signed value.\nAny larger values are equivalent to <code>MAX + 1 - (val - MAX - 1)</code> where\n<code>MAX</code> is the corresponding signed type’s maximum.</p>\n<h5 id=\"examples-74\"><a class=\"doc-anchor\" href=\"#examples-74\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0_u64</span>.wrapping_neg(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.wrapping_neg(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">13_u64</span>.wrapping_neg(), (!<span class=\"number\">13</span>) + <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">42_u64</span>.wrapping_neg(), !(<span class=\"number\">42 </span>- <span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high-order bits of <code>rhs</code> that\nwould cause the shift to exceed the bitwidth of the type.</p>\n<p>Note that this is <em>not</em> the same as a rotate-left; the\nRHS of a wrapping shift-left is restricted to the range\nof the type, rather than the bits shifted out of the LHS\nbeing returned to the other end. The primitive integer\ntypes all implement a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.rotate_left\" title=\"method u64::rotate_left\"><code>rotate_left</code></a> function,\nwhich may be what you want instead.</p>\n<h5 id=\"examples-75\"><a class=\"doc-anchor\" href=\"#examples-75\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.wrapping_shl(<span class=\"number\">7</span>), <span class=\"number\">128</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.wrapping_shl(<span class=\"number\">128</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high-order bits of <code>rhs</code> that\nwould cause the shift to exceed the bitwidth of the type.</p>\n<p>Note that this is <em>not</em> the same as a rotate-right; the\nRHS of a wrapping shift-right is restricted to the range\nof the type, rather than the bits shifted out of the LHS\nbeing returned to the other end. The primitive integer\ntypes all implement a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.rotate_right\" title=\"method u64::rotate_right\"><code>rotate_right</code></a> function,\nwhich may be what you want instead.</p>\n<h5 id=\"examples-76\"><a class=\"doc-anchor\" href=\"#examples-76\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u64</span>.wrapping_shr(<span class=\"number\">7</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u64</span>.wrapping_shr(<span class=\"number\">128</span>), <span class=\"number\">128</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_pow\" class=\"fn\">wrapping_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) exponentiation. Computes <code>self.pow(exp)</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-77\"><a class=\"doc-anchor\" href=\"#examples-77\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u64</span>.wrapping_pow(<span class=\"number\">5</span>), <span class=\"number\">243</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.wrapping_pow(<span class=\"number\">6</span>), <span class=\"number\">217</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code>.</p>\n<p>Returns a tuple of the addition along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-78\"><a class=\"doc-anchor\" href=\"#examples-78\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.overflowing_add(<span class=\"number\">2</span>), (<span class=\"number\">7</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.overflowing_add(<span class=\"number\">1</span>), (<span class=\"number\">0</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.carrying_add\" class=\"fn\">carrying_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, carry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code> + <code>carry</code> and returns a tuple containing\nthe sum and the output carry.</p>\n<p>Performs “ternary addition” of two integer operands and a carry-in\nbit, and returns an output integer and a carry-out bit. This allows\nchaining together multiple additions to create a wider addition, and\ncan be useful for bignum addition.</p>\n<p>This can be thought of as a 64-bit “full adder”, in the electronics sense.</p>\n<p>If the input carry is false, this method is equivalent to\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.overflowing_add\" title=\"method u64::overflowing_add\"><code>overflowing_add</code></a>, and the output carry is\nequal to the overflow flag. Note that although carry and overflow\nflags are similar for unsigned integers, they are different for\nsigned integers.</p>\n<h5 id=\"examples-79\"><a class=\"doc-anchor\" href=\"#examples-79\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n\n</span><span class=\"comment\">//    3  MAX    (a = 3 × 2^64 + 2^64 - 1)\n// +  5    7    (b = 5 × 2^64 + 7)\n// ---------\n//    9    6    (sum = 9 × 2^64 + 6)\n\n</span><span class=\"kw\">let </span>(a1, a0): (u64, u64) = (<span class=\"number\">3</span>, u64::MAX);\n<span class=\"kw\">let </span>(b1, b0): (u64, u64) = (<span class=\"number\">5</span>, <span class=\"number\">7</span>);\n<span class=\"kw\">let </span>carry0 = <span class=\"bool-val\">false</span>;\n\n<span class=\"kw\">let </span>(sum0, carry1) = a0.carrying_add(b0, carry0);\n<span class=\"macro\">assert_eq!</span>(carry1, <span class=\"bool-val\">true</span>);\n<span class=\"kw\">let </span>(sum1, carry2) = a1.carrying_add(b1, carry1);\n<span class=\"macro\">assert_eq!</span>(carry2, <span class=\"bool-val\">false</span>);\n\n<span class=\"macro\">assert_eq!</span>((sum1, sum0), (<span class=\"number\">9</span>, <span class=\"number\">6</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_add_signed\" class=\"fn\">overflowing_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code> with a signed <code>rhs</code>.</p>\n<p>Returns a tuple of the addition along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-80\"><a class=\"doc-anchor\" href=\"#examples-80\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.overflowing_add_signed(<span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.overflowing_add_signed(-<span class=\"number\">2</span>), (u64::MAX, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).overflowing_add_signed(<span class=\"number\">4</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> - <code>rhs</code>.</p>\n<p>Returns a tuple of the subtraction along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-81\"><a class=\"doc-anchor\" href=\"#examples-81\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.overflowing_sub(<span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.overflowing_sub(<span class=\"number\">1</span>), (u64::MAX, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrowing_sub\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.borrowing_sub\" class=\"fn\">borrowing_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, borrow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates <code>self</code> − <code>rhs</code> − <code>borrow</code> and returns a tuple\ncontaining the difference and the output borrow.</p>\n<p>Performs “ternary subtraction” by subtracting both an integer\noperand and a borrow-in bit from <code>self</code>, and returns an output\ninteger and a borrow-out bit. This allows chaining together multiple\nsubtractions to create a wider subtraction, and can be useful for\nbignum subtraction.</p>\n<h5 id=\"examples-82\"><a class=\"doc-anchor\" href=\"#examples-82\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n\n</span><span class=\"comment\">//    9    6    (a = 9 × 2^64 + 6)\n// -  5    7    (b = 5 × 2^64 + 7)\n// ---------\n//    3  MAX    (diff = 3 × 2^64 + 2^64 - 1)\n\n</span><span class=\"kw\">let </span>(a1, a0): (u64, u64) = (<span class=\"number\">9</span>, <span class=\"number\">6</span>);\n<span class=\"kw\">let </span>(b1, b0): (u64, u64) = (<span class=\"number\">5</span>, <span class=\"number\">7</span>);\n<span class=\"kw\">let </span>borrow0 = <span class=\"bool-val\">false</span>;\n\n<span class=\"kw\">let </span>(diff0, borrow1) = a0.borrowing_sub(b0, borrow0);\n<span class=\"macro\">assert_eq!</span>(borrow1, <span class=\"bool-val\">true</span>);\n<span class=\"kw\">let </span>(diff1, borrow2) = a1.borrowing_sub(b1, borrow1);\n<span class=\"macro\">assert_eq!</span>(borrow2, <span class=\"bool-val\">false</span>);\n\n<span class=\"macro\">assert_eq!</span>((diff1, diff0), (<span class=\"number\">3</span>, u64::MAX));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.90.0, const since 1.90.0\">1.90.0 (const: 1.90.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_sub_signed\" class=\"fn\">overflowing_sub_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> - <code>rhs</code> with a signed <code>rhs</code></p>\n<p>Returns a tuple of the subtraction along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-83\"><a class=\"doc-anchor\" href=\"#examples-83\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.overflowing_sub_signed(<span class=\"number\">2</span>), (u64::MAX, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.overflowing_sub_signed(-<span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).overflowing_sub_signed(-<span class=\"number\">4</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.60.0, const since 1.60.0\">1.60.0 (const: 1.60.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.abs_diff\" class=\"fn\">abs_diff</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Computes the absolute difference between <code>self</code> and <code>other</code>.</p>\n<h5 id=\"examples-84\"><a class=\"doc-anchor\" href=\"#examples-84\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.abs_diff(<span class=\"number\">80</span>), <span class=\"number\">20u64</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.abs_diff(<span class=\"number\">110</span>), <span class=\"number\">10u64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the multiplication of <code>self</code> and <code>rhs</code>.</p>\n<p>Returns a tuple of the multiplication along with a boolean\nindicating whether an arithmetic overflow would occur. If an\noverflow would have occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-85\"><a class=\"doc-anchor\" href=\"#examples-85\">§</a>Examples</h5>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_mul(<span class=\"number\">2</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.overflowing_mul(<span class=\"number\">10</span>), (<span class=\"number\">1410065408</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.widening_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.widening_mul\" class=\"fn\">widening_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the complete product <code>self * rhs</code> without the possibility to overflow.</p>\n<p>This returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.</p>\n<p>If you also need to add a carry to the wide result, then you want\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.carrying_mul\" title=\"method u64::carrying_mul\"><code>Self::carrying_mul</code></a> instead.</p>\n<h5 id=\"examples-86\"><a class=\"doc-anchor\" href=\"#examples-86\">§</a>Examples</h5>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.widening_mul(<span class=\"number\">2</span>), (<span class=\"number\">10</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.widening_mul(<span class=\"number\">10</span>), (<span class=\"number\">1410065408</span>, <span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.carrying_mul\" class=\"fn\">carrying_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, carry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the “full multiplication” <code>self * rhs + carry</code>\nwithout the possibility to overflow.</p>\n<p>This returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.</p>\n<p>Performs “long multiplication” which takes in an extra amount to add, and may return an\nadditional amount of overflow. This allows for chaining together multiple\nmultiplications to create “big integers” which represent larger values.</p>\n<p>If you don’t need the <code>carry</code>, then you can use <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.widening_mul\" title=\"method u64::widening_mul\"><code>Self::widening_mul</code></a> instead.</p>\n<h5 id=\"examples-87\"><a class=\"doc-anchor\" href=\"#examples-87\">§</a>Examples</h5>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul(<span class=\"number\">2</span>, <span class=\"number\">0</span>), (<span class=\"number\">10</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul(<span class=\"number\">2</span>, <span class=\"number\">10</span>), (<span class=\"number\">20</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul(<span class=\"number\">10</span>, <span class=\"number\">0</span>), (<span class=\"number\">1410065408</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul(<span class=\"number\">10</span>, <span class=\"number\">10</span>), (<span class=\"number\">1410065418</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.carrying_mul(u64::MAX, u64::MAX), (<span class=\"number\">0</span>, u64::MAX));</code></pre></div>\n<p>This is the core operation needed for scalar multiplication when\nimplementing it for wider-than-native types.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"kw\">fn </span>scalar_mul_eq(little_endian_digits: <span class=\"kw-2\">&amp;mut </span>Vec&lt;u16&gt;, multiplicand: u16) {\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>carry = <span class=\"number\">0</span>;\n    <span class=\"kw\">for </span>d <span class=\"kw\">in </span>little_endian_digits.iter_mut() {\n        (<span class=\"kw-2\">*</span>d, carry) = d.carrying_mul(multiplicand, carry);\n    }\n    <span class=\"kw\">if </span>carry != <span class=\"number\">0 </span>{\n        little_endian_digits.push(carry);\n    }\n}\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">10</span>, <span class=\"number\">20</span>];\nscalar_mul_eq(<span class=\"kw-2\">&amp;mut </span>v, <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">30</span>, <span class=\"number\">60</span>]);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x87654321_u64 </span>* <span class=\"number\">0xFEED</span>, <span class=\"number\">0x86D3D159E38D</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">0x4321</span>, <span class=\"number\">0x8765</span>];\nscalar_mul_eq(<span class=\"kw-2\">&amp;mut </span>v, <span class=\"number\">0xFEED</span>);\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">0xE38D</span>, <span class=\"number\">0xD159</span>, <span class=\"number\">0x86D3</span>]);</code></pre></div>\n<p>If <code>carry</code> is zero, this is similar to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.overflowing_mul\" title=\"method u64::overflowing_mul\"><code>overflowing_mul</code></a>,\nexcept that it gives the value of the overflow instead of just whether one happened:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"kw\">let </span>r = u8::carrying_mul(<span class=\"number\">7</span>, <span class=\"number\">13</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((r.<span class=\"number\">0</span>, r.<span class=\"number\">1 </span>!= <span class=\"number\">0</span>), u8::overflowing_mul(<span class=\"number\">7</span>, <span class=\"number\">13</span>));\n<span class=\"kw\">let </span>r = u8::carrying_mul(<span class=\"number\">13</span>, <span class=\"number\">42</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((r.<span class=\"number\">0</span>, r.<span class=\"number\">1 </span>!= <span class=\"number\">0</span>), u8::overflowing_mul(<span class=\"number\">13</span>, <span class=\"number\">42</span>));</code></pre></div>\n<p>The value of the first field in the returned tuple matches what you’d get\nby combining the <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.wrapping_mul\" title=\"method u64::wrapping_mul\"><code>wrapping_mul</code></a> and\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.wrapping_add\" title=\"method u64::wrapping_add\"><code>wrapping_add</code></a> methods:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(\n    <span class=\"number\">789_u16</span>.carrying_mul(<span class=\"number\">456</span>, <span class=\"number\">123</span>).<span class=\"number\">0</span>,\n    <span class=\"number\">789_u16</span>.wrapping_mul(<span class=\"number\">456</span>).wrapping_add(<span class=\"number\">123</span>),\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_mul_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.carrying_mul_add\" class=\"fn\">carrying_mul_add</a>(\n    self,\n    rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>,\n    carry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>,\n    add: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>,\n) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the “full multiplication” <code>self * rhs + carry1 + carry2</code>\nwithout the possibility to overflow.</p>\n<p>This returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.</p>\n<p>Performs “long multiplication” which takes in an extra amount to add, and may return an\nadditional amount of overflow. This allows for chaining together multiple\nmultiplications to create “big integers” which represent larger values.</p>\n<p>If you don’t need either <code>carry</code>, then you can use <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.widening_mul\" title=\"method u64::widening_mul\"><code>Self::widening_mul</code></a> instead,\nand if you only need one <code>carry</code>, then you can use <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.carrying_mul\" title=\"method u64::carrying_mul\"><code>Self::carrying_mul</code></a> instead.</p>\n<h5 id=\"examples-88\"><a class=\"doc-anchor\" href=\"#examples-88\">§</a>Examples</h5>\n<p>Please note that this example is shared between integer types,\nwhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul_add(<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>), (<span class=\"number\">10</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul_add(<span class=\"number\">2</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>), (<span class=\"number\">30</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul_add(<span class=\"number\">10</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>), (<span class=\"number\">1410065408</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul_add(<span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>), (<span class=\"number\">1410065428</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.carrying_mul_add(u64::MAX, u64::MAX, u64::MAX), (u64::MAX, u64::MAX));</code></pre></div>\n<p>This is the core per-digit operation for “grade school” O(n²) multiplication.</p>\n<p>Please note that this example is shared between integer types,\nusing <code>u8</code> for simplicity of the demonstration.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n\n</span><span class=\"kw\">fn </span>quadratic_mul&lt;<span class=\"kw\">const </span>N: usize&gt;(a: [u8; N], b: [u8; N]) -&gt; [u8; N] {\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>out = [<span class=\"number\">0</span>; N];\n    <span class=\"kw\">for </span>j <span class=\"kw\">in </span><span class=\"number\">0</span>..N {\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>carry = <span class=\"number\">0</span>;\n        <span class=\"kw\">for </span>i <span class=\"kw\">in </span><span class=\"number\">0</span>..(N - j) {\n            (out[j + i], carry) = u8::carrying_mul_add(a[i], b[j], out[j + i], carry);\n        }\n    }\n    out\n}\n\n<span class=\"comment\">// -1 * -1 == 1\n</span><span class=\"macro\">assert_eq!</span>(quadratic_mul([<span class=\"number\">0xFF</span>; <span class=\"number\">3</span>], [<span class=\"number\">0xFF</span>; <span class=\"number\">3</span>]), [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]);\n\n<span class=\"macro\">assert_eq!</span>(u32::wrapping_mul(<span class=\"number\">0x9e3779b9</span>, <span class=\"number\">0x7f4a7c15</span>), <span class=\"number\">0xCFFC982D</span>);\n<span class=\"macro\">assert_eq!</span>(\n    quadratic_mul(u32::to_le_bytes(<span class=\"number\">0x9e3779b9</span>), u32::to_le_bytes(<span class=\"number\">0x7f4a7c15</span>)),\n    u32::to_le_bytes(<span class=\"number\">0xCFFC982D</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_div\" class=\"fn\">overflowing_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the divisor when <code>self</code> is divided by <code>rhs</code>.</p>\n<p>Returns a tuple of the divisor along with a boolean indicating\nwhether an arithmetic overflow would occur. Note that for unsigned\nintegers overflow never occurs, so the second value is always\n<code>false</code>.</p>\n<h5 id=\"panics-23\"><a class=\"doc-anchor\" href=\"#panics-23\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-89\"><a class=\"doc-anchor\" href=\"#examples-89\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.overflowing_div(<span class=\"number\">2</span>), (<span class=\"number\">2</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_div_euclid\" class=\"fn\">overflowing_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the quotient of Euclidean division <code>self.div_euclid(rhs)</code>.</p>\n<p>Returns a tuple of the divisor along with a boolean indicating\nwhether an arithmetic overflow would occur. Note that for unsigned\nintegers overflow never occurs, so the second value is always\n<code>false</code>.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.overflowing_div(rhs)</code>.</p>\n<h5 id=\"panics-24\"><a class=\"doc-anchor\" href=\"#panics-24\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-90\"><a class=\"doc-anchor\" href=\"#examples-90\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.overflowing_div_euclid(<span class=\"number\">2</span>), (<span class=\"number\">2</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_rem\" class=\"fn\">overflowing_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the remainder when <code>self</code> is divided by <code>rhs</code>.</p>\n<p>Returns a tuple of the remainder after dividing along with a boolean\nindicating whether an arithmetic overflow would occur. Note that for\nunsigned integers overflow never occurs, so the second value is\nalways <code>false</code>.</p>\n<h5 id=\"panics-25\"><a class=\"doc-anchor\" href=\"#panics-25\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-91\"><a class=\"doc-anchor\" href=\"#examples-91\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.overflowing_rem(<span class=\"number\">2</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_rem_euclid\" class=\"fn\">overflowing_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the remainder <code>self.rem_euclid(rhs)</code> as if by Euclidean division.</p>\n<p>Returns a tuple of the modulo after dividing along with a boolean\nindicating whether an arithmetic overflow would occur. Note that for\nunsigned integers overflow never occurs, so the second value is\nalways <code>false</code>.\nSince, for the positive integers, all common\ndefinitions of division are equal, this operation\nis exactly equal to <code>self.overflowing_rem(rhs)</code>.</p>\n<h5 id=\"panics-26\"><a class=\"doc-anchor\" href=\"#panics-26\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-92\"><a class=\"doc-anchor\" href=\"#examples-92\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.overflowing_rem_euclid(<span class=\"number\">2</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Negates self in an overflowing fashion.</p>\n<p>Returns <code>!self + 1</code> using wrapping operations to return the value\nthat represents the negation of this unsigned value. Note that for\npositive unsigned values overflow always occurs, but negating 0 does\nnot overflow.</p>\n<h5 id=\"examples-93\"><a class=\"doc-anchor\" href=\"#examples-93\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.overflowing_neg(), (<span class=\"number\">0</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.overflowing_neg(), (-<span class=\"number\">2i32 </span><span class=\"kw\">as </span>u64, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_shl\" class=\"fn\">overflowing_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Shifts self left by <code>rhs</code> bits.</p>\n<p>Returns a tuple of the shifted version of self along with a boolean\nindicating whether the shift value was larger than or equal to the\nnumber of bits. If the shift value is too large, then value is\nmasked (N-1) where N is the number of bits, and this value is then\nused to perform the shift.</p>\n<h5 id=\"examples-94\"><a class=\"doc-anchor\" href=\"#examples-94\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u64</span>.overflowing_shl(<span class=\"number\">4</span>), (<span class=\"number\">0x10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u64</span>.overflowing_shl(<span class=\"number\">132</span>), (<span class=\"number\">0x10</span>, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.overflowing_shl(<span class=\"number\">63</span>), (<span class=\"number\">0</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_shr\" class=\"fn\">overflowing_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Shifts self right by <code>rhs</code> bits.</p>\n<p>Returns a tuple of the shifted version of self along with a boolean\nindicating whether the shift value was larger than or equal to the\nnumber of bits. If the shift value is too large, then value is\nmasked (N-1) where N is the number of bits, and this value is then\nused to perform the shift.</p>\n<h5 id=\"examples-95\"><a class=\"doc-anchor\" href=\"#examples-95\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.overflowing_shr(<span class=\"number\">4</span>), (<span class=\"number\">0x1</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.overflowing_shr(<span class=\"number\">132</span>), (<span class=\"number\">0x1</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_pow\" class=\"fn\">overflowing_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Raises self to the power of <code>exp</code>, using exponentiation by squaring.</p>\n<p>Returns a tuple of the exponentiation along with a bool indicating\nwhether an overflow happened.</p>\n<h5 id=\"examples-96\"><a class=\"doc-anchor\" href=\"#examples-96\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u64</span>.overflowing_pow(<span class=\"number\">5</span>), (<span class=\"number\">243</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.overflowing_pow(<span class=\"number\">6</span>), (<span class=\"number\">217</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Raises self to the power of <code>exp</code>, using exponentiation by squaring.</p>\n<h5 id=\"examples-97\"><a class=\"doc-anchor\" href=\"#examples-97\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.pow(<span class=\"number\">5</span>), <span class=\"number\">32</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.isqrt\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.84.0, const since 1.84.0\">1.84.0 (const: 1.84.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.isqrt\" class=\"fn\">isqrt</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the square root of the number, rounded down.</p>\n<h5 id=\"examples-98\"><a class=\"doc-anchor\" href=\"#examples-98\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u64</span>.isqrt(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Performs Euclidean division.</p>\n<p>Since, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self / rhs</code>.</p>\n<h5 id=\"panics-27\"><a class=\"doc-anchor\" href=\"#panics-27\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-99\"><a class=\"doc-anchor\" href=\"#examples-99\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7u64</span>.div_euclid(<span class=\"number\">4</span>), <span class=\"number\">1</span>); <span class=\"comment\">// or any other integer type</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Calculates the least remainder of <code>self (mod rhs)</code>.</p>\n<p>Since, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self % rhs</code>.</p>\n<h5 id=\"panics-28\"><a class=\"doc-anchor\" href=\"#panics-28\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-100\"><a class=\"doc-anchor\" href=\"#examples-100\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7u64</span>.rem_euclid(<span class=\"number\">4</span>), <span class=\"number\">3</span>); <span class=\"comment\">// or any other integer type</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_floor\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.div_floor\" class=\"fn\">div_floor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_roundings</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the quotient of <code>self</code> and <code>rhs</code>, rounding the result towards negative infinity.</p>\n<p>This is the same as performing <code>self / rhs</code> for all unsigned integers.</p>\n<h5 id=\"panics-29\"><a class=\"doc-anchor\" href=\"#panics-29\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-101\"><a class=\"doc-anchor\" href=\"#examples-101\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(int_roundings)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7_u64</span>.div_floor(<span class=\"number\">4</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_ceil\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.div_ceil\" class=\"fn\">div_ceil</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Calculates the quotient of <code>self</code> and <code>rhs</code>, rounding the result towards positive infinity.</p>\n<h5 id=\"panics-30\"><a class=\"doc-anchor\" href=\"#panics-30\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-102\"><a class=\"doc-anchor\" href=\"#examples-102\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7_u64</span>.div_ceil(<span class=\"number\">4</span>), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.next_multiple_of\" class=\"fn\">next_multiple_of</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Calculates the smallest value greater than or equal to <code>self</code> that\nis a multiple of <code>rhs</code>.</p>\n<h5 id=\"panics-31\"><a class=\"doc-anchor\" href=\"#panics-31\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h6 id=\"overflow-behavior-9\"><a class=\"doc-anchor\" href=\"#overflow-behavior-9\">§</a>Overflow behavior</h6>\n<p>On overflow, this function will panic if overflow checks are enabled (default in debug\nmode) and wrap if overflow checks are disabled (default in release mode).</p>\n<h5 id=\"examples-103\"><a class=\"doc-anchor\" href=\"#examples-103\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">16_u64</span>.next_multiple_of(<span class=\"number\">8</span>), <span class=\"number\">16</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">23_u64</span>.next_multiple_of(<span class=\"number\">8</span>), <span class=\"number\">24</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_multiple_of\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_next_multiple_of\" class=\"fn\">checked_next_multiple_of</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Calculates the smallest value greater than or equal to <code>self</code> that\nis a multiple of <code>rhs</code>. Returns <code>None</code> if <code>rhs</code> is zero or the\noperation would result in overflow.</p>\n<h5 id=\"examples-104\"><a class=\"doc-anchor\" href=\"#examples-104\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">16_u64</span>.checked_next_multiple_of(<span class=\"number\">8</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">16</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">23_u64</span>.checked_next_multiple_of(<span class=\"number\">8</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">24</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_u64</span>.checked_next_multiple_of(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.checked_next_multiple_of(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_multiple_of\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.87.0, const since 1.87.0\">1.87.0 (const: 1.87.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.is_multiple_of\" class=\"fn\">is_multiple_of</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is an integer multiple of <code>rhs</code>, and false otherwise.</p>\n<p>This function is equivalent to <code>self % rhs == 0</code>, except that it will not panic\nfor <code>rhs == 0</code>. Instead, <code>0.is_multiple_of(0) == true</code>, and for any non-zero <code>n</code>,\n<code>n.is_multiple_of(0) == false</code>.</p>\n<h5 id=\"examples-105\"><a class=\"doc-anchor\" href=\"#examples-105\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(<span class=\"number\">6_u64</span>.is_multiple_of(<span class=\"number\">2</span>));\n<span class=\"macro\">assert!</span>(!<span class=\"number\">5_u64</span>.is_multiple_of(<span class=\"number\">2</span>));\n\n<span class=\"macro\">assert!</span>(<span class=\"number\">0_u64</span>.is_multiple_of(<span class=\"number\">0</span>));\n<span class=\"macro\">assert!</span>(!<span class=\"number\">6_u64</span>.is_multiple_of(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == 2^k</code> for some unsigned integer <code>k</code>.</p>\n<h5 id=\"examples-106\"><a class=\"doc-anchor\" href=\"#examples-106\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(<span class=\"number\">16u64</span>.is_power_of_two());\n<span class=\"macro\">assert!</span>(!<span class=\"number\">10u64</span>.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.next_power_of_two\" class=\"fn\">next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>self</code>.</p>\n<p>When return value overflows (i.e., <code>self &gt; (1 &lt;&lt; (N-1))</code> for type\n<code>uN</code>), it panics in debug mode and the return value is wrapped to 0 in\nrelease mode (the only situation in which this method can return 0).</p>\n<h5 id=\"examples-107\"><a class=\"doc-anchor\" href=\"#examples-107\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.next_power_of_two(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u64</span>.next_power_of_two(), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.next_power_of_two(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>self</code>. If\nthe next power of two is greater than the type’s maximum value,\n<code>None</code> is returned, otherwise the power of two is wrapped in <code>Some</code>.</p>\n<h5 id=\"examples-108\"><a class=\"doc-anchor\" href=\"#examples-108\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.checked_next_power_of_two(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u64</span>.checked_next_power_of_two(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.checked_next_power_of_two(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_next_power_of_two\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_next_power_of_two\" class=\"fn\">wrapping_next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>wrapping_next_power_of_two</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>n</code>. If\nthe next power of two is greater than the type’s maximum value,\nthe return value is wrapped to <code>0</code>.</p>\n<h5 id=\"examples-109\"><a class=\"doc-anchor\" href=\"#examples-109\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(wrapping_next_power_of_two)]\n\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.wrapping_next_power_of_two(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u64</span>.wrapping_next_power_of_two(), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.wrapping_next_power_of_two(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the memory representation of this integer as a byte array in\nbig-endian (network) byte order.</p>\n<h5 id=\"examples-110\"><a class=\"doc-anchor\" href=\"#examples-110\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x1234567890123456u64</span>.to_be_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, [<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the memory representation of this integer as a byte array in\nlittle-endian byte order.</p>\n<h5 id=\"examples-111\"><a class=\"doc-anchor\" href=\"#examples-111\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x1234567890123456u64</span>.to_le_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, [<span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the memory representation of this integer as a byte array in\nnative byte order.</p>\n<p>As the target platform’s native endianness is used, portable code\nshould use <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.to_be_bytes\" title=\"method u64::to_be_bytes\"><code>to_be_bytes</code></a> or <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.to_le_bytes\" title=\"method u64::to_le_bytes\"><code>to_le_bytes</code></a>, as appropriate,\ninstead.</p>\n<h5 id=\"examples-112\"><a class=\"doc-anchor\" href=\"#examples-112\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x1234567890123456u64</span>.to_ne_bytes();\n<span class=\"macro\">assert_eq!</span>(\n    bytes,\n    <span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n        [<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>]\n    } <span class=\"kw\">else </span>{\n        [<span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]\n    }\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Creates a native endian integer value from its representation\nas a byte array in big endian.</p>\n<h5 id=\"examples-113\"><a class=\"doc-anchor\" href=\"#examples-113\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u64::from_be_bytes([<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>]);\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x1234567890123456</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_be_u64(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u64 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(size_of::&lt;u64&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u64::from_be_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Creates a native endian integer value from its representation\nas a byte array in little endian.</p>\n<h5 id=\"examples-114\"><a class=\"doc-anchor\" href=\"#examples-114\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u64::from_le_bytes([<span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]);\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x1234567890123456</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_le_u64(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u64 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(size_of::&lt;u64&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u64::from_le_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Creates a native endian integer value from its memory representation\nas a byte array in native endianness.</p>\n<p>As the target platform’s native endianness is used, portable code\nlikely wants to use <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.from_be_bytes\" title=\"associated function u64::from_be_bytes\"><code>from_be_bytes</code></a> or <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.from_le_bytes\" title=\"associated function u64::from_le_bytes\"><code>from_le_bytes</code></a>, as\nappropriate instead.</p>\n<h5 id=\"examples-115\"><a class=\"doc-anchor\" href=\"#examples-115\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u64::from_ne_bytes(<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    [<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>]\n} <span class=\"kw\">else </span>{\n    [<span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]\n});\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x1234567890123456</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_ne_u64(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u64 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(size_of::&lt;u64&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u64::from_ne_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecating in a future version: replaced by the <code>MIN</code> associated constant on this type</span></div></span></summary><div class=\"docblock\"><p>New code should prefer to use\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#associatedconstant.MIN\" title=\"associated constant u64::MIN\"><code>u64::MIN</code></a> instead.</p>\n<p>Returns the smallest value that can be represented by this integer type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecating in a future version: replaced by the <code>MAX</code> associated constant on this type</span></div></span></summary><div class=\"docblock\"><p>New code should prefer to use\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#associatedconstant.MAX\" title=\"associated constant u64::MAX\"><code>u64::MAX</code></a> instead.</p>\n<p>Returns the largest value that can be represented by this integer type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.85.0, const since 1.85.0\">1.85.0 (const: 1.85.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1170\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Calculates the midpoint (average) between <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) / 2</code> as if it were performed in a\nsufficiently-large unsigned integral type. This implies that the result is\nalways rounded towards zero and that no overflow will ever occur.</p>\n<h5 id=\"examples-116\"><a class=\"doc-anchor\" href=\"#examples-116\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.midpoint(<span class=\"number\">4</span>), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.midpoint(<span class=\"number\">4</span>), <span class=\"number\">2</span>);</code></pre></div>\n</div></details></div></details>",0,"mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a><a href=\"#impl-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.82.0\">1.0.0 (const: 1.82.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an integer from a string slice with digits in a given base.</p>\n<p>The string is expected to be an optional\n<code>+</code>\nsign followed by only digits. Leading and trailing non-digit characters (including\nwhitespace) represent an error. Underscores (which are accepted in Rust literals)\nalso represent an error.</p>\n<p>Digits are a subset of these characters, depending on <code>radix</code>:</p>\n<ul>\n<li><code>0-9</code></li>\n<li><code>a-z</code></li>\n<li><code>A-Z</code></li>\n</ul>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>This function panics if <code>radix</code> is not in the range from 2 to 36.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u64::from_str_radix(<span class=\"string\">\"A\"</span>, <span class=\"number\">16</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));</code></pre></div>\n<p>Trailing space returns error:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(u64::from_str_radix(<span class=\"string\">\"1 \"</span>, <span class=\"number\">10</span>).is_err());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ascii\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_ascii\" class=\"fn\">from_ascii</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_from_ascii</code>)</span></div></span></summary><div class=\"docblock\"><p>Parses an integer from an ASCII-byte slice with decimal digits.</p>\n<p>The characters are expected to be an optional\n<code>+</code>\nsign followed by only digits. Leading and trailing non-digit characters (including\nwhitespace) represent an error. Underscores (which are accepted in Rust literals)\nalso represent an error.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(int_from_ascii)]\n\n</span><span class=\"macro\">assert_eq!</span>(u64::from_ascii(<span class=\"string\">b\"+10\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));</code></pre></div>\n<p>Trailing space returns error:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(u64::from_ascii(<span class=\"string\">b\"1 \"</span>).is_err());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ascii_radix\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_ascii_radix\" class=\"fn\">from_ascii_radix</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_from_ascii</code>)</span></div></span></summary><div class=\"docblock\"><p>Parses an integer from an ASCII-byte slice with digits in a given base.</p>\n<p>The characters are expected to be an optional\n<code>+</code>\nsign followed by only digits. Leading and trailing non-digit characters (including\nwhitespace) represent an error. Underscores (which are accepted in Rust literals)\nalso represent an error.</p>\n<p>Digits are a subset of these characters, depending on <code>radix</code>:</p>\n<ul>\n<li><code>0-9</code></li>\n<li><code>a-z</code></li>\n<li><code>A-Z</code></li>\n</ul>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>This function panics if <code>radix</code> is not in the range from 2 to 36.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(int_from_ascii)]\n\n</span><span class=\"macro\">assert_eq!</span>(u64::from_ascii_radix(<span class=\"string\">b\"A\"</span>, <span class=\"number\">16</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));</code></pre></div>\n<p>Trailing space returns error:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(u64::from_ascii_radix(<span class=\"string\">b\"1 \"</span>, <span class=\"number\">10</span>).is_err());</code></pre></div>\n</div></details></div></details>",0,"mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-ConstParamTy_-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#1116-1125\">Source</a><a href=\"#impl-ConstParamTy_-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.ConstParamTy_.html\" title=\"trait core::marker::ConstParamTy_\">ConstParamTy_</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","ConstParamTy_","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-Copy-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#483-493\">Source</a></span><a href=\"#impl-Copy-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","Copy","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-DefaultIsZeroes-for-u64\" class=\"impl\"><a href=\"#impl-DefaultIsZeroes-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DefaultIsZeroes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","DefaultIsZeroes","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-Eq-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1847\">Source</a></span><a href=\"#impl-Eq-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","Eq","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-EqULE-for-u64\" class=\"impl\"><a href=\"#impl-EqULE-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EqULE for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","EqULE","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsCast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<i128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsCast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<i16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsCast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<i32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsCast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<i64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsCast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<i8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsCast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<isize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsCast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<u128>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsCast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<u16>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsCast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<u32>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsCast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<u64>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsCast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<u8>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsCast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<usize>","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsOptionalArbitrary-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsOptionalArbitrary-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsOptionalArbitrary.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalArbitrary\">FixedBitsOptionalArbitrary</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsOptionalArbitrary","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsOptionalBorsh-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsOptionalBorsh-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsOptionalBorsh.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalBorsh\">FixedBitsOptionalBorsh</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsOptionalBorsh","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsOptionalNum-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsOptionalNum-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsOptionalNum.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalNum\">FixedBitsOptionalNum</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsOptionalNum","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-FixedBitsOptionalSerde-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsOptionalSerde-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsOptionalSerde.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalSerde\">FixedBitsOptionalSerde</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsOptionalSerde","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-Format-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/2.3.3/src/serde_with/formats.rs.html#30-59\">Source</a><a href=\"#impl-Format-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde_with/2.3.3/serde_with/formats/trait.Format.html\" title=\"trait serde_with::formats::Format\">Format</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3><div class=\"docblock\"><p>Serialize into a u64</p>\n</div></section>","Format","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-Format-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.14.0/src/serde_with/formats.rs.html#30-59\">Source</a><a href=\"#impl-Format-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde_with/3.14.0/serde_with/formats/trait.Format.html\" title=\"trait serde_with::formats::Format\">Format</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3><div class=\"docblock\"><p>Serialize into a u64</p>\n</div></section>","Format","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-Immutable-for-u64\" class=\"impl\"><a href=\"#impl-Immutable-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Immutable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","Immutable","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-Integer-for-u64\" class=\"impl\"><a href=\"#impl-Integer-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Integer for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","Integer","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-Pod-for-u64\" class=\"impl\"><a href=\"#impl-Pod-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Pod for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","Pod","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-SimdCast-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/cast.rs.html#42\">Source</a><a href=\"#impl-SimdCast-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/cast/trait.SimdCast.html\" title=\"trait core::core_simd::cast::SimdCast\">SimdCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","SimdCast","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-StructuralPartialEq-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#266-278\">Source</a><a href=\"#impl-StructuralPartialEq-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","StructuralPartialEq","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-TrustedStep-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#17\">Source</a><a href=\"#impl-TrustedStep-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/marker/trait.TrustedStep.html\" title=\"trait core::iter::traits::marker::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","TrustedStep","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-Unsigned-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/sign.rs.html#202\">Source</a><a href=\"#impl-Unsigned-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/sign/trait.Unsigned.html\" title=\"trait num_traits::sign::Unsigned\">Unsigned</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","Unsigned","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-UnsizedConstParamTy-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#1127-1140\">Source</a><a href=\"#impl-UnsizedConstParamTy-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.UnsizedConstParamTy.html\" title=\"trait core::marker::UnsizedConstParamTy\">UnsizedConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","UnsizedConstParamTy","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-UseCloned-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#275-280\">Source</a><a href=\"#impl-UseCloned-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.UseCloned.html\" title=\"trait core::clone::UseCloned\">UseCloned</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","UseCloned","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-VaArgSafe-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ffi/va_list.rs.html#226\">Source</a><a href=\"#impl-VaArgSafe-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ffi/va_list/trait.VaArgSafe.html\" title=\"trait core::ffi::va_list::VaArgSafe\">VaArgSafe</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","VaArgSafe","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"],["<section id=\"impl-ZeroablePrimitive-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#69-83\">Source</a><a href=\"#impl-ZeroablePrimitive-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","ZeroablePrimitive","mithril_client::common::ImmutableFileNumber","mithril_client::common::MagicId"]]],["mithril_common",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26BigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/addition.rs.html#88\">Source</a><a href=\"#impl-Add%3C%26BigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/addition.rs.html#88\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/addition.rs.html#88\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&BigInt>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/addition.rs.html#119\">Source</a><a href=\"#impl-Add%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/addition.rs.html#119\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/addition.rs.html#119\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#impl-Add%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Epoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#impl-Add%3C%26Epoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&Epoch>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26SlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#impl-Add%3C%26SlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&SlotNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#113\">Source</a></span><a href=\"#impl-Add%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#113\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#113\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CBigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/addition.rs.html#88\">Source</a><a href=\"#impl-Add%3CBigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/addition.rs.html#88\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/addition.rs.html#88\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<BigInt>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/addition.rs.html#119\">Source</a><a href=\"#impl-Add%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/addition.rs.html#119\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/addition.rs.html#119\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#impl-Add%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CEpoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#impl-Add%3CEpoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Epoch>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CSlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#impl-Add%3CSlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<SlotNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Add%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#113\">Source</a></span><a href=\"#impl-Add-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#113\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#113\">Source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#impl-AddAssign%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26Epoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#impl-AddAssign%3C%26Epoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&Epoch>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26SlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#impl-AddAssign%3C%26SlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&SlotNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#783\">Source</a></span><a href=\"#impl-AddAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#783\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#impl-AddAssign%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#51\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CEpoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#impl-AddAssign%3CEpoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#119\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<Epoch>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CSlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#impl-AddAssign%3CSlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#46\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<SlotNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-AddAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#783\">Source</a></span><a href=\"#impl-AddAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#783\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cf32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cf64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#761\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AtomicPrimitive-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/sync/atomic.rs.html#303\">Source</a><a href=\"#impl-AtomicPrimitive-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/sync/atomic/trait.AtomicPrimitive.html\" title=\"trait core::sync::atomic::AtomicPrimitive\">AtomicPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AtomicInner\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/sync/atomic.rs.html#303\">Source</a><a href=\"#associatedtype.AtomicInner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/sync/atomic/trait.AtomicPrimitive.html#associatedtype.AtomicInner\" class=\"associatedtype\">AtomicInner</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/sync/atomic/struct.AtomicU64.html\" title=\"struct core::sync::atomic::AtomicU64\">AtomicU64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>atomic_internals</code>)</span></div></span><div class='docblock'>Temporary implementation detail.</div></details></div></details>","AtomicPrimitive","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a></span><a href=\"#impl-Binary-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Binary.html#tymethod.fmt\">Read more</a></div></details></div></details>","Binary","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a></span><a href=\"#impl-BitAnd%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-BitAnd%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a></span><a href=\"#impl-BitAnd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a></span><a href=\"#impl-BitAndAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-BitAndAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a></span><a href=\"#impl-BitAndAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a></span><a href=\"#impl-BitOr%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-BitOr%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a></span><a href=\"#impl-BitOr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a></span><a href=\"#impl-BitOrAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-BitOrAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a></span><a href=\"#impl-BitOrAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a></span><a href=\"#impl-BitXor%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-BitXor%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a></span><a href=\"#impl-BitXor-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a></span><a href=\"#impl-BitXorAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-BitXorAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a></span><a href=\"#impl-BitXorAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowDecode%3C'de,+__Context%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/de/impls.rs.html#134\">Source</a><a href=\"#impl-BorrowDecode%3C'de,+__Context%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, __Context&gt; <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.BorrowDecode.html\" title=\"trait bincode::de::BorrowDecode\">BorrowDecode</a>&lt;'de, __Context&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/de/impls.rs.html#134\">Source</a><a href=\"#method.borrow_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.BorrowDecode.html#tymethod.borrow_decode\" class=\"fn\">borrow_decode</a>&lt;D&gt;(decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"https://docs.rs/bincode/2.0.1/bincode/error/enum.DecodeError.html\" title=\"enum bincode::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.BorrowDecoder.html\" title=\"trait bincode::de::BorrowDecoder\">BorrowDecoder</a>&lt;'de, Context = __Context&gt;,</div></h4></section></summary><div class='docblock'>Attempt to decode this type with the given <a href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.BorrowDecode.html\" title=\"trait bincode::de::BorrowDecode\">BorrowDecode</a>.</div></details></div></details>","BorrowDecode<'de, __Context>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#61\">Source</a><a href=\"#impl-Bounded-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#61\">Source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#61\">Source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CarryingMulAdd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#35-46\">Source</a><a href=\"#impl-CarryingMulAdd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.CarryingMulAdd.html\" title=\"trait core::intrinsics::fallback::CarryingMulAdd\">CarryingMulAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Unsigned\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#35-46\">Source</a><a href=\"#associatedtype.Unsigned\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.CarryingMulAdd.html#associatedtype.Unsigned\" class=\"associatedtype\">Unsigned</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_intrinsics_fallbacks</code>)</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#35-46\">Source</a><a href=\"#method.carrying_mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.CarryingMulAdd.html#tymethod.carrying_mul_add\" class=\"fn\">carrying_mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_intrinsics_fallbacks</code>)</span></div></span></details></div></details>","CarryingMulAdd","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedI8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-Cast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<FixedU8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci128%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3CWrapping%3Ci128%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i128>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci16%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3CWrapping%3Ci16%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i16>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci32%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3CWrapping%3Ci32%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i32>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci64%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3CWrapping%3Ci64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i64>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Ci8%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3CWrapping%3Ci8%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<i8>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cisize%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cisize%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<isize>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu128%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cu128%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u128>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu16%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cu16%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u16>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu32%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cu32%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u32>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu64%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u64>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cu8%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cu8%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<u8>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3CWrapping%3Cusize%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3CWrapping%3Cusize%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<Wrapping<usize>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cf32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">Source</a><a href=\"#impl-Cast%3Cf32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<f32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cf64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">Source</a><a href=\"#impl-Cast%3Cf64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<f64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-Cast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-Cast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.Cast.html\" title=\"trait az::Cast\">Cast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.Cast.html#tymethod.cast\" class=\"fn\">cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","Cast<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#25\">Source</a><a href=\"#impl-CheckedAdd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedAdd.html\" title=\"trait num_traits::ops::checked::CheckedAdd\">CheckedAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#25\">Source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedI8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-CheckedCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<FixedU8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci128%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci128%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i128>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci16%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci16%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i16>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci32%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci32%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i32>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci64%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i64>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Ci8%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Ci8%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<i8>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cisize%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cisize%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<isize>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu128%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu128%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u128>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu16%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu16%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u16>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu32%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu32%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u32>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu64%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u64>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cu8%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cu8%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<u8>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3CWrapping%3Cusize%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3CWrapping%3Cusize%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<Wrapping<usize>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cf32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">Source</a><a href=\"#impl-CheckedCast%3Cf32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<f32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cf64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">Source</a><a href=\"#impl-CheckedCast%3Cf64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<f64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-CheckedCast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedCast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-CheckedCast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html\" title=\"trait az::CheckedCast\">CheckedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.checked_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.CheckedCast.html#tymethod.checked_cast\" class=\"fn\">checked_cast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","CheckedCast<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#90\">Source</a><a href=\"#impl-CheckedDiv-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedDiv.html\" title=\"trait num_traits::ops::checked::CheckedDiv\">CheckedDiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#90\">Source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedEuclid-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#185\">Source</a><a href=\"#impl-CheckedEuclid-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html\" title=\"trait num_traits::ops::euclid::CheckedEuclid\">CheckedEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#185\">Source</a><a href=\"#method.checked_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Performs euclid division that returns <code>None</code> instead of panicking on division by zero\nand instead of wrapping around on underflow and overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#185\">Source</a><a href=\"#method.checked_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Finds the euclid remainder of dividing two numbers, checking for underflow, overflow and\ndivision by zero. If any of that happens, <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#163\">Source</a><a href=\"#method.checked_div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#method.checked_div_rem_euclid\" class=\"fn\">checked_div_rem_euclid</a>(&amp;self, v: &amp;Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(Self, Self)&gt;</h4></section></summary><div class='docblock'>Returns both the quotient and remainder from checked Euclidean division. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.CheckedEuclid.html#method.checked_div_rem_euclid\">Read more</a></div></details></div></details>","CheckedEuclid","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#68\">Source</a><a href=\"#impl-CheckedMul-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedMul.html\" title=\"trait num_traits::ops::checked::CheckedMul\">CheckedMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#68\">Source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, <code>None</code> is returned.</div></details></div></details>","CheckedMul","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedNeg-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#175\">Source</a><a href=\"#impl-CheckedNeg-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html\" title=\"trait num_traits::ops::checked::CheckedNeg\">CheckedNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#175\">Source</a><a href=\"#method.checked_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Negates a number, returning <code>None</code> for results that can’t be represented, like signed <code>MIN</code>\nvalues that can’t be positive, or non-zero unsigned values that can’t be negative. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedNeg.html#tymethod.checked_neg\">Read more</a></div></details></div></details>","CheckedNeg","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedRem-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#129\">Source</a><a href=\"#impl-CheckedRem-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html\" title=\"trait num_traits::ops::checked::CheckedRem\">CheckedRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#129\">Source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Finds the remainder of dividing two numbers, checking for underflow, overflow and division\nby zero. If any of that happens, <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedRem.html#tymethod.checked_rem\">Read more</a></div></details></div></details>","CheckedRem","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShl-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#219\">Source</a><a href=\"#impl-CheckedShl-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html\" title=\"trait num_traits::ops::checked::CheckedShl\">CheckedShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#219\">Source</a><a href=\"#method.checked_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShl.html#tymethod.checked_shl\">Read more</a></div></details></div></details>","CheckedShl","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShr-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#252\">Source</a><a href=\"#impl-CheckedShr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html\" title=\"trait num_traits::ops::checked::CheckedShr\">CheckedShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#252\">Source</a><a href=\"#method.checked_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedShr.html#tymethod.checked_shr\">Read more</a></div></details></div></details>","CheckedShr","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#46\">Source</a><a href=\"#impl-CheckedSub-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedSub.html\" title=\"trait num_traits::ops::checked::CheckedSub\">CheckedSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/checked.rs.html#46\">Source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/checked/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#556-561\">Source</a></span><a href=\"#impl-Clone-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#556-561\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConditionallySelectable-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#544\">Source</a><a href=\"#impl-ConditionallySelectable-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html\" title=\"trait subtle::ConditionallySelectable\">ConditionallySelectable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.conditional_select\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#544\">Source</a><a href=\"#method.conditional_select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#tymethod.conditional_select\" class=\"fn\">conditional_select</a>(a: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, b: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, choice: <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Select <code>a</code> or <code>b</code> according to <code>choice</code>. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#tymethod.conditional_select\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conditional_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#544\">Source</a><a href=\"#method.conditional_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#method.conditional_assign\" class=\"fn\">conditional_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, choice: <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>)</h4></section></summary><div class='docblock'>Conditionally assign <code>other</code> to <code>self</code>, according to <code>choice</code>. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#method.conditional_assign\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conditional_swap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#544\">Source</a><a href=\"#method.conditional_swap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#method.conditional_swap\" class=\"fn\">conditional_swap</a>(a: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, b: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, choice: <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>)</h4></section></summary><div class='docblock'>Conditionally swap <code>self</code> and <code>other</code> if <code>choice == 1</code>; otherwise,\nreassign both unto themselves. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConditionallySelectable.html#method.conditional_swap\">Read more</a></div></details></div></details>","ConditionallySelectable","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstOne-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#166\">Source</a><a href=\"#impl-ConstOne-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.ConstOne.html\" title=\"trait num_traits::identities::ConstOne\">ConstOne</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#166\">Source</a><a href=\"#associatedconstant.ONE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.ConstOne.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 1u64</h4></section></summary><div class='docblock'>The multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","ConstOne","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstZero-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#61\">Source</a><a href=\"#impl-ConstZero-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.ConstZero.html\" title=\"trait num_traits::identities::ConstZero\">ConstZero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#61\">Source</a><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.ConstZero.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 0u64</h4></section></summary><div class='docblock'>The additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","ConstZero","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeEq-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#373\">Source</a><a href=\"#impl-ConstantTimeEq-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html\" title=\"trait subtle::ConstantTimeEq\">ConstantTimeEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#373\">Source</a><a href=\"#method.ct_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\" class=\"fn\">ct_eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are equal. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html#tymethod.ct_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#284\">Source</a><a href=\"#method.ct_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html#method.ct_ne\" class=\"fn\">ct_ne</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine if two items are NOT equal. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeEq.html#method.ct_ne\">Read more</a></div></details></div></details>","ConstantTimeEq","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeGreater-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#917\">Source</a><a href=\"#impl-ConstantTimeGreater-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeGreater.html\" title=\"trait subtle::ConstantTimeGreater\">ConstantTimeGreater</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#917\">Source</a><a href=\"#method.ct_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeGreater.html#tymethod.ct_gt\" class=\"fn\">ct_gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class=\"docblock\"><p>Returns Choice::from(1) iff x &gt; y, and Choice::from(0) iff x &lt;= y.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This algoritm would also work for signed integers if we first\nflip the top bit, e.g. <code>let x: u8 = x ^ 0x80</code>, etc.</p>\n</div></details></div></details>","ConstantTimeGreater","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstantTimeLess-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#978\">Source</a><a href=\"#impl-ConstantTimeLess-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeLess.html\" title=\"trait subtle::ConstantTimeLess\">ConstantTimeLess</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ct_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.6.0/src/subtle/lib.rs.html#970\">Source</a><a href=\"#method.ct_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeLess.html#method.ct_lt\" class=\"fn\">ct_lt</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"struct\" href=\"https://docs.rs/subtle/2.6.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a></h4></section></summary><div class='docblock'>Determine whether <code>self &lt; other</code>. <a href=\"https://docs.rs/subtle/2.6.0/subtle/trait.ConstantTimeLess.html#method.ct_lt\">Read more</a></div></details></div></details>","ConstantTimeLess","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contiguous-for-u64\" class=\"impl\"><a href=\"#impl-Contiguous-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Contiguous for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 18_446_744_073_709_551_615u64</h4></section></summary><div class='docblock'>The upper <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 0u64</h4></section></summary><div class='docblock'>The lower <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Int\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Int\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Int</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The primitive integer type with an identical representation to this\ntype. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method trait-impl\"><a href=\"#method.from_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_integer</a>(value: Self::Int) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>If <code>value</code> is within the range for valid instances of this type,\nreturns <code>Some(converted_value)</code>, otherwise, returns <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_integer\" class=\"method trait-impl\"><a href=\"#method.into_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_integer</a>(self) -&gt; Self::Int</h4></section></summary><div class='docblock'>Perform the conversion from <code>C</code> into the underlying integral type. This\nmostly exists otherwise generic code would need unsafe for the <code>value as integer</code> <a>Read more</a></div></details></div></details>","Contiguous","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#616-619\">Source</a></span><a href=\"#impl-Debug-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#616-619\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CContext%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/de/impls.rs.html#116\">Source</a><a href=\"#impl-Decode%3CContext%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Context&gt; <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.Decode.html\" title=\"trait bincode::de::Decode\">Decode</a>&lt;Context&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/de/impls.rs.html#117\">Source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.Decode.html#tymethod.decode\" class=\"fn\">decode</a>&lt;D&gt;(decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"https://docs.rs/bincode/2.0.1/bincode/error/enum.DecodeError.html\" title=\"enum bincode::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.Decoder.html\" title=\"trait bincode::de::Decoder\">Decoder</a>&lt;Context = Context&gt;,</div></h4></section></summary><div class='docblock'>Attempt to decode this type with the given <a href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.Decode.html\" title=\"trait bincode::de::Decode\">Decode</a>.</div></details></div></details>","Decode<Context>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143894\" title=\"Tracking issue for const_default\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/default.rs.html#174\">Source</a></span><a href=\"#impl-Default-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/default.rs.html#174\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>0</code></p>\n</div></details></div></details>","Default","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#443-448\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/impls.rs.html#443-448\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DisjointBitOr-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#146-150\">Source</a><a href=\"#impl-DisjointBitOr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.DisjointBitOr.html\" title=\"trait core::intrinsics::fallback::DisjointBitOr\">DisjointBitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.disjoint_bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#146-150\">Source</a><a href=\"#method.disjoint_bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.DisjointBitOr.html#tymethod.disjoint_bitor\" class=\"fn\">disjoint_bitor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_intrinsics_fallbacks</code>)</span></div></span><div class='docblock'>See <a href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fn.disjoint_bitor.html\" title=\"fn core::intrinsics::disjoint_bitor\"><code>super::disjoint_bitor</code></a>; we just need the trait indirection to handle\ndifferent types since calling intrinsics with generics doesn’t work.</div></details></div></details>","DisjointBitOr","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#626-633\">Source</a></span><a href=\"#impl-Display-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#626-633\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26BigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#34\">Source</a><a href=\"#impl-Div%3C%26BigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#34\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#34\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&BigInt>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#378\">Source</a><a href=\"#impl-Div%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#378\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#378\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#impl-Div%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#500-503\">Source</a></span><a href=\"#impl-Div%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#500-503\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#500-503\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CBigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#84\">Source</a><a href=\"#impl-Div%3CBigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#85\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#88\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<BigInt>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#428\">Source</a><a href=\"#impl-Div%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#429\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#443\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#impl-Div%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a></span><a href=\"#impl-Div%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Same as <code>self / other.get()</code>, but because <code>other</code> is a <code>NonZero&lt;_&gt;</code>,\nthere’s never a runtime check for division-by-zero.</p>\n<p>This operation rounds towards zero, truncating any fractional\npart of the exact result, and cannot panic.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details></div></details>","Div<NonZero<u64>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Div%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#500-503\">Source</a></span><a href=\"#impl-Div-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3><div class=\"docblock\"><p>This operation rounds towards zero, truncating any\nfractional part of the exact result.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>This operation will panic if <code>other == 0</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#500-503\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#500-503\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#impl-DivAssign%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#965\">Source</a></span><a href=\"#impl-DivAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#965\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#impl-DivAssign%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#54\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.79.0\">1.79.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a></span><a href=\"#impl-DivAssign%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Same as <code>self /= other.get()</code>, but because <code>other</code> is a <code>NonZero&lt;_&gt;</code>,\nthere’s never a runtime check for division-by-zero.</p>\n<p>This operation rounds towards zero, truncating any fractional\npart of the exact result, and cannot panic.</p>\n</div></details></div></details>","DivAssign<NonZero<u64>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-DivAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#965\">Source</a></span><a href=\"#impl-DivAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#965\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/enc/impls.rs.html#88\">Source</a><a href=\"#impl-Encode-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/enc/trait.Encode.html\" title=\"trait bincode::enc::Encode\">Encode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/enc/impls.rs.html#89\">Source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bincode/2.0.1/bincode/enc/trait.Encode.html#tymethod.encode\" class=\"fn\">encode</a>&lt;E&gt;(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"https://docs.rs/bincode/2.0.1/bincode/error/enum.EncodeError.html\" title=\"enum bincode::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/enc/trait.Encoder.html\" title=\"trait bincode::enc::Encoder\">Encoder</a>,</div></h4></section></summary><div class='docblock'>Encode a given type.</div></details></div></details>","Encode","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Euclid-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#89\">Source</a><a href=\"#impl-Euclid-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html\" title=\"trait num_traits::ops::euclid::Euclid\">Euclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#89\">Source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Calculates Euclidean division, the matching method for <code>rem_euclid</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#89\">Source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Calculates the least nonnegative remainder of <code>self (mod v)</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/euclid.rs.html#67\">Source</a><a href=\"#method.div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#method.div_rem_euclid\" class=\"fn\">div_rem_euclid</a>(&amp;self, v: &amp;Self) -&gt; (Self, Self)</h4></section></summary><div class='docblock'>Returns both the quotient and remainder from Euclidean division. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html#method.div_rem_euclid\">Read more</a></div></details></div></details>","Euclid","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedBits-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBits-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBits.html\" title=\"trait fixed::traits_bits::FixedBits\">FixedBits</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#associatedconstant.MIN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBits.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 0u64</h4></section></summary><div class='docblock'>The smallest value that can be represented by this integer type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBits.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 18_446_744_073_709_551_615u64</h4></section></summary><div class='docblock'>The largest value that can be represented by this integer type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_SIGNED\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#associatedconstant.IS_SIGNED\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBits.html#associatedconstant.IS_SIGNED\" class=\"constant\">IS_SIGNED</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> = false</h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\" title=\"primitive bool\"><code>true</code></a> if this integer type is signed.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#associatedconstant.BITS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBits.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a> = 64u32</h4></section></summary><div class='docblock'>The size of this integer type in bits.</div></details></div></details>","FixedBits","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedEquiv-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#impl-FixedEquiv-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html\" title=\"trait fixed::traits::FixedEquiv\">FixedEquiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Equiv\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#associatedtype.Equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#associatedtype.Equiv\" class=\"associatedtype\">Equiv</a> = <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>The equivalent fixed-point type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.to_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#tymethod.to_fixed_equiv\" class=\"fn\">to_fixed_equiv</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>Converts an owned value to the equivalent fixed-point type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.as_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#tymethod.as_fixed_equiv\" class=\"fn\">as_fixed_equiv</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>Converts a reference into a reference to the equivalent fixed-point\ntype.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_fixed_equiv_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.as_fixed_equiv_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#tymethod.as_fixed_equiv_mut\" class=\"fn\">as_fixed_equiv_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;</h4></section></summary><div class='docblock'>Converts a mutable reference into a mutable reference to the equivalent\nfixed-point type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.from_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#tymethod.from_fixed_equiv\" class=\"fn\">from_fixed_equiv</a>(f: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts an owned equivalent fixed-point type to this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.ref_from_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#tymethod.ref_from_fixed_equiv\" class=\"fn\">ref_from_fixed_equiv</a>(f: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts a reference to the equivalent fixed-point type into a reference\nto this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_fixed_equiv\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.mut_from_fixed_equiv\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FixedEquiv.html#tymethod.mut_from_fixed_equiv\" class=\"fn\">mut_from_fixed_equiv</a>(f: &amp;mut <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts a mutable reference to the equivalent fixed-point type into a\nmutable reference to this type.</div></details></div></details>","FixedEquiv","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChar%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ascii/ascii_char.rs.html#560\">Source</a><a href=\"#impl-From%3CChar%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ascii/ascii_char.rs.html#560\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(chr: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AsciiChar>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU16%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#543\">Source</a><a href=\"#impl-From%3CFixedU16%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#543\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU16<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU32%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#548\">Source</a><a href=\"#impl-From%3CFixedU32%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#548\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU32<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU64%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#551\">Source</a><a href=\"#impl-From%3CFixedU64%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#551\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU64<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFixedU8%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#537\">Source</a><a href=\"#impl-From%3CFixedU8%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#537\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number with no fractional bits to an integer.</p>\n<p>This conversion never fails (infallible) and cannot\nlose any fractional bits (lossless).</p>\n</div></details></div></details>","From<FixedU8<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CU16%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-From%3CU16%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;U16&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: U16&lt;O&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<U16<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CU32%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-From%3CU32%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;U32&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: U32&lt;O&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<U32<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-From%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: U64&lt;O&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cbool%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0, const unstable\">1.28.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#89\">Source</a></span><a href=\"#impl-From%3Cbool%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#89\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a> losslessly.\nThe resulting value is <code>0</code> for <code>false</code> and <code>1</code> for <code>true</code> values.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u64::from(<span class=\"bool-val\">true</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(u64::from(<span class=\"bool-val\">false</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>","From<bool>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cchar%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0, const unstable\">1.51.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/char/convert.rs.html#58\">Source</a></span><a href=\"#impl-From%3Cchar%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\">char</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/char/convert.rs.html#69\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\">char</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\" title=\"primitive char\"><code>char</code></a> into a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>c = <span class=\"string\">'👤'</span>;\n<span class=\"kw\">let </span>u = u64::from(c);\n<span class=\"macro\">assert!</span>(<span class=\"number\">8 </span>== size_of_val(<span class=\"kw-2\">&amp;</span>u))</code></pre></div>\n</div></details></div></details>","From<char>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0, const unstable\">1.5.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#106\">Source</a></span><a href=\"#impl-From%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#106\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a> to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a> losslessly.</p>\n</div></details></div></details>","From<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0, const unstable\">1.5.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#108\">Source</a></span><a href=\"#impl-From%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#108\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a> to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a> losslessly.</p>\n</div></details></div></details>","From<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0, const unstable\">1.5.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#102\">Source</a></span><a href=\"#impl-From%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#102\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a> to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a> losslessly.</p>\n</div></details></div></details>","From<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#impl-FromBytes-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in big endian. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in little endian. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#method.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Create a number from its memory representation as a byte array in native endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.FromBytes.html#method.from_ne_bytes\">Read more</a></div></details></div></details>","FromBytes","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-u64\" class=\"impl\"><a href=\"#impl-FromBytes-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_bytes\" class=\"method trait-impl\"><a href=\"#method.ref_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_bytes</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Interprets the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix\" class=\"method trait-impl\"><a href=\"#method.ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_prefix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>source</code> as a <code>&amp;Self</code> without\ncopying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix\" class=\"method trait-impl\"><a href=\"#method.ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_suffix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;Self), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: Immutable + KnownLayout,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given bytes as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_bytes\" class=\"method trait-impl\"><a href=\"#method.mut_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_bytes</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: IntoBytes + KnownLayout,</div></h4></section></summary><div class='docblock'>Interprets the given <code>source</code> as a <code>&amp;mut Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix\" class=\"method trait-impl\"><a href=\"#method.mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_prefix</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: IntoBytes + KnownLayout,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>source</code> as a <code>&amp;mut Self</code> without\ncopying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix\" class=\"method trait-impl\"><a href=\"#method.mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_suffix</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;mut Self), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: IntoBytes + KnownLayout,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>source</code> as a <code>&amp;mut Self</code> without\ncopying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_bytes_with_elems\" class=\"method trait-impl\"><a href=\"#method.ref_from_bytes_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_bytes_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Interprets the given <code>source</code> as a <code>&amp;Self</code> with a DST length equal to\n<code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_prefix_with_elems\" class=\"method trait-impl\"><a href=\"#method.ref_from_prefix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_prefix_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>source</code> as a DST <code>&amp;Self</code> with length\nequal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ref_from_suffix_with_elems\" class=\"method trait-impl\"><a href=\"#method.ref_from_suffix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ref_from_suffix_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;Self), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>source</code> as a DST <code>&amp;Self</code> with length\nequal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_bytes_with_elems\" class=\"method trait-impl\"><a href=\"#method.mut_from_bytes_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_bytes_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: IntoBytes + KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Interprets the given <code>source</code> as a <code>&amp;mut Self</code> with a DST length equal\nto <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_prefix_with_elems\" class=\"method trait-impl\"><a href=\"#method.mut_from_prefix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_prefix_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: IntoBytes + KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class='docblock'>Interprets the prefix of the given <code>source</code> as a <code>&amp;mut Self</code> with DST\nlength equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mut_from_suffix_with_elems\" class=\"method trait-impl\"><a href=\"#method.mut_from_suffix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mut_from_suffix_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;mut Self), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;<div class=\"where\">where\n    Self: IntoBytes + KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class='docblock'>Interprets the suffix of the given <code>source</code> as a <code>&amp;mut Self</code> with DST\nlength equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_bytes\" class=\"method trait-impl\"><a href=\"#method.read_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_from_bytes</a>(source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the given <code>source</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_prefix\" class=\"method trait-impl\"><a href=\"#method.read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_from_prefix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the prefix of the given <code>source</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_suffix\" class=\"method trait-impl\"><a href=\"#method.read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_from_suffix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self), SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Reads a copy of <code>Self</code> from the suffix of the given <code>source</code>. <a>Read more</a></div></details></div></details>","FromBytes","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromFixed-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#impl-FromFixed-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html\" title=\"trait fixed::traits::FromFixed\">FromFixed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#tymethod.from_fixed\" class=\"fn\">from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>When debug assertions are enabled, panics if the value\ndoes not fit. When debug assertions are not enabled,\nthe wrapped value can be returned, but it is not\nconsidered a breaking change if in the future it\npanics; if wrapping is required use\n<a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#tymethod.wrapping_from_fixed\" title=\"associated function fixed::traits::FromFixed::wrapping_from_fixed\"><code>wrapping_from_fixed</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.checked_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#tymethod.checked_from_fixed\" class=\"fn\">checked_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer if it fits, otherwise returns <a href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.saturating_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#tymethod.saturating_from_fixed\" class=\"fn\">saturating_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer, saturating if it does not fit.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.wrapping_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#tymethod.wrapping_from_fixed\" class=\"fn\">wrapping_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer, wrapping if it does not fit.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.overflowing_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#tymethod.overflowing_from_fixed\" class=\"fn\">overflowing_from_fixed</a>&lt;F&gt;(src: F) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the value and a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> indicating whether\nan overflow has occurred. On overflow, the wrapped value is\nreturned.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_from_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.unwrapped_from_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.FromFixed.html#method.unwrapped_from_fixed\" class=\"fn\">unwrapped_from_fixed</a>&lt;F&gt;(src: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer, panicking if it does not fit.</p>\n<p>Any fractional bits are discarded, which rounds towards −∞.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the value\ndoes not fit, even when debug assertions are not enabled.</p>\n</div></details></div></details>","FromFixed","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#impl-FromPrimitive-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#570\">Source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details></div></details>","FromPrimitive","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a></span><a href=\"#impl-FromStr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an integer from a string slice with decimal digits.</p>\n<p>The characters are expected to be an optional\n<code>+</code>\nsign followed by only digits. Leading and trailing non-digit characters (including\nwhitespace) represent an error. Underscores (which are accepted in Rust literals)\nalso represent an error.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"macro\">assert_eq!</span>(u64::from_str(<span class=\"string\">\"+10\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));</code></pre></div>\n<p>Trailing space returns error:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(u64::from_str(<span class=\"string\">\"1 \"</span>).is_err());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeros-for-u64\" class=\"impl\"><a href=\"#impl-FromZeros-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromZeros for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeros. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a>Read more</a></div></details></div></details>","FromZeros","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#829-842\">Source</a></span><a href=\"#impl-Hash-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#829-842\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#829-842\">Source</a><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Integer-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itoa/1.0.15/src/itoa/lib.rs.html#221\">Source</a><a href=\"#impl-Integer-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/itoa/1.0.15/itoa/trait.Integer.html\" title=\"trait itoa::Integer\">Integer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_STR_LEN\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itoa/1.0.15/src/itoa/lib.rs.html#221\">Source</a><a href=\"#associatedconstant.MAX_STR_LEN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/itoa/1.0.15/itoa/trait.Integer.html#associatedconstant.MAX_STR_LEN\" class=\"constant\">MAX_STR_LEN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a> = 20usize</h4></section></summary><div class='docblock'>The maximum length of string that formatting an integer of this type can\nproduce on the current target platform.</div></details></div></details>","Integer","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Integer-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#impl-Integer-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html\" title=\"trait num_integer::Integer\">Integer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.div_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.div_floor\" class=\"fn\">div_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unsigned integer division. Returns the same result as <code>div</code> (<code>/</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mod_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.mod_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.mod_floor\" class=\"fn\">mod_floor</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unsigned integer modulo operation. Returns the same result as <code>rem</code> (<code>%</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.gcd\" class=\"fn\">gcd</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Calculates the Greatest Common Divisor (GCD) of the number and <code>other</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.lcm\" class=\"fn\">lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Calculates the Lowest Common Multiple (LCM) of the number and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gcd_lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.gcd_lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.gcd_lcm\" class=\"fn\">gcd_lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the Greatest Common Divisor (GCD) and\nLowest Common Multiple (LCM) of the number and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.is_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.is_multiple_of\" class=\"fn\">is_multiple_of</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is a multiple of <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_even\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.is_even\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.is_even\" class=\"fn\">is_even</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is divisible by <code>2</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_odd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.is_odd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.is_odd\" class=\"fn\">is_odd</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the number is not divisible by <code>2</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.div_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#tymethod.div_rem\" class=\"fn\">div_rem</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class=\"docblock\"><p>Simultaneous truncated integer division and modulus.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.div_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_ceil\" class=\"fn\">div_ceil</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Ceiled integer division. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_ceil\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extended_gcd_lcm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#1055\">Source</a><a href=\"#method.extended_gcd_lcm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.extended_gcd_lcm\" class=\"fn\">extended_gcd_lcm</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"struct\" href=\"https://docs.rs/num-integer/0.1/num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Greatest common divisor, least common multiple, and Bézout coefficients.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extended_gcd\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#159-161\">Source</a><a href=\"#method.extended_gcd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.extended_gcd\" class=\"fn\">extended_gcd</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-integer/0.1/num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Greatest common divisor and Bézout coefficients. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.extended_gcd\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.divides\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#206\">Source</a><a href=\"#method.divides\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.divides\" class=\"fn\">divides</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Please use is_multiple_of instead</span></div></span><div class='docblock'>Deprecated, use <code>is_multiple_of</code> instead.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_mod_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#279\">Source</a><a href=\"#method.div_mod_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_mod_floor\" class=\"fn\">div_mod_floor</a>(&amp;self, other: &amp;Self) -&gt; (Self, Self)</h4></section></summary><div class='docblock'>Simultaneous floored integer division and modulus.\nReturns <code>(quotient, remainder)</code>. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.div_mod_floor\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#303-305\">Source</a><a href=\"#method.next_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.next_multiple_of\" class=\"fn\">next_multiple_of</a>(&amp;self, other: &amp;Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Rounds up to nearest multiple of argument. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.next_multiple_of\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prev_multiple_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#336-338\">Source</a><a href=\"#method.prev_multiple_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.prev_multiple_of\" class=\"fn\">prev_multiple_of</a>(&amp;self, other: &amp;Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Rounds down to nearest multiple of argument. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.prev_multiple_of\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#353-355\">Source</a><a href=\"#method.dec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.dec\" class=\"fn\">dec</a>(&amp;mut self)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Decrements self by one. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.dec\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/lib.rs.html#370-372\">Source</a><a href=\"#method.inc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.inc\" class=\"fn\">inc</a>(&amp;mut self)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Increments self by one. <a href=\"https://docs.rs/num-integer/0.1/num_integer/trait.Integer.html#method.inc\">Read more</a></div></details></div></details>","Integer","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoBytes-for-u64\" class=\"impl\"><a href=\"#impl-IntoBytes-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a><div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_bytes\" class=\"method trait-impl\"><a href=\"#method.as_mut_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_mut_bytes</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: FromBytes,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SizeError&lt;&amp;Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;&gt;<div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_prefix</a>(\n    &amp;self,\n    dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SizeError&lt;&amp;Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;&gt;<div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_suffix</a>(\n    &amp;self,\n    dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SizeError&lt;&amp;Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;&gt;<div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>dst</code>. <a>Read more</a></div></details></div></details>","IntoBytes","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/value.rs.html#336\">Source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, E&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.IntoDeserializer.html\" title=\"trait serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/value.rs.html#336\">Source</a><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"https://docs.rs/serde/1.0.219/serde/de/value/struct.U64Deserializer.html\" title=\"struct serde::de::value::U64Deserializer\">U64Deserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/de/value.rs.html#336\">Source</a><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/serde/1.0.219/serde/de/value/struct.U64Deserializer.html\" title=\"struct serde::de::value::U64Deserializer\">U64Deserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KnownLayout-for-u64\" class=\"impl\"><a href=\"#impl-KnownLayout-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl KnownLayout for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PointerMetadata\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PointerMetadata\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PointerMetadata</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of metadata stored in a pointer to <code>Self</code>. <a>Read more</a></div></details></div></details>","KnownLayout","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI128%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#590\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI128%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#590\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI128<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI16%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#587\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI16%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#587\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI16<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI32%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#588\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI32%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#588\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI32<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI64%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#589\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI64%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#589\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI64<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedI8%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#586\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedI8%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#586\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedI8<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU128%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#595\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU128%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#595\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU128<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU16%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#592\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU16%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#592\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU16<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU32%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#593\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU32%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#593\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU32<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU64%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#594\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU64%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#594\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU64<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3CFixedU8%3CUTerm%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#591\">Source</a><a href=\"#impl-LosslessTryFrom%3CFixedU8%3CUTerm%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#591\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion may fail (fallible) but cannot lose\nany fractional bits (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<FixedU8<UTerm>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cbool%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#898\">Source</a><a href=\"#impl-LosslessTryFrom%3Cbool%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#898\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<bool>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#909\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#909\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#903\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#903\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#905\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#905\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#907\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#907\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#901\">Source</a><a href=\"#impl-LosslessTryFrom%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#901\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#911\">Source</a><a href=\"#impl-LosslessTryFrom%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#911\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#922\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#922\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#915\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#915\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#917\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#917\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#919\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#919\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#913\">Source</a><a href=\"#impl-LosslessTryFrom%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#913\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion actually never fails (infallible) and\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LosslessTryFrom%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#924\">Source</a><a href=\"#impl-LosslessTryFrom%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html\" title=\"trait fixed::traits::LosslessTryFrom\">LosslessTryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossless_try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#924\">Source</a><a href=\"#method.lossless_try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LosslessTryFrom.html#tymethod.lossless_try_from\" class=\"fn\">lossless_try_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion may fail (fallible) but does not lose\nany precision (lossless).</p>\n</div></details></div></details>","LosslessTryFrom<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU128%3CFracSrc%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#676\">Source</a><a href=\"#impl-LossyFrom%3CFixedU128%3CFracSrc%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#676\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU128<FracSrc>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU16%3CFracSrc%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#673\">Source</a><a href=\"#impl-LossyFrom%3CFixedU16%3CFracSrc%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#673\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU16<FracSrc>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU32%3CFracSrc%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#674\">Source</a><a href=\"#impl-LossyFrom%3CFixedU32%3CFracSrc%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#674\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU32<FracSrc>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU64%3CFracSrc%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#675\">Source</a><a href=\"#impl-LossyFrom%3CFixedU64%3CFracSrc%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#675\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU64<FracSrc>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3CFixedU8%3CFracSrc%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#672\">Source</a><a href=\"#impl-LossyFrom%3CFixedU8%3CFracSrc%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FracSrc&gt; <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    FracSrc: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,\n    <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;,\n    &lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;FracSrc&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, Output = <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#672\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;FracSrc&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a fixed-point number to an integer.</p>\n<p>This conversion never fails (infallible) but may lose\nprecision (lossy). Any fractional bits in the source\nare discarded, which rounds towards −∞.</p>\n</div></details></div></details>","LossyFrom<FixedU8<FracSrc>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cbool%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#898\">Source</a><a href=\"#impl-LossyFrom%3Cbool%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#898\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<bool>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#915\">Source</a><a href=\"#impl-LossyFrom%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#915\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#917\">Source</a><a href=\"#impl-LossyFrom%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#917\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#919\">Source</a><a href=\"#impl-LossyFrom%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#919\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LossyFrom%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#913\">Source</a><a href=\"#impl-LossyFrom%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html\" title=\"trait fixed::traits::LossyFrom\">LossyFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lossy_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/convert.rs.html#913\">Source</a><a href=\"#method.lossy_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.LossyFrom.html#tymethod.lossy_from\" class=\"fn\">lossy_from</a>(src: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts a number.</p>\n<p>This conversion never fails (infallible) and actually\ndoes not lose any precision (lossless).</p>\n</div></details></div></details>","LossyFrom<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerExp-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#634-637\">Source</a></span><a href=\"#impl-LowerExp-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.LowerExp.html\" title=\"trait core::fmt::LowerExp\">LowerExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#634-637\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.LowerExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.LowerExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerExp","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a></span><a href=\"#impl-LowerHex-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26BigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/multiplication.rs.html#71\">Source</a><a href=\"#impl-Mul%3C%26BigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/multiplication.rs.html#71\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/multiplication.rs.html#71\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&BigInt>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/multiplication.rs.html#516\">Source</a><a href=\"#impl-Mul%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/multiplication.rs.html#516\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/multiplication.rs.html#516\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#impl-Mul%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26FixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/arith.rs.html#568\">Source</a><a href=\"#impl-Mul%3C%26FixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/arith.rs.html#568\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/arith.rs.html#568\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&FixedU64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#358\">Source</a></span><a href=\"#impl-Mul%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#358\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#358\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CBigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/multiplication.rs.html#71\">Source</a><a href=\"#impl-Mul%3CBigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/multiplication.rs.html#71\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/multiplication.rs.html#71\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<BigInt>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/multiplication.rs.html#516\">Source</a><a href=\"#impl-Mul%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/multiplication.rs.html#516\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/multiplication.rs.html#516\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#impl-Mul%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/arith.rs.html#568\">Source</a><a href=\"#impl-Mul%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/arith.rs.html#568\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/arith.rs.html#568\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<FixedU64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Mul%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#358\">Source</a></span><a href=\"#impl-Mul-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#358\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#358\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAdd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#71\">Source</a><a href=\"#impl-MulAdd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html\" title=\"trait num_traits::ops::mul_add::MulAdd\">MulAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#71\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the fused multiply-add.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#71\">Source</a><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html\" title=\"trait num_traits::ops::mul_add::MulAdd\">MulAdd</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAdd.html#associatedtype.Output\" title=\"type num_traits::ops::mul_add::MulAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the fused multiply-add operation <code>(self * a) + b</code></div></details></div></details>","MulAdd","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAddAssign-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#101\">Source</a><a href=\"#impl-MulAddAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAddAssign.html\" title=\"trait num_traits::ops::mul_add::MulAddAssign\">MulAddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/mul_add.rs.html#101\">Source</a><a href=\"#method.mul_add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/mul_add/trait.MulAddAssign.html#tymethod.mul_add_assign\" class=\"fn\">mul_add_assign</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the fused multiply-add assignment operation <code>*self = (*self * a) + b</code></div></details></div></details>","MulAddAssign","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#impl-MulAssign%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#908\">Source</a></span><a href=\"#impl-MulAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#908\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#impl-MulAssign%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#53\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-MulAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#908\">Source</a></span><a href=\"#impl-MulAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#908\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#68\">Source</a></span><a href=\"#impl-Not-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#68\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#68\">Source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/lib.rs.html#174\">Source</a><a href=\"#impl-Num-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/lib.rs.html#174\">Source</a><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/lib.rs.html#174\">Source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Convert from a string and radix (typically <code>2..=36</code>). <a href=\"https://docs.rs/num-traits/0.2/num_traits/trait.Num.html#tymethod.from_str_radix\">Read more</a></div></details></div></details>","Num","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumBufferTrait-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num_buffer.rs.html#26-33\">Source</a><a href=\"#impl-NumBufferTrait-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/num_buffer/trait.NumBufferTrait.html\" title=\"trait core::fmt::num_buffer::NumBufferTrait\">NumBufferTrait</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.BUF_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num_buffer.rs.html#26-33\">Source</a><a href=\"#associatedconstant.BUF_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/num_buffer/trait.NumBufferTrait.html#associatedconstant.BUF_SIZE\" class=\"constant\">BUF_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a> = 20usize</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_format_into</code>)</span></div></span><div class='docblock'>Maximum number of digits in decimal base of the implemented integer.</div></details></div></details>","NumBufferTrait","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumCast-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#686\">Source</a><a href=\"#impl-NumCast-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#686\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html#tymethod.from\" class=\"fn\">from</a>&lt;N&gt;(n: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a>,</div></h4></section></summary><div class='docblock'>Creates a number from another value that can be converted into\na primitive via the <code>ToPrimitive</code> trait. If the source value cannot be\nrepresented by the target type, then <code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html#tymethod.from\">Read more</a></div></details></div></details>","NumCast","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a></span><a href=\"#impl-Octal-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Octal.html#tymethod.fmt\">Read more</a></div></details></div></details>","Octal","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#166\">Source</a><a href=\"#impl-One-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#166\">Source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#166\">Source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#118\">Source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","One","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a></span><a href=\"#impl-Ord-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1013-1015\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1052-1054\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1078-1080\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingAdd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#26\">Source</a><a href=\"#impl-OverflowingAdd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingAdd.html\" title=\"trait num_traits::ops::overflowing::OverflowingAdd\">OverflowingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#26\">Source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingAdd.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingAdd","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedI8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-OverflowingCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<FixedU8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-OverflowingCast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-OverflowingCast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-OverflowingCast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-OverflowingCast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-OverflowingCast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-OverflowingCast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-OverflowingCast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-OverflowingCast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-OverflowingCast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-OverflowingCast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-OverflowingCast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingCast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-OverflowingCast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html\" title=\"trait az::OverflowingCast\">OverflowingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.overflowing_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.OverflowingCast.html#tymethod.overflowing_cast\" class=\"fn\">overflowing_cast</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","OverflowingCast<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingMul-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#68\">Source</a><a href=\"#impl-OverflowingMul-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingMul.html\" title=\"trait num_traits::ops::overflowing::OverflowingMul\">OverflowingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#68\">Source</a><a href=\"#method.overflowing_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingMul.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the product along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingMul","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingSub-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#47\">Source</a><a href=\"#impl-OverflowingSub-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingSub.html\" title=\"trait num_traits::ops::overflowing::OverflowingSub\">OverflowingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/overflowing.rs.html#47\">Source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/overflowing/trait.OverflowingSub.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingSub","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedFe32-for-u64\" class=\"impl\"><a href=\"#impl-PackedFe32-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl PackedFe32 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ONE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ONE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 1u64</h4></section></summary><div class='docblock'>The one constant, for which stdlib provides no existing trait.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack\" class=\"method trait-impl\"><a href=\"#method.unpack\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unpack</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Extracts the coefficient of the x^n from the packed polynomial.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_by_x_then_add\" class=\"method trait-impl\"><a href=\"#method.mul_by_x_then_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_by_x_then_add</a>(&amp;mut self, degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, add: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Multiply the polynomial by x, drop its highest coefficient (and return it), and\nadd a new field element to the now-0 constant coefficient. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.WIDTH\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.WIDTH\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">WIDTH</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The number of fe32s that can fit into the type; computed as floor(bitwidth / 5).</div></details></div></details>","PackedFe32","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#56\">Source</a><a href=\"#impl-PartialEq%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#56\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<&BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26Epoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#121\">Source</a><a href=\"#impl-PartialEq%3C%26Epoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#121\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<&Epoch>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26SlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#48\">Source</a><a href=\"#impl-PartialEq%3C%26SlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#48\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<&SlotNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#56\">Source</a><a href=\"#impl-PartialEq%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#56\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CEpoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#121\">Source</a><a href=\"#impl-PartialEq%3CEpoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#121\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Epoch>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#impl-PartialEq%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#impl-PartialEq%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#impl-PartialEq%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#impl-PartialEq%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#impl-PartialEq%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedI8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#impl-PartialEq%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#impl-PartialEq%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#impl-PartialEq%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#impl-PartialEq%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialEq%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<FixedU8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CSlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#48\">Source</a><a href=\"#impl-PartialEq%3CSlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#48\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<SlotNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CValue%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.143/src/serde_json/value/partial_eq.rs.html#97-103\">Source</a><a href=\"#impl-PartialEq%3CValue%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.143/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.143/src/serde_json/value/partial_eq.rs.html#97-103\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.143/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Value>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143800\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1836-1838\">Source</a></span><a href=\"#impl-PartialEq-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1836-1838\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1836-1838\">Source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#impl-PartialOrd%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#382\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#impl-PartialOrd%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#379\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#impl-PartialOrd%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#380\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#impl-PartialOrd%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#381\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#impl-PartialOrd%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#378\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedI8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#impl-PartialOrd%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#387\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#impl-PartialOrd%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#384\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#impl-PartialOrd%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#385\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#impl-PartialOrd%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#386\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#impl-PartialOrd%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cmp.rs.html#383\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<FixedU8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a></span><a href=\"#impl-PartialOrd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1990\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#94\">Source</a><a href=\"#impl-Pow%3C%26u16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#94\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#94\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#95\">Source</a><a href=\"#impl-Pow%3C%26u32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#95\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#95\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#93\">Source</a><a href=\"#impl-Pow%3C%26u8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#93\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#93\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26usize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#96\">Source</a><a href=\"#impl-Pow%3C%26usize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#96\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#96\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CPInt%3CU%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#impl-Pow%3CPInt%3CU%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.NonZero.html\" title=\"trait typenum::marker_traits::NonZero\">NonZero</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<PInt<U>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CUInt%3CU,+B%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#impl-Pow%3CUInt%3CU,+B%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, B&gt; <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>,\n    B: <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/marker_traits/trait.Bit.html\" title=\"trait typenum::marker_traits::Bit\">Bit</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<UInt<U, B>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CUTerm%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#impl-Pow%3CUTerm%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<UTerm>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3CZ0%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#impl-Pow%3CZ0%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result of the exponentiation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/typenum/1.18.0/src/typenum/type_operators.rs.html#233\">Source</a><a href=\"#method.powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\" class=\"fn\">powi</a>(self, _: <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html\" title=\"trait typenum::type_operators::Pow\">Pow</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#associatedtype.Output\" title=\"type typenum::type_operators::Pow::Output\">Output</a></h4></section></summary><div class='docblock'>This function isn’t used in this crate, but may be useful for others.\nIt is implemented for primitives. <a href=\"https://docs.rs/typenum/1.18.0/typenum/type_operators/trait.Pow.html#tymethod.powi\">Read more</a></div></details></div></details>","Pow<Z0>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#94\">Source</a><a href=\"#impl-Pow%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#94\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#94\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#95\">Source</a><a href=\"#impl-Pow%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#95\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#95\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#93\">Source</a><a href=\"#impl-Pow%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#93\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#93\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#96\">Source</a><a href=\"#impl-Pow%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#96\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/pow.rs.html#96\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PrimInt-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#impl-PrimInt-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.count_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of ones in the binary representation of <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.count_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of zeros in the binary representation of <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.count_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.leading_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading ones in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.leading_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.leading_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading zeros in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.leading_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.trailing_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing ones in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.trailing_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.trailing_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing zeros in the binary representation\nof <code>self</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.trailing_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.rotate_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the end of the resulting integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.rotate_right\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the beginning of the resulting integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.rotate_right\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.signed_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shl\" class=\"fn\">signed_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.signed_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shr\" class=\"fn\">signed_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, copying\nthe “sign bit” in the most significant bits even for unsigned types. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.signed_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.unsigned_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shl\" class=\"fn\">unsigned_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.unsigned_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shr\" class=\"fn\">unsigned_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, filling\nzeros in the most significant bits. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.unsigned_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.swap_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Reverses the byte order of the integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.swap_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.reverse_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Reverses the order of bits in the integer. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#method.reverse_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.from_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert an integer from big endian to the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.from_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert an integer from little endian to the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.from_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.to_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to big endian from the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to little endian from the target’s endianness. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.to_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/int.rs.html#499\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Raises self to the power of <code>exp</code>, using exponentiation by squaring. <a href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html#tymethod.pow\">Read more</a></div></details></div></details>","PrimInt","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a></span><a href=\"#impl-Product%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by multiplying\nthe items.</div></details></div></details>","Product<&'a u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a></span><a href=\"#impl-Product-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by multiplying\nthe items.</div></details></div></details>","Product","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RangePattern-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/pat.rs.html#59-62\">Source</a><a href=\"#impl-RangePattern-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/pat/trait.RangePattern.html\" title=\"trait core::pat::RangePattern\">RangePattern</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/pat.rs.html#59-62\">Source</a><a href=\"#associatedconstant.MIN\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://doc.rust-lang.org/1.90.0/core/pat/trait.RangePattern.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 0u64</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern_type_range_trait</code>)</span></div></span><div class='docblock'>Trait version of the inherent <code>MIN</code> assoc const.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/pat.rs.html#59-62\">Source</a><a href=\"#associatedconstant.MAX\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://doc.rust-lang.org/1.90.0/core/pat/trait.RangePattern.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 18_446_744_073_709_551_615u64</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern_type_range_trait</code>)</span></div></span><div class='docblock'>Trait version of the inherent <code>MIN</code> assoc const.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/pat.rs.html#59-62\">Source</a><a href=\"#method.sub_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/pat/trait.RangePattern.html#tymethod.sub_one\" class=\"fn\">sub_one</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>pattern_type_range_trait</code>)</span></div></span><div class='docblock'>A compile-time helper to subtract 1 for exclusive ranges.</div></details></div></details>","RangePattern","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26BigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#265\">Source</a><a href=\"#impl-Rem%3C%26BigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#265\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#265\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&BigInt>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#544\">Source</a><a href=\"#impl-Rem%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#544\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#544\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#impl-Rem%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#606-609\">Source</a></span><a href=\"#impl-Rem%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#606-609\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#606-609\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CBigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#315\">Source</a><a href=\"#impl-Rem%3CBigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#316\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/division.rs.html#319\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<BigInt>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#618\">Source</a><a href=\"#impl-Rem%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#619\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#622\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#impl-Rem%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" title=\"type core::ops::arith::Rem::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a></span><a href=\"#impl-Rem%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>This operation satisfies <code>n % d == n - (n / d) * d</code>, and cannot panic.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details></div></details>","Rem<NonZero<u64>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Rem%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#606-609\">Source</a></span><a href=\"#impl-Rem-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3><div class=\"docblock\"><p>This operation satisfies <code>n % d == n - (n / d) * d</code>. The\nresult has the same sign as the left operand.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>This operation will panic if <code>other == 0</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#606-609\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#606-609\">Source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#591\">Source</a><a href=\"#impl-RemAssign%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#591\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#impl-RemAssign%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#1026\">Source</a></span><a href=\"#impl-RemAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#1026\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#591\">Source</a><a href=\"#impl-RemAssign%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/division.rs.html#591\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#impl-RemAssign%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#55\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.79.0\">1.79.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a></span><a href=\"#impl-RemAssign%3CNonZero%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#2178-2188\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>This operation satisfies <code>n % d == n - (n / d) * d</code>, and cannot panic.</p>\n</div></details></div></details>","RemAssign<NonZero<u64>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-RemAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#1026\">Source</a></span><a href=\"#impl-RemAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#1026\">Source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Roots-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#385\">Source</a><a href=\"#impl-Roots-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html\" title=\"trait num_integer::roots::Roots\">Roots</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_root\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#385\">Source</a><a href=\"#method.nth_root\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#tymethod.nth_root\" class=\"fn\">nth_root</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the truncated principal <code>n</code>th root of an integer\n– <code>if x &gt;= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }</code> <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#tymethod.nth_root\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#385\">Source</a><a href=\"#method.sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.sqrt\" class=\"fn\">sqrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the truncated principal square root of an integer – <code>⌊√x⌋</code> <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.sqrt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cbrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-integer/0.1/src/num_integer/roots.rs.html#385\">Source</a><a href=\"#method.cbrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.cbrt\" class=\"fn\">cbrt</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the truncated principal cube root of an integer –\n<code>if x &gt;= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }</code> <a href=\"https://docs.rs/num-integer/0.1/num_integer/roots/trait.Roots.html#method.cbrt\">Read more</a></div></details></div></details>","Roots","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Saturating-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#32\">Source</a><a href=\"#impl-Saturating-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html\" title=\"trait num_traits::ops::saturating::Saturating\">Saturating</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#32\">Source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#32\">Source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.Saturating.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.</div></details></div></details>","Saturating","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#55\">Source</a><a href=\"#impl-SaturatingAdd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingAdd.html\" title=\"trait num_traits::ops::saturating::SaturatingAdd\">SaturatingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#55\">Source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Saturating addition. Computes <code>self + other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingAdd","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedI8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-SaturatingCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<FixedU8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-SaturatingCast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-SaturatingCast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-SaturatingCast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-SaturatingCast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-SaturatingCast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-SaturatingCast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-SaturatingCast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-SaturatingCast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-SaturatingCast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-SaturatingCast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-SaturatingCast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingCast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-SaturatingCast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html\" title=\"trait az::SaturatingCast\">SaturatingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.saturating_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.SaturatingCast.html#tymethod.saturating_cast\" class=\"fn\">saturating_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","SaturatingCast<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingMul-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#97\">Source</a><a href=\"#impl-SaturatingMul-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingMul.html\" title=\"trait num_traits::ops::saturating::SaturatingMul\">SaturatingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#97\">Source</a><a href=\"#method.saturating_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingMul.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Saturating multiplication. Computes <code>self * other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingMul","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#76\">Source</a><a href=\"#impl-SaturatingSub-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingSub.html\" title=\"trait num_traits::ops::saturating::SaturatingSub\">SaturatingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/saturating.rs.html#76\">Source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/saturating/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Saturating subtraction. Computes <code>self - other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingSub","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/ser/impls.rs.html#32\">Source</a><a href=\"#impl-Serialize-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.219/src/serde/ser/impls.rs.html#32\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26i128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26i16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26i32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26i64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26i8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26i8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26isize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26isize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26u128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26u16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26u32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26u8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26u8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3C%26usize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3C%26usize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" title=\"type core::ops::bit::Shl::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<&usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Shl%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Ci8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cisize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cu8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl%3Cusize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shl-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a></span><a href=\"#impl-Shl-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html\" title=\"trait core::ops::bit::Shl\">Shl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&lt;&lt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#496\">Source</a><a href=\"#method.shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\" class=\"fn\">shl</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shl.html#tymethod.shl\">Read more</a></div></details></div></details>","Shl","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26i128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26i16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26i32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26i64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26i8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26i8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26isize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26isize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26u128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26u16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26u32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26u8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26u8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3C%26usize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3C%26usize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<&usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-ShlAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Ci8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cisize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cu8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign%3Cusize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShlAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a></span><a href=\"#impl-ShlAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html\" title=\"trait core::ops::bit::ShlAssign\">ShlAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shl_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#950\">Source</a><a href=\"#method.shl_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\" class=\"fn\">shl_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&lt;&lt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShlAssign.html#tymethod.shl_assign\">Read more</a></div></details></div></details>","ShlAssign","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26i128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26i16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26i32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26i64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26i8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26i8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26isize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26isize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26u128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26u16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26u32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26u8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26u8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3C%26usize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3C%26usize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" title=\"type core::ops::bit::Shr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<&usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Shr%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Ci8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cisize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cu8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr%3Cusize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shr-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a></span><a href=\"#impl-Shr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&gt;&gt;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#614\">Source</a><a href=\"#method.shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\" class=\"fn\">shr</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Shr.html#tymethod.shr\">Read more</a></div></details></div></details>","Shr","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26i128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26i16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26i32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26i64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26i8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26i8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26isize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26isize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26u128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26u16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26u32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26u8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26u8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3C%26usize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3C%26usize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<&usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-ShrAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Ci8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cisize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cu8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign%3Cusize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ShrAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a></span><a href=\"#impl-ShrAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html\" title=\"trait core::ops::bit::ShrAssign\">ShrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shr_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#1032\">Source</a><a href=\"#method.shr_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\" class=\"fn\">shr_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>&gt;&gt;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.ShrAssign.html#tymethod.shr_assign\">Read more</a></div></details></div></details>","ShrAssign","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdElement-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/vector.rs.html#1135\">Source</a><a href=\"#impl-SimdElement-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/vector/trait.SimdElement.html\" title=\"trait core::core_simd::vector::SimdElement\">SimdElement</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Mask\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/vector.rs.html#1136\">Source</a><a href=\"#associatedtype.Mask\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/vector/trait.SimdElement.html#associatedtype.Mask\" class=\"associatedtype\">Mask</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>portable_simd</code>)</span></div></span><div class='docblock'>The mask element type corresponding to this element type.</div></details></div></details>","SimdElement","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Step-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#impl-Step-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html\" title=\"trait core::iter::range::Step\">Step</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.forward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.forward\" class=\"fn\">forward</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.forward\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.backward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.backward\" class=\"fn\">backward</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.backward\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.forward_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.forward_unchecked\" class=\"fn\">forward_unchecked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.forward_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.backward_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.backward_unchecked\" class=\"fn\">backward_unchecked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#method.backward_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.steps_between\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.steps_between\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#tymethod.steps_between\" class=\"fn\">steps_between</a>(start: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, end: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the bounds on the number of <em>successor</em> steps required to get from <code>start</code> to <code>end</code>\nlike <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.size_hint\" title=\"method core::iter::traits::iterator::Iterator::size_hint\"><code>Iterator::size_hint()</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#tymethod.steps_between\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.forward_checked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.forward_checked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#tymethod.forward_checked\" class=\"fn\">forward_checked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>successor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#tymethod.forward_checked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.backward_checked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#427-430\">Source</a><a href=\"#method.backward_checked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#tymethod.backward_checked\" class=\"fn\">backward_checked</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>step_trait</code>)</span></div></span><div class='docblock'>Returns the value that would be obtained by taking the <em>predecessor</em>\nof <code>self</code> <code>count</code> times. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/range/trait.Step.html#tymethod.backward_checked\">Read more</a></div></details></div></details>","Step","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26BigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/subtraction.rs.html#87\">Source</a><a href=\"#impl-Sub%3C%26BigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/subtraction.rs.html#87\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/subtraction.rs.html#87\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&BigInt>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/subtraction.rs.html#147\">Source</a><a href=\"#impl-Sub%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/subtraction.rs.html#147\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/subtraction.rs.html#147\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#impl-Sub%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26Epoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#impl-Sub%3C%26Epoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&Epoch>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26SlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#impl-Sub%3C%26SlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&SlotNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#225\">Source</a></span><a href=\"#impl-Sub%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#225\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#225\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CBigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/subtraction.rs.html#123\">Source</a><a href=\"#impl-Sub%3CBigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/subtraction.rs.html#124\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/subtraction.rs.html#127\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<BigInt>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/subtraction.rs.html#220\">Source</a><a href=\"#impl-Sub%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/subtraction.rs.html#221\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/subtraction.rs.html#236\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#impl-Sub%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CEpoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#impl-Sub%3CEpoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Epoch>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CSlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#impl-Sub%3CSlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<SlotNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-Sub%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = U64&lt;O&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: U64&lt;O&gt;) -&gt; U64&lt;O&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143802\" title=\"Tracking issue for const_ops\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#225\">Source</a></span><a href=\"#impl-Sub-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#225\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#225\">Source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26BlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#impl-SubAssign%3C%26BlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26Epoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#impl-SubAssign%3C%26Epoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&Epoch>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26SlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#impl-SubAssign%3C%26SlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: &amp;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&SlotNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#850\">Source</a></span><a href=\"#impl-SubAssign%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#850\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CBlockNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#impl-SubAssign%3CBlockNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/block_number.rs.html#52\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.BlockNumber.html\" title=\"struct mithril_common::entities::BlockNumber\">BlockNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<BlockNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CEpoch%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#impl-SubAssign%3CEpoch%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/epoch.rs.html#120\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.Epoch.html\" title=\"struct mithril_common::entities::Epoch\">Epoch</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<Epoch>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CSlotNumber%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#impl-SubAssign%3CSlotNumber%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/entities/slot_number.rs.html#47\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"mithril_common/entities/struct.SlotNumber.html\" title=\"struct mithril_common::entities::SlotNumber\">SlotNumber</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<SlotNumber>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CU64%3CO%3E%3E-for-u64\" class=\"impl\"><a href=\"#impl-SubAssign%3CU64%3CO%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;U64&lt;O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    O: ByteOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: U64&lt;O&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<U64<O>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#850\">Source</a></span><a href=\"#impl-SubAssign-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/arith.rs.html#850\">Source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26u64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a></span><a href=\"#impl-Sum%3C%26u64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum<&'a u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.12.0\">1.12.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a></span><a href=\"#impl-Sum-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/accum.rs.html#149\">Source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBigInt-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#357\">Source</a><a href=\"#impl-ToBigInt-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/trait.ToBigInt.html\" title=\"trait num_bigint::bigint::ToBigInt\">ToBigInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bigint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#357\">Source</a><a href=\"#method.to_bigint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/trait.ToBigInt.html#tymethod.to_bigint\" class=\"fn\">to_bigint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <a href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\"><code>BigInt</code></a>.</div></details></div></details>","ToBigInt","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBigUint-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#584\">Source</a><a href=\"#impl-ToBigUint-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/trait.ToBigUint.html\" title=\"trait num_bigint::biguint::ToBigUint\">ToBigUint</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_biguint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#584\">Source</a><a href=\"#method.to_biguint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/trait.ToBigUint.html#tymethod.to_biguint\" class=\"fn\">to_biguint</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <a href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\"><code>BigUint</code></a>.</div></details></div></details>","ToBigUint","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBytes-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#impl-ToBytes-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in big-endian byte order. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in little-endian byte order. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/bytes.rs.html#238\">Source</a><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#method.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in native byte order. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/bytes/trait.ToBytes.html#method.to_ne_bytes\">Read more</a></div></details></div></details>","ToBytes","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToFixed-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#impl-ToFixed-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html\" title=\"trait fixed::traits::ToFixed\">ToFixed</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#tymethod.to_fixed\" class=\"fn\">to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>When debug assertions are enabled, panics if the value\ndoes not fit. When debug assertions are not enabled,\nthe wrapped value can be returned, but it is not\nconsidered a breaking change if in the future it\npanics; if wrapping is required use\n<a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#tymethod.wrapping_to_fixed\" title=\"method fixed::traits::ToFixed::wrapping_to_fixed\"><code>wrapping_to_fixed</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.checked_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#tymethod.checked_to_fixed\" class=\"fn\">checked_to_fixed</a>&lt;F&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number if it fits, otherwise returns <a href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.saturating_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#tymethod.saturating_to_fixed\" class=\"fn\">saturating_to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number, saturating if it does not fit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.wrapping_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#tymethod.wrapping_to_fixed\" class=\"fn\">wrapping_to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number, wrapping if it does not fit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.overflowing_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#tymethod.overflowing_to_fixed\" class=\"fn\">overflowing_to_fixed</a>&lt;F&gt;(self) -&gt; (F, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number.</p>\n<p>Returns a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\" title=\"primitive tuple\">tuple</a> of the fixed-point number and a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a>\nindicating whether an overflow has occurred. On overflow, the\nwrapped value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_to_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/prim_traits.rs.html#272\">Source</a><a href=\"#method.unwrapped_to_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.ToFixed.html#method.unwrapped_to_fixed\" class=\"fn\">unwrapped_to_fixed</a>&lt;F&gt;(self) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits/trait.Fixed.html\" title=\"trait fixed::traits::Fixed\">Fixed</a>,</div></h4></section></summary><div class=\"docblock\"><p>Converts an integer to a fixed-point number, panicking if it does not fit.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the value does not fit, even when debug\nassertions are not enabled.</p>\n</div></details></div></details>","ToFixed","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#impl-ToPrimitive-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#266\">Source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details></div></details>","ToPrimitive","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToUsize-for-u64\" class=\"impl\"><a href=\"#impl-ToUsize-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToUsize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>converts self to usize</div></details></div></details>","ToUsize","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26BigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#132\">Source</a><a href=\"#impl-TryFrom%3C%26BigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#132\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#132\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&BigInt>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26BigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#419\">Source</a><a href=\"#impl-TryFrom%3C%26BigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#419\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#419\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: &amp;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CBigInt%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#132\">Source</a><a href=\"#impl-TryFrom%3CBigInt%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#132\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/bigint/convert.rs.html#132\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<BigInt>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CBigUint%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#419\">Source</a><a href=\"#impl-TryFrom%3CBigUint%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#419\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-bigint/0.4/src/num_bigint/biguint/convert.rs.html#419\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/struct.TryFromBigIntError.html\" title=\"struct num_bigint::TryFromBigIntError\">TryFromBigIntError</a>&lt;<a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/biguint/struct.BigUint.html\" title=\"struct num_bigint::biguint::BigUint\">BigUint</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<BigUint>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CInteger%3E-for-u64\" class=\"impl\"><a href=\"#impl-TryFrom%3CInteger%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Integer&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: Integer) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Integer&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Integer>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#374\">Source</a></span><a href=\"#impl-TryFrom%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#374\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#374\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci16%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#369\">Source</a></span><a href=\"#impl-TryFrom%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#369\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#369\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci32%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#371\">Source</a></span><a href=\"#impl-TryFrom%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#371\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#371\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci64%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#373\">Source</a></span><a href=\"#impl-TryFrom%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#373\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#373\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci8%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#367\">Source</a></span><a href=\"#impl-TryFrom%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#367\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#367\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cisize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#438\">Source</a></span><a href=\"#impl-TryFrom%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#438\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#438\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu128%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#351\">Source</a></span><a href=\"#impl-TryFrom%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#351\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(u: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#351\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cusize%3E-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#433\">Source</a></span><a href=\"#impl-TryFrom%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#433\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to create the target number type from a source\nnumber type. This returns an error if the source value\nis outside of the range of the target type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#433\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.TryFromIntError.html\" title=\"struct core::num::error::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFromBytes-for-u64\" class=\"impl\"><a href=\"#impl-TryFromBytes-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TryFromBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_bytes\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_bytes</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_prefix\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_prefix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_suffix\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_suffix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;Self), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_bytes\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_bytes</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;mut Self</code> without\ncopying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_prefix\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_prefix</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;mut Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_suffix\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_suffix</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;mut Self), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;mut Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_bytes_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_bytes_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_bytes_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;Self</code> with a DST length\nequal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_prefix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_prefix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_prefix_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;Self</code> with\na DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_suffix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_suffix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_suffix_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;Self), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;Self</code> with\na DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_bytes_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_bytes_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_bytes_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;mut Self</code> with a DST\nlength equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_prefix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_prefix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_prefix_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;mut Self</code>\nwith a DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_suffix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_suffix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_suffix_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;mut Self), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;mut Self</code>\nwith a DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_from_bytes\" class=\"method trait-impl\"><a href=\"#method.try_read_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read_from_bytes</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, ConvertError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempts to read the given <code>source</code> as a <code>Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_from_prefix\" class=\"method trait-impl\"><a href=\"#method.try_read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read_from_prefix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempts to read a <code>Self</code> from the prefix of the given <code>source</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_from_suffix\" class=\"method trait-impl\"><a href=\"#method.try_read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read_from_suffix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self), ConvertError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempts to read a <code>Self</code> from the suffix of the given <code>source</code>. <a>Read more</a></div></details></div></details>","TryFromBytes","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedI8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-UnwrappedCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<FixedU8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci128%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci128%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i128>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci16%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci16%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i16>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci32%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci32%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i32>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci64%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i64>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Ci8%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Ci8%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<i8>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cisize%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cisize%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<isize>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu128%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu128%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u128>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu16%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu16%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u16>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu32%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu32%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u32>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu64%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu64%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u64>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cu8%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cu8%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<u8>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3CWrapping%3Cusize%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3CWrapping%3Cusize%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/wrapping/struct.Wrapping.html\" title=\"struct core::num::wrapping::Wrapping\">Wrapping</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<Wrapping<usize>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cf32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">Source</a><a href=\"#impl-UnwrappedCast%3Cf32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#44\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<f32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cf64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">Source</a><a href=\"#impl-UnwrappedCast%3Cf64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/float.rs.html#45\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<f64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-UnwrappedCast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnwrappedCast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-UnwrappedCast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html\" title=\"trait az::UnwrappedCast\">UnwrappedCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrapped_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.unwrapped_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.UnwrappedCast.html#tymethod.unwrapped_cast\" class=\"fn\">unwrapped_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","UnwrappedCast<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperExp-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.42.0\">1.42.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#634-637\">Source</a></span><a href=\"#impl-UpperExp-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.UpperExp.html\" title=\"trait core::fmt::UpperExp\">UpperExp</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#634-637\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.UpperExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.UpperExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperExp","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a></span><a href=\"#impl-UpperHex-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#162\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-u64\" class=\"impl\"><a href=\"#impl-Value-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Value for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize</a>(\n    &amp;self,\n    _record: &amp;Record&lt;'_&gt;,\n    key: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>,\n    serializer: &amp;mut dyn Serializer,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Serialize self into <code>Serializer</code> <a>Read more</a></div></details></div></details>","Value","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingAdd-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#33\">Source</a><a href=\"#impl-WrappingAdd-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingAdd.html\" title=\"trait num_traits::ops::wrapping::WrappingAdd\">WrappingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#33\">Source</a><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingAdd.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Wrapping (modular) addition. Computes <code>self + other</code>, wrapping around at the boundary of\nthe type.</div></details></div></details>","WrappingAdd","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedI8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedI8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU128%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU128.html\" title=\"trait fixed::types::extra::LeEqU128\">LeEqU128</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU128<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU16%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU16.html\" title=\"trait fixed::types::extra::LeEqU16\">LeEqU16</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU16<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU32%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU32.html\" title=\"trait fixed::types::extra::LeEqU32\">LeEqU32</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU32<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU64%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU64.html\" title=\"trait fixed::types::extra::LeEqU64\">LeEqU64</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU64<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#impl-WrappingCast%3CFixedU8%3CFrac%3E%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Frac&gt; <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Frac: <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/types/extra/trait.LeEqU8.html\" title=\"trait fixed::types::extra::LeEqU8\">LeEqU8</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/cast.rs.html#197-200\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/fixed/~1.29/fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;</h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<FixedU8<Frac>>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-WrappingCast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-WrappingCast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-WrappingCast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-WrappingCast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-WrappingCast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#impl-WrappingCast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#414\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-WrappingCast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-WrappingCast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-WrappingCast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-WrappingCast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-WrappingCast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingCast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#impl-WrappingCast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html\" title=\"trait az::WrappingCast\">WrappingCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/az/~1.2/src/az/int.rs.html#415\">Source</a><a href=\"#method.wrapping_cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/az/~1.2/az/trait.WrappingCast.html#tymethod.wrapping_cast\" class=\"fn\">wrapping_cast</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Casts the value.</div></details></div></details>","WrappingCast<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingMul-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#75\">Source</a><a href=\"#impl-WrappingMul-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingMul.html\" title=\"trait num_traits::ops::wrapping::WrappingMul\">WrappingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#75\">Source</a><a href=\"#method.wrapping_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingMul.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Wrapping (modular) multiplication. Computes <code>self * other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingMul","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingNeg-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#122\">Source</a><a href=\"#impl-WrappingNeg-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html\" title=\"trait num_traits::ops::wrapping::WrappingNeg\">WrappingNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#122\">Source</a><a href=\"#method.wrapping_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingNeg.html#tymethod.wrapping_neg\">Read more</a></div></details></div></details>","WrappingNeg","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShl-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#165\">Source</a><a href=\"#impl-WrappingShl-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html\" title=\"trait num_traits::ops::wrapping::WrappingShl\">WrappingShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#165\">Source</a><a href=\"#method.wrapping_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShl.html#tymethod.wrapping_shl\">Read more</a></div></details></div></details>","WrappingShl","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShr-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#198\">Source</a><a href=\"#impl-WrappingShr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html\" title=\"trait num_traits::ops::wrapping::WrappingShr\">WrappingShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#198\">Source</a><a href=\"#method.wrapping_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingShr.html#tymethod.wrapping_shr\">Read more</a></div></details></div></details>","WrappingShr","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingSub-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#54\">Source</a><a href=\"#impl-WrappingSub-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingSub.html\" title=\"trait num_traits::ops::wrapping::WrappingSub\">WrappingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/ops/wrapping.rs.html#54\">Source</a><a href=\"#method.wrapping_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/ops/wrapping/trait.WrappingSub.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Wrapping (modular) subtraction. Computes <code>self - other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingSub","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#61\">Source</a><a href=\"#impl-Zero-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#61\">Source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#61\">Source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#23\">Source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-u64\" class=\"impl\"><a href=\"#impl-Zeroable-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Zeroable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.90.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#626-633\">Source</a><a href=\"#impl-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.format_into\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#626-633\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.format_into\" class=\"fn\">format_into</a>(self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/num_buffer/struct.NumBuffer.html\" title=\"struct core::fmt::num_buffer::NumBuffer\">NumBuffer</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_format_into</code>)</span></div></span></summary><div class=\"docblock\"><p>Allows users to write an integer (in signed decimal format) into a variable <code>buf</code> of\ntype <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/num_buffer/struct.NumBuffer.html\" title=\"struct core::fmt::num_buffer::NumBuffer\"><code>NumBuffer</code></a> that is passed by the caller by mutable reference.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(int_format_into)]\n</span><span class=\"kw\">use </span>core::fmt::NumBuffer;\n\n<span class=\"kw\">let </span>n = <span class=\"number\">0u64</span>;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buf = NumBuffer::new();\n<span class=\"macro\">assert_eq!</span>(n.format_into(<span class=\"kw-2\">&amp;mut </span>buf), <span class=\"string\">\"0\"</span>);\n\n<span class=\"kw\">let </span>n1 = <span class=\"number\">32u64</span>;\n<span class=\"macro\">assert_eq!</span>(n1.format_into(<span class=\"kw-2\">&amp;mut </span>buf), <span class=\"string\">\"32\"</span>);\n\n<span class=\"kw\">let </span>n2 = u64 :: MAX;\n<span class=\"macro\">assert_eq!</span>(n2.format_into(<span class=\"kw-2\">&amp;mut </span>buf), u64 :: MAX.to_string());</code></pre></div>\n</div></details></div></details>",0,"mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1150\">Source</a><a href=\"#impl-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.43.0\">1.43.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 0u64</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this integer type.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u64::MIN, <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.43.0\">1.43.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a> = 18_446_744_073_709_551_615u64</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this integer type\n(2<sup>64</sup> − 1).</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u64::MAX, <span class=\"number\">18446744073709551615</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a> = 64u32</h4></section></summary><div class=\"docblock\"><p>The size of this integer type in bits.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u64::BITS, <span class=\"number\">64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b01001100u64</span>;\n<span class=\"macro\">assert_eq!</span>(n.count_ones(), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>max = u64::MAX;\n<span class=\"macro\">assert_eq!</span>(max.count_ones(), <span class=\"number\">64</span>);\n\n<span class=\"kw\">let </span>zero = <span class=\"number\">0u64</span>;\n<span class=\"macro\">assert_eq!</span>(zero.count_ones(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of zeros in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>zero = <span class=\"number\">0u64</span>;\n<span class=\"macro\">assert_eq!</span>(zero.count_zeros(), <span class=\"number\">64</span>);\n\n<span class=\"kw\">let </span>max = u64::MAX;\n<span class=\"macro\">assert_eq!</span>(max.count_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>Depending on what you’re doing with the value, you might also be interested in the\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.ilog2\" title=\"method u64::ilog2\"><code>ilog2</code></a> function which returns a consistent number, even if the type widens.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = u64::MAX &gt;&gt; <span class=\"number\">2</span>;\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">2</span>);\n\n<span class=\"kw\">let </span>zero = <span class=\"number\">0u64</span>;\n<span class=\"macro\">assert_eq!</span>(zero.leading_zeros(), <span class=\"number\">64</span>);\n\n<span class=\"kw\">let </span>max = u64::MAX;\n<span class=\"macro\">assert_eq!</span>(max.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b0101000u64</span>;\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>zero = <span class=\"number\">0u64</span>;\n<span class=\"macro\">assert_eq!</span>(zero.trailing_zeros(), <span class=\"number\">64</span>);\n\n<span class=\"kw\">let </span>max = u64::MAX;\n<span class=\"macro\">assert_eq!</span>(max.trailing_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0, const since 1.46.0\">1.46.0 (const: 1.46.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = !(u64::MAX &gt;&gt; <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(n.leading_ones(), <span class=\"number\">2</span>);\n\n<span class=\"kw\">let </span>zero = <span class=\"number\">0u64</span>;\n<span class=\"macro\">assert_eq!</span>(zero.leading_ones(), <span class=\"number\">0</span>);\n\n<span class=\"kw\">let </span>max = u64::MAX;\n<span class=\"macro\">assert_eq!</span>(max.leading_ones(), <span class=\"number\">64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0, const since 1.46.0\">1.46.0 (const: 1.46.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing ones in the binary representation\nof <code>self</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0b1010111u64</span>;\n<span class=\"macro\">assert_eq!</span>(n.trailing_ones(), <span class=\"number\">3</span>);\n\n<span class=\"kw\">let </span>zero = <span class=\"number\">0u64</span>;\n<span class=\"macro\">assert_eq!</span>(zero.trailing_ones(), <span class=\"number\">0</span>);\n\n<span class=\"kw\">let </span>max = u64::MAX;\n<span class=\"macro\">assert_eq!</span>(max.trailing_ones(), <span class=\"number\">64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bit_width\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.bit_width\" class=\"fn\">bit_width</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>uint_bit_width</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the minimum number of bits required to represent <code>self</code>.</p>\n<p>This method returns zero if <code>self</code> is zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(uint_bit_width)]\n\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0_u64</span>.bit_width(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0b111_u64</span>.bit_width(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0b1110_u64</span>.bit_width(), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.bit_width(), <span class=\"number\">64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.isolate_most_significant_one\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.isolate_most_significant_one\" class=\"fn\">isolate_most_significant_one</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>isolate_most_least_significant_one</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>self</code> with only the most significant bit set, or <code>0</code> if\nthe input is <code>0</code>.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(isolate_most_least_significant_one)]\n\n</span><span class=\"kw\">let </span>n: u64 = <span class=\"number\">0b_01100100</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.isolate_most_significant_one(), <span class=\"number\">0b_01000000</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0_u64</span>.isolate_most_significant_one(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.isolate_least_significant_one\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.isolate_least_significant_one\" class=\"fn\">isolate_least_significant_one</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>isolate_most_least_significant_one</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>self</code> with only the least significant bit set, or <code>0</code> if\nthe input is <code>0</code>.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(isolate_most_least_significant_one)]\n\n</span><span class=\"kw\">let </span>n: u64 = <span class=\"number\">0b_01100100</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.isolate_least_significant_one(), <span class=\"number\">0b_00000100</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0_u64</span>.isolate_least_significant_one(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.87.0, const since 1.87.0\">1.87.0 (const: 1.87.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.cast_signed\" class=\"fn\">cast_signed</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Returns the bit pattern of <code>self</code> reinterpreted as a signed integer of the same size.</p>\n<p>This produces the same result as an <code>as</code> cast, but ensures that the bit-width remains\nthe same.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = u64::MAX;\n\n<span class=\"macro\">assert_eq!</span>(n.cast_signed(), -<span class=\"number\">1i64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Shifts the bits to the left by a specified amount, <code>n</code>,\nwrapping the truncated bits to the end of the resulting integer.</p>\n<p>Please note this isn’t the same operation as the <code>&lt;&lt;</code> shifting operator!</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0xaa00000000006e1u64</span>;\n<span class=\"kw\">let </span>m = <span class=\"number\">0x6e10aa</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.rotate_left(<span class=\"number\">12</span>), m);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Shifts the bits to the right by a specified amount, <code>n</code>,\nwrapping the truncated bits to the beginning of the resulting\ninteger.</p>\n<p>Please note this isn’t the same operation as the <code>&gt;&gt;</code> shifting operator!</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x6e10aau64</span>;\n<span class=\"kw\">let </span>m = <span class=\"number\">0xaa00000000006e1</span>;\n\n<span class=\"macro\">assert_eq!</span>(n.rotate_right(<span class=\"number\">12</span>), m);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Reverses the byte order of the integer.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1234567890123456u64</span>;\n<span class=\"kw\">let </span>m = n.swap_bytes();\n\n<span class=\"macro\">assert_eq!</span>(m, <span class=\"number\">0x5634129078563412</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0, const since 1.37.0\">1.37.0 (const: 1.37.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Reverses the order of bits in the integer. The least significant bit becomes the most significant bit,\nsecond least-significant bit becomes second most-significant bit, etc.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1234567890123456u64</span>;\n<span class=\"kw\">let </span>m = n.reverse_bits();\n\n<span class=\"macro\">assert_eq!</span>(m, <span class=\"number\">0x6a2c48091e6a2c48</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0</span>, <span class=\"number\">0u64</span>.reverse_bits());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts an integer from big endian to the target’s endianness.</p>\n<p>On big endian this is a no-op. On little endian the bytes are\nswapped.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au64</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(u64::from_be(n), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(u64::from_be(n), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts an integer from little endian to the target’s endianness.</p>\n<p>On little endian this is a no-op. On big endian the bytes are\nswapped.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au64</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"little\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(u64::from_le(n), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(u64::from_le(n), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>self</code> to big endian from the target’s endianness.</p>\n<p>On big endian this is a no-op. On little endian the bytes are\nswapped.</p>\n<h5 id=\"examples-19\"><a class=\"doc-anchor\" href=\"#examples-19\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au64</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(n.to_be(), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(n.to_be(), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Converts <code>self</code> to little endian from the target’s endianness.</p>\n<p>On little endian this is a no-op. On big endian the bytes are\nswapped.</p>\n<h5 id=\"examples-20\"><a class=\"doc-anchor\" href=\"#examples-20\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = <span class=\"number\">0x1Au64</span>;\n\n<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"little\"</span>) {\n    <span class=\"macro\">assert_eq!</span>(n.to_le(), n)\n} <span class=\"kw\">else </span>{\n    <span class=\"macro\">assert_eq!</span>(n.to_le(), n.swap_bytes())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer addition. Computes <code>self + rhs</code>, returning <code>None</code>\nif overflow occurred.</p>\n<h5 id=\"examples-21\"><a class=\"doc-anchor\" href=\"#examples-21\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).checked_add(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(u64::MAX - <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).checked_add(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_add\" class=\"fn\">strict_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer addition. Computes <code>self + rhs</code>, panicking\nif overflow occurred.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5><h6 id=\"overflow-behavior\"><a class=\"doc-anchor\" href=\"#overflow-behavior\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-22\"><a class=\"doc-anchor\" href=\"#examples-22\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).strict_add(<span class=\"number\">1</span>), u64::MAX - <span class=\"number\">1</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= (u64::MAX - <span class=\"number\">2</span>).strict_add(<span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.79.0, const since 1.79.0\">1.79.0 (const: 1.79.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unchecked integer addition. Computes <code>self + rhs</code>, assuming overflow\ncannot occur.</p>\n<p>Calling <code>x.unchecked_add(y)</code> is semantically equivalent to calling\n<code>x.</code><a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_add\" title=\"method u64::checked_add\"><code>checked_add</code></a><code>(y).</code><a href=\"option/enum.Option.html#method.unwrap_unchecked\"><code>unwrap_unchecked</code></a><code>()</code>.</p>\n<p>If you’re just trying to avoid the panic in debug mode, then <strong>do not</strong>\nuse this.  Instead, you’re looking for <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.wrapping_add\" title=\"method u64::wrapping_add\"><code>wrapping_add</code></a>.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This results in undefined behavior when\n<code>self + rhs &gt; u64::MAX</code> or <code>self + rhs &lt; u64::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_add\" title=\"method u64::checked_add\"><code>checked_add</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_add_signed\" class=\"fn\">checked_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked addition with a signed integer. Computes <code>self + rhs</code>,\nreturning <code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-23\"><a class=\"doc-anchor\" href=\"#examples-23\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_add_signed(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_add_signed(-<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).checked_add_signed(<span class=\"number\">3</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_add_signed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_add_signed\" class=\"fn\">strict_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict addition with a signed integer. Computes <code>self + rhs</code>,\npanicking if overflow occurred.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5><h6 id=\"overflow-behavior-1\"><a class=\"doc-anchor\" href=\"#overflow-behavior-1\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-24\"><a class=\"doc-anchor\" href=\"#examples-24\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.strict_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);</code></pre></div>\n<p>The following panic because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">1u64</span>.strict_add_signed(-<span class=\"number\">2</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= (u64::MAX - <span class=\"number\">2</span>).strict_add_signed(<span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer subtraction. Computes <code>self - rhs</code>, returning\n<code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-25\"><a class=\"doc-anchor\" href=\"#examples-25\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_sub(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.checked_sub(<span class=\"number\">1</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_sub\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_sub\" class=\"fn\">strict_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer subtraction. Computes <code>self - rhs</code>, panicking if\noverflow occurred.</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5><h6 id=\"overflow-behavior-2\"><a class=\"doc-anchor\" href=\"#overflow-behavior-2\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-26\"><a class=\"doc-anchor\" href=\"#examples-26\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.strict_sub(<span class=\"number\">1</span>), <span class=\"number\">0</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">0u64</span>.strict_sub(<span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.79.0, const since 1.79.0\">1.79.0 (const: 1.79.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_sub\" class=\"fn\">unchecked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unchecked integer subtraction. Computes <code>self - rhs</code>, assuming overflow\ncannot occur.</p>\n<p>Calling <code>x.unchecked_sub(y)</code> is semantically equivalent to calling\n<code>x.</code><a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_sub\" title=\"method u64::checked_sub\"><code>checked_sub</code></a><code>(y).</code><a href=\"option/enum.Option.html#method.unwrap_unchecked\"><code>unwrap_unchecked</code></a><code>()</code>.</p>\n<p>If you’re just trying to avoid the panic in debug mode, then <strong>do not</strong>\nuse this.  Instead, you’re looking for <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.wrapping_sub\" title=\"method u64::wrapping_sub\"><code>wrapping_sub</code></a>.</p>\n<p>If you find yourself writing code like this:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">if </span>foo &gt;= bar {\n    <span class=\"comment\">// SAFETY: just checked it will not overflow\n    </span><span class=\"kw\">let </span>diff = <span class=\"kw\">unsafe </span>{ foo.unchecked_sub(bar) };\n    <span class=\"comment\">// ... use diff ...\n</span>}</code></pre></div>\n<p>Consider changing it to</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">if let </span><span class=\"prelude-val\">Some</span>(diff) = foo.checked_sub(bar) {\n    <span class=\"comment\">// ... use diff ...\n</span>}</code></pre></div>\n<p>As that does exactly the same thing – including telling the optimizer\nthat the subtraction cannot overflow – but avoids needing <code>unsafe</code>.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>This results in undefined behavior when\n<code>self - rhs &gt; u64::MAX</code> or <code>self - rhs &lt; u64::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_sub\" title=\"method u64::checked_sub\"><code>checked_sub</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.90.0, const since 1.90.0\">1.90.0 (const: 1.90.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_sub_signed\" class=\"fn\">checked_sub_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked subtraction with a signed integer. Computes <code>self - rhs</code>,\nreturning <code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-27\"><a class=\"doc-anchor\" href=\"#examples-27\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_sub_signed(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_sub_signed(-<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).checked_sub_signed(-<span class=\"number\">4</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_sub_signed\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_sub_signed\" class=\"fn\">strict_sub_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict subtraction with a signed integer. Computes <code>self - rhs</code>,\npanicking if overflow occurred.</p>\n<h5 id=\"panics-3\"><a class=\"doc-anchor\" href=\"#panics-3\">§</a>Panics</h5><h6 id=\"overflow-behavior-3\"><a class=\"doc-anchor\" href=\"#overflow-behavior-3\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-28\"><a class=\"doc-anchor\" href=\"#examples-28\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u64</span>.strict_sub_signed(<span class=\"number\">2</span>), <span class=\"number\">1</span>);</code></pre></div>\n<p>The following panic because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">1u64</span>.strict_sub_signed(<span class=\"number\">2</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= (u64::MAX).strict_sub_signed(-<span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_signed_diff\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_signed_diff\" class=\"fn\">checked_signed_diff</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unsigned_signed_diff</code>)</span></div></span></summary><div class=\"docblock\"><p>Checked integer subtraction. Computes <code>self - rhs</code> and checks if the result fits into an <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>, returning <code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-29\"><a class=\"doc-anchor\" href=\"#examples-29\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(unsigned_signed_diff)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u64</span>.checked_signed_diff(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">8</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.checked_signed_diff(<span class=\"number\">10</span>), <span class=\"prelude-val\">Some</span>(-<span class=\"number\">8</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.checked_signed_diff(i64::MAX <span class=\"kw\">as </span>u64), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>((i64::MAX <span class=\"kw\">as </span>u64).checked_signed_diff(u64::MAX), <span class=\"prelude-val\">Some</span>(i64::MIN));\n<span class=\"macro\">assert_eq!</span>((i64::MAX <span class=\"kw\">as </span>u64 + <span class=\"number\">1</span>).checked_signed_diff(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.checked_signed_diff(u64::MAX), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer multiplication. Computes <code>self * rhs</code>, returning\n<code>None</code> if overflow occurred.</p>\n<h5 id=\"examples-30\"><a class=\"doc-anchor\" href=\"#examples-30\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.checked_mul(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.checked_mul(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_mul\" class=\"fn\">strict_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer multiplication. Computes <code>self * rhs</code>, panicking if\noverflow occurred.</p>\n<h5 id=\"panics-4\"><a class=\"doc-anchor\" href=\"#panics-4\">§</a>Panics</h5><h6 id=\"overflow-behavior-4\"><a class=\"doc-anchor\" href=\"#overflow-behavior-4\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-31\"><a class=\"doc-anchor\" href=\"#examples-31\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.strict_mul(<span class=\"number\">1</span>), <span class=\"number\">5</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= u64::MAX.strict_mul(<span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.79.0, const since 1.79.0\">1.79.0 (const: 1.79.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unchecked integer multiplication. Computes <code>self * rhs</code>, assuming overflow\ncannot occur.</p>\n<p>Calling <code>x.unchecked_mul(y)</code> is semantically equivalent to calling\n<code>x.</code><a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_mul\" title=\"method u64::checked_mul\"><code>checked_mul</code></a><code>(y).</code><a href=\"option/enum.Option.html#method.unwrap_unchecked\"><code>unwrap_unchecked</code></a><code>()</code>.</p>\n<p>If you’re just trying to avoid the panic in debug mode, then <strong>do not</strong>\nuse this.  Instead, you’re looking for <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.wrapping_mul\" title=\"method u64::wrapping_mul\"><code>wrapping_mul</code></a>.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">§</a>Safety</h5>\n<p>This results in undefined behavior when\n<code>self * rhs &gt; u64::MAX</code> or <code>self * rhs &lt; u64::MIN</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_mul\" title=\"method u64::checked_mul\"><code>checked_mul</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.52.0\">1.0.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer division. Computes <code>self / rhs</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-32\"><a class=\"doc-anchor\" href=\"#examples-32\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u64</span>.checked_div(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">64</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_div(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_div\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_div\" class=\"fn\">strict_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer division. Computes <code>self / rhs</code>.</p>\n<p>Strict division on unsigned types is just normal division. There’s no\nway overflow could ever happen. This function exists so that all\noperations are accounted for in the strict operations.</p>\n<h5 id=\"panics-5\"><a class=\"doc-anchor\" href=\"#panics-5\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-33\"><a class=\"doc-anchor\" href=\"#examples-33\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.strict_div(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n<p>The following panics because of division by zero:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= (<span class=\"number\">1u64</span>).strict_div(<span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-34\"><a class=\"doc-anchor\" href=\"#examples-34\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u64</span>.checked_div_euclid(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">64</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_div_euclid(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_div_euclid\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_div_euclid\" class=\"fn\">strict_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict Euclidean division. Computes <code>self.div_euclid(rhs)</code>.</p>\n<p>Strict division on unsigned types is just normal division. There’s no\nway overflow could ever happen. This function exists so that all\noperations are accounted for in the strict operations. Since, for the\npositive integers, all common definitions of division are equal, this\nis exactly equal to <code>self.strict_div(rhs)</code>.</p>\n<h5 id=\"panics-6\"><a class=\"doc-anchor\" href=\"#panics-6\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-35\"><a class=\"doc-anchor\" href=\"#examples-35\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.strict_div_euclid(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n<p>The following panics because of division by zero:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= (<span class=\"number\">1u64</span>).strict_div_euclid(<span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_exact_div\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_exact_div\" class=\"fn\">checked_exact_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>exact_div</code>)</span></div></span></summary><div class=\"docblock\"><p>Checked integer division without remainder. Computes <code>self / rhs</code>.</p>\n<h5 id=\"panics-7\"><a class=\"doc-anchor\" href=\"#panics-7\">§</a>Panics</h5>\n<p>This function will panic  if <code>rhs == 0</code> or <code>self % rhs != 0</code>.</p>\n<h5 id=\"examples-36\"><a class=\"doc-anchor\" href=\"#examples-36\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(exact_div)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">64u64</span>.exact_div(<span class=\"number\">2</span>), <span class=\"number\">32</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">64u64</span>.exact_div(<span class=\"number\">32</span>), <span class=\"number\">2</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(exact_div)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">65u64</span>.exact_div(<span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exact_div\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.exact_div\" class=\"fn\">exact_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>exact_div</code>)</span></div></span></summary><div class=\"docblock\"><p>Checked integer division without remainder. Computes <code>self / rhs</code>.</p>\n<h5 id=\"panics-8\"><a class=\"doc-anchor\" href=\"#panics-8\">§</a>Panics</h5>\n<p>This function will panic  if <code>rhs == 0</code> or <code>self % rhs != 0</code>.</p>\n<h5 id=\"examples-37\"><a class=\"doc-anchor\" href=\"#examples-37\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(exact_div)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">64u64</span>.exact_div(<span class=\"number\">2</span>), <span class=\"number\">32</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">64u64</span>.exact_div(<span class=\"number\">32</span>), <span class=\"number\">2</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(exact_div)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">65u64</span>.exact_div(<span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_exact_div\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_exact_div\" class=\"fn\">unchecked_exact_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>exact_div</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked integer division without remainder. Computes <code>self / rhs</code>.</p>\n<h5 id=\"safety-3\"><a class=\"doc-anchor\" href=\"#safety-3\">§</a>Safety</h5>\n<p>This results in undefined behavior when <code>rhs == 0</code> or <code>self % rhs != 0</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_exact_div\" title=\"method u64::checked_exact_div\"><code>checked_exact_div</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer remainder. Computes <code>self % rhs</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-38\"><a class=\"doc-anchor\" href=\"#examples-38\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.checked_rem(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.checked_rem(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_rem\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_rem\" class=\"fn\">strict_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict integer remainder. Computes <code>self % rhs</code>.</p>\n<p>Strict remainder calculation on unsigned types is just the regular\nremainder calculation. There’s no way overflow could ever happen.\nThis function exists so that all operations are accounted for in the\nstrict operations.</p>\n<h5 id=\"panics-9\"><a class=\"doc-anchor\" href=\"#panics-9\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-39\"><a class=\"doc-anchor\" href=\"#examples-39\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.strict_rem(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n<p>The following panics because of division by zero:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">5u64</span>.strict_rem(<span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>, returning <code>None</code>\nif <code>rhs == 0</code>.</p>\n<h5 id=\"examples-40\"><a class=\"doc-anchor\" href=\"#examples-40\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.checked_rem_euclid(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.checked_rem_euclid(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_rem_euclid\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_rem_euclid\" class=\"fn\">strict_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>.</p>\n<p>Strict modulo calculation on unsigned types is just the regular\nremainder calculation. There’s no way overflow could ever happen.\nThis function exists so that all operations are accounted for in the\nstrict operations. Since, for the positive integers, all common\ndefinitions of division are equal, this is exactly equal to\n<code>self.strict_rem(rhs)</code>.</p>\n<h5 id=\"panics-10\"><a class=\"doc-anchor\" href=\"#panics-10\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-41\"><a class=\"doc-anchor\" href=\"#examples-41\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.strict_rem_euclid(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n<p>The following panics because of division by zero:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">5u64</span>.strict_rem_euclid(<span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_disjoint_bitor\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_disjoint_bitor\" class=\"fn\">unchecked_disjoint_bitor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>disjoint_bitor</code>)</span></div></span></summary><div class=\"docblock\"><p>Same value as <code>self | other</code>, but UB if any bit position is set in both inputs.</p>\n<p>This is a situational micro-optimization for places where you’d rather\nuse addition on some platforms and bitwise or on other platforms, based\non exactly which instructions combine better with whatever else you’re\ndoing.  Note that there’s no reason to bother using this for places\nwhere it’s clear from the operations involved that they can’t overlap.\nFor example, if you’re combining <code>u16</code>s into a <code>u32</code> with\n<code>((a as u32) &lt;&lt; 16) | (b as u32)</code>, that’s fine, as the backend will\nknow those sides of the <code>|</code> are disjoint without needing help.</p>\n<h5 id=\"examples-42\"><a class=\"doc-anchor\" href=\"#examples-42\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(disjoint_bitor)]\n\n</span><span class=\"comment\">// SAFETY: `1` and `4` have no bits in common.\n</span><span class=\"kw\">unsafe </span>{\n    <span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_u64</span>.unchecked_disjoint_bitor(<span class=\"number\">4</span>), <span class=\"number\">5</span>);\n}</code></pre></div>\n<h5 id=\"safety-4\"><a class=\"doc-anchor\" href=\"#safety-4\">§</a>Safety</h5>\n<p>Requires that <code>(self &amp; other) == 0</code>, otherwise it’s immediate UB.</p>\n<p>Equivalently, requires that <code>(self | other) == (self + other)</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.ilog\" class=\"fn\">ilog</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the logarithm of the number with respect to an arbitrary base,\nrounded down.</p>\n<p>This method might not be optimized owing to implementation details;\n<code>ilog2</code> can produce results more efficiently for base 2, and <code>ilog10</code>\ncan produce results more efficiently for base 10.</p>\n<h5 id=\"panics-11\"><a class=\"doc-anchor\" href=\"#panics-11\">§</a>Panics</h5>\n<p>This function will panic if <code>self</code> is zero, or if <code>base</code> is less than 2.</p>\n<h5 id=\"examples-43\"><a class=\"doc-anchor\" href=\"#examples-43\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.ilog(<span class=\"number\">5</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<h5 id=\"panics-12\"><a class=\"doc-anchor\" href=\"#panics-12\">§</a>Panics</h5>\n<p>This function will panic if <code>self</code> is zero.</p>\n<h5 id=\"examples-44\"><a class=\"doc-anchor\" href=\"#examples-44\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.ilog2(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<h5 id=\"panics-13\"><a class=\"doc-anchor\" href=\"#panics-13\">§</a>Panics</h5>\n<p>This function will panic if <code>self</code> is zero.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u64</span>.ilog10(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_ilog\" class=\"fn\">checked_ilog</a>(self, base: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the logarithm of the number with respect to an arbitrary base,\nrounded down.</p>\n<p>Returns <code>None</code> if the number is zero, or if the base is not at least 2.</p>\n<p>This method might not be optimized owing to implementation details;\n<code>checked_ilog2</code> can produce results more efficiently for base 2, and\n<code>checked_ilog10</code> can produce results more efficiently for base 10.</p>\n<h5 id=\"examples-45\"><a class=\"doc-anchor\" href=\"#examples-45\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.checked_ilog(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_ilog2\" class=\"fn\">checked_ilog2</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>Returns <code>None</code> if the number is zero.</p>\n<h5 id=\"examples-46\"><a class=\"doc-anchor\" href=\"#examples-46\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.checked_ilog2(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_ilog10\" class=\"fn\">checked_ilog10</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>Returns <code>None</code> if the number is zero.</p>\n<h5 id=\"examples-47\"><a class=\"doc-anchor\" href=\"#examples-47\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u64</span>.checked_ilog10(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>, returning <code>None</code> unless <code>self == 0</code>.</p>\n<p>Note that negating any positive integer will overflow.</p>\n<h5 id=\"examples-48\"><a class=\"doc-anchor\" href=\"#examples-48\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.checked_neg(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_neg\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_neg\" class=\"fn\">strict_neg</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict negation. Computes <code>-self</code>, panicking unless <code>self == 0</code>.</p>\n<p>Note that negating any positive integer will overflow.</p>\n<h5 id=\"panics-14\"><a class=\"doc-anchor\" href=\"#panics-14\">§</a>Panics</h5><h6 id=\"overflow-behavior-5\"><a class=\"doc-anchor\" href=\"#overflow-behavior-5\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-49\"><a class=\"doc-anchor\" href=\"#examples-49\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.strict_neg(), <span class=\"number\">0</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">1u64</span>.strict_neg();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"examples-50\"><a class=\"doc-anchor\" href=\"#examples-50\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u64</span>.checked_shl(<span class=\"number\">4</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0x10</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.checked_shl(<span class=\"number\">129</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.checked_shl(<span class=\"number\">63</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_shl\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_shl\" class=\"fn\">strict_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict shift left. Computes <code>self &lt;&lt; rhs</code>, panicking if <code>rhs</code> is larger\nthan or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"panics-15\"><a class=\"doc-anchor\" href=\"#panics-15\">§</a>Panics</h5><h6 id=\"overflow-behavior-6\"><a class=\"doc-anchor\" href=\"#overflow-behavior-6\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-51\"><a class=\"doc-anchor\" href=\"#examples-51\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u64</span>.strict_shl(<span class=\"number\">4</span>), <span class=\"number\">0x10</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">0x10u64</span>.strict_shl(<span class=\"number\">129</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_shl\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_shl\" class=\"fn\">unchecked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_shifts</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that\n<code>rhs</code> is less than the number of bits in <code>self</code>.</p>\n<h5 id=\"safety-5\"><a class=\"doc-anchor\" href=\"#safety-5\">§</a>Safety</h5>\n<p>This results in undefined behavior if <code>rhs</code> is larger than\nor equal to the number of bits in <code>self</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_shl\" title=\"method u64::checked_shl\"><code>checked_shl</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbounded_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.87.0, const since 1.87.0\">1.87.0 (const: 1.87.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unbounded_shl\" class=\"fn\">unbounded_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unbounded shift left. Computes <code>self &lt;&lt; rhs</code>, without bounding the value of <code>rhs</code>.</p>\n<p>If <code>rhs</code> is larger or equal to the number of bits in <code>self</code>,\nthe entire value is shifted out, and <code>0</code> is returned.</p>\n<h5 id=\"examples-52\"><a class=\"doc-anchor\" href=\"#examples-52\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u64</span>.unbounded_shl(<span class=\"number\">4</span>), <span class=\"number\">0x10</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u64</span>.unbounded_shl(<span class=\"number\">129</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"examples-53\"><a class=\"doc-anchor\" href=\"#examples-53\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.checked_shr(<span class=\"number\">4</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0x1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.checked_shr(<span class=\"number\">129</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_shr\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_shr\" class=\"fn\">strict_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict shift right. Computes <code>self &gt;&gt; rhs</code>, panicking <code>rhs</code> is\nlarger than or equal to the number of bits in <code>self</code>.</p>\n<h5 id=\"panics-16\"><a class=\"doc-anchor\" href=\"#panics-16\">§</a>Panics</h5><h6 id=\"overflow-behavior-7\"><a class=\"doc-anchor\" href=\"#overflow-behavior-7\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-54\"><a class=\"doc-anchor\" href=\"#examples-54\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.strict_shr(<span class=\"number\">4</span>), <span class=\"number\">0x1</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= <span class=\"number\">0x10u64</span>.strict_shr(<span class=\"number\">129</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_shr\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unchecked_shr\" class=\"fn\">unchecked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>unchecked_shifts</code>)</span></div></span></summary><div class=\"docblock\"><p>Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that\n<code>rhs</code> is less than the number of bits in <code>self</code>.</p>\n<h5 id=\"safety-6\"><a class=\"doc-anchor\" href=\"#safety-6\">§</a>Safety</h5>\n<p>This results in undefined behavior if <code>rhs</code> is larger than\nor equal to the number of bits in <code>self</code>,\ni.e. when <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.checked_shr\" title=\"method u64::checked_shr\"><code>checked_shr</code></a> would return <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unbounded_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.87.0, const since 1.87.0\">1.87.0 (const: 1.87.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.unbounded_shr\" class=\"fn\">unbounded_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Unbounded shift right. Computes <code>self &gt;&gt; rhs</code>, without bounding the value of <code>rhs</code>.</p>\n<p>If <code>rhs</code> is larger or equal to the number of bits in <code>self</code>,\nthe entire value is shifted out, and <code>0</code> is returned.</p>\n<h5 id=\"examples-55\"><a class=\"doc-anchor\" href=\"#examples-55\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.unbounded_shr(<span class=\"number\">4</span>), <span class=\"number\">0x1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.unbounded_shr(<span class=\"number\">129</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Checked exponentiation. Computes <code>self.pow(exp)</code>, returning <code>None</code> if\noverflow occurred.</p>\n<h5 id=\"examples-56\"><a class=\"doc-anchor\" href=\"#examples-56\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.checked_pow(<span class=\"number\">5</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">32</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.checked_pow(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strict_pow\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.strict_pow\" class=\"fn\">strict_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>strict_overflow_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Strict exponentiation. Computes <code>self.pow(exp)</code>, panicking if\noverflow occurred.</p>\n<h5 id=\"panics-17\"><a class=\"doc-anchor\" href=\"#panics-17\">§</a>Panics</h5><h6 id=\"overflow-behavior-8\"><a class=\"doc-anchor\" href=\"#overflow-behavior-8\">§</a>Overflow behavior</h6>\n<p>This function will always panic on overflow, regardless of whether overflow checks are enabled.</p>\n<h5 id=\"examples-57\"><a class=\"doc-anchor\" href=\"#examples-57\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.strict_pow(<span class=\"number\">5</span>), <span class=\"number\">32</span>);</code></pre></div>\n<p>The following panics because of overflow:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(strict_overflow_ops)]\n</span><span class=\"kw\">let _ </span>= u64::MAX.strict_pow(<span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer addition. Computes <code>self + rhs</code>, saturating at\nthe numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-58\"><a class=\"doc-anchor\" href=\"#examples-58\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.saturating_add(<span class=\"number\">1</span>), <span class=\"number\">101</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.saturating_add(<span class=\"number\">127</span>), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_add_signed\" class=\"fn\">saturating_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating addition with a signed integer. Computes <code>self + rhs</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-59\"><a class=\"doc-anchor\" href=\"#examples-59\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.saturating_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.saturating_add_signed(-<span class=\"number\">2</span>), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).saturating_add_signed(<span class=\"number\">4</span>), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.47.0\">1.0.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer subtraction. Computes <code>self - rhs</code>, saturating\nat the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-60\"><a class=\"doc-anchor\" href=\"#examples-60\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.saturating_sub(<span class=\"number\">27</span>), <span class=\"number\">73</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">13u64</span>.saturating_sub(<span class=\"number\">127</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.90.0, const since 1.90.0\">1.90.0 (const: 1.90.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_sub_signed\" class=\"fn\">saturating_sub_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer subtraction. Computes <code>self</code> - <code>rhs</code>, saturating at\nthe numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-61\"><a class=\"doc-anchor\" href=\"#examples-61\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.saturating_sub_signed(<span class=\"number\">2</span>), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.saturating_sub_signed(-<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).saturating_sub_signed(-<span class=\"number\">4</span>), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.47.0\">1.7.0 (const: 1.47.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer multiplication. Computes <code>self * rhs</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-62\"><a class=\"doc-anchor\" href=\"#examples-62\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.saturating_mul(<span class=\"number\">10</span>), <span class=\"number\">20</span>);\n<span class=\"macro\">assert_eq!</span>((u64::MAX).saturating_mul(<span class=\"number\">10</span>), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0, const since 1.58.0\">1.58.0 (const: 1.58.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_div\" class=\"fn\">saturating_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer division. Computes <code>self / rhs</code>, saturating at the\nnumeric bounds instead of overflowing.</p>\n<h5 id=\"panics-18\"><a class=\"doc-anchor\" href=\"#panics-18\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-63\"><a class=\"doc-anchor\" href=\"#examples-63\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.saturating_div(<span class=\"number\">2</span>), <span class=\"number\">2</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Saturating integer exponentiation. Computes <code>self.pow(exp)</code>,\nsaturating at the numeric bounds instead of overflowing.</p>\n<h5 id=\"examples-64\"><a class=\"doc-anchor\" href=\"#examples-64\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">4u64</span>.saturating_pow(<span class=\"number\">3</span>), <span class=\"number\">64</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.saturating_pow(<span class=\"number\">2</span>), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) addition. Computes <code>self + rhs</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-65\"><a class=\"doc-anchor\" href=\"#examples-65\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">200u64</span>.wrapping_add(<span class=\"number\">55</span>), <span class=\"number\">255</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">200u64</span>.wrapping_add(u64::MAX), <span class=\"number\">199</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_add_signed\" class=\"fn\">wrapping_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) addition with a signed integer. Computes\n<code>self + rhs</code>, wrapping around at the boundary of the type.</p>\n<h5 id=\"examples-66\"><a class=\"doc-anchor\" href=\"#examples-66\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.wrapping_add_signed(<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.wrapping_add_signed(-<span class=\"number\">2</span>), u64::MAX);\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).wrapping_add_signed(<span class=\"number\">4</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) subtraction. Computes <code>self - rhs</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-67\"><a class=\"doc-anchor\" href=\"#examples-67\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.wrapping_sub(<span class=\"number\">100</span>), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.wrapping_sub(u64::MAX), <span class=\"number\">101</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.90.0, const since 1.90.0\">1.90.0 (const: 1.90.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_sub_signed\" class=\"fn\">wrapping_sub_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) subtraction with a signed integer. Computes\n<code>self - rhs</code>, wrapping around at the boundary of the type.</p>\n<h5 id=\"examples-68\"><a class=\"doc-anchor\" href=\"#examples-68\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.wrapping_sub_signed(<span class=\"number\">2</span>), u64::MAX);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.wrapping_sub_signed(-<span class=\"number\">2</span>), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).wrapping_sub_signed(-<span class=\"number\">4</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) multiplication. Computes <code>self * rhs</code>, wrapping around at the boundary of the type.</p>\n<h5 id=\"examples-69\"><a class=\"doc-anchor\" href=\"#examples-69\">§</a>Examples</h5>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u8</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u8</span>.wrapping_mul(<span class=\"number\">12</span>), <span class=\"number\">120</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">25u8</span>.wrapping_mul(<span class=\"number\">12</span>), <span class=\"number\">44</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.52.0\">1.2.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_div\" class=\"fn\">wrapping_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) division. Computes <code>self / rhs</code>.</p>\n<p>Wrapped division on unsigned types is just normal division. There’s\nno way wrapping could ever happen. This function exists so that all\noperations are accounted for in the wrapping operations.</p>\n<h5 id=\"panics-19\"><a class=\"doc-anchor\" href=\"#panics-19\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-70\"><a class=\"doc-anchor\" href=\"#examples-70\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.wrapping_div(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_div_euclid\" class=\"fn\">wrapping_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping Euclidean division. Computes <code>self.div_euclid(rhs)</code>.</p>\n<p>Wrapped division on unsigned types is just normal division. There’s\nno way wrapping could ever happen. This function exists so that all\noperations are accounted for in the wrapping operations. Since, for\nthe positive integers, all common definitions of division are equal,\nthis is exactly equal to <code>self.wrapping_div(rhs)</code>.</p>\n<h5 id=\"panics-20\"><a class=\"doc-anchor\" href=\"#panics-20\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-71\"><a class=\"doc-anchor\" href=\"#examples-71\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.wrapping_div_euclid(<span class=\"number\">10</span>), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.52.0\">1.2.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_rem\" class=\"fn\">wrapping_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) remainder. Computes <code>self % rhs</code>.</p>\n<p>Wrapped remainder calculation on unsigned types is just the regular\nremainder calculation. There’s no way wrapping could ever happen.\nThis function exists so that all operations are accounted for in the\nwrapping operations.</p>\n<h5 id=\"panics-21\"><a class=\"doc-anchor\" href=\"#panics-21\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-72\"><a class=\"doc-anchor\" href=\"#examples-72\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.wrapping_rem(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_rem_euclid\" class=\"fn\">wrapping_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping Euclidean modulo. Computes <code>self.rem_euclid(rhs)</code>.</p>\n<p>Wrapped modulo calculation on unsigned types is just the regular\nremainder calculation. There’s no way wrapping could ever happen.\nThis function exists so that all operations are accounted for in the\nwrapping operations. Since, for the positive integers, all common\ndefinitions of division are equal, this is exactly equal to\n<code>self.wrapping_rem(rhs)</code>.</p>\n<h5 id=\"panics-22\"><a class=\"doc-anchor\" href=\"#panics-22\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-73\"><a class=\"doc-anchor\" href=\"#examples-73\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.wrapping_rem_euclid(<span class=\"number\">10</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type.</p>\n<p>Since unsigned types do not have negative equivalents\nall applications of this function will wrap (except for <code>-0</code>).\nFor values smaller than the corresponding signed type’s maximum\nthe result is the same as casting the corresponding signed value.\nAny larger values are equivalent to <code>MAX + 1 - (val - MAX - 1)</code> where\n<code>MAX</code> is the corresponding signed type’s maximum.</p>\n<h5 id=\"examples-74\"><a class=\"doc-anchor\" href=\"#examples-74\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0_u64</span>.wrapping_neg(), <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.wrapping_neg(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">13_u64</span>.wrapping_neg(), (!<span class=\"number\">13</span>) + <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">42_u64</span>.wrapping_neg(), !(<span class=\"number\">42 </span>- <span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high-order bits of <code>rhs</code> that\nwould cause the shift to exceed the bitwidth of the type.</p>\n<p>Note that this is <em>not</em> the same as a rotate-left; the\nRHS of a wrapping shift-left is restricted to the range\nof the type, rather than the bits shifted out of the LHS\nbeing returned to the other end. The primitive integer\ntypes all implement a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.rotate_left\" title=\"method u64::rotate_left\"><code>rotate_left</code></a> function,\nwhich may be what you want instead.</p>\n<h5 id=\"examples-75\"><a class=\"doc-anchor\" href=\"#examples-75\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.wrapping_shl(<span class=\"number\">7</span>), <span class=\"number\">128</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.wrapping_shl(<span class=\"number\">128</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0, const since 1.32.0\">1.2.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high-order bits of <code>rhs</code> that\nwould cause the shift to exceed the bitwidth of the type.</p>\n<p>Note that this is <em>not</em> the same as a rotate-right; the\nRHS of a wrapping shift-right is restricted to the range\nof the type, rather than the bits shifted out of the LHS\nbeing returned to the other end. The primitive integer\ntypes all implement a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.rotate_right\" title=\"method u64::rotate_right\"><code>rotate_right</code></a> function,\nwhich may be what you want instead.</p>\n<h5 id=\"examples-76\"><a class=\"doc-anchor\" href=\"#examples-76\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u64</span>.wrapping_shr(<span class=\"number\">7</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">128u64</span>.wrapping_shr(<span class=\"number\">128</span>), <span class=\"number\">128</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_pow\" class=\"fn\">wrapping_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) exponentiation. Computes <code>self.pow(exp)</code>,\nwrapping around at the boundary of the type.</p>\n<h5 id=\"examples-77\"><a class=\"doc-anchor\" href=\"#examples-77\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u64</span>.wrapping_pow(<span class=\"number\">5</span>), <span class=\"number\">243</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.wrapping_pow(<span class=\"number\">6</span>), <span class=\"number\">217</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code>.</p>\n<p>Returns a tuple of the addition along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-78\"><a class=\"doc-anchor\" href=\"#examples-78\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.overflowing_add(<span class=\"number\">2</span>), (<span class=\"number\">7</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.overflowing_add(<span class=\"number\">1</span>), (<span class=\"number\">0</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.carrying_add\" class=\"fn\">carrying_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, carry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code> + <code>carry</code> and returns a tuple containing\nthe sum and the output carry.</p>\n<p>Performs “ternary addition” of two integer operands and a carry-in\nbit, and returns an output integer and a carry-out bit. This allows\nchaining together multiple additions to create a wider addition, and\ncan be useful for bignum addition.</p>\n<p>This can be thought of as a 64-bit “full adder”, in the electronics sense.</p>\n<p>If the input carry is false, this method is equivalent to\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.overflowing_add\" title=\"method u64::overflowing_add\"><code>overflowing_add</code></a>, and the output carry is\nequal to the overflow flag. Note that although carry and overflow\nflags are similar for unsigned integers, they are different for\nsigned integers.</p>\n<h5 id=\"examples-79\"><a class=\"doc-anchor\" href=\"#examples-79\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n\n</span><span class=\"comment\">//    3  MAX    (a = 3 × 2^64 + 2^64 - 1)\n// +  5    7    (b = 5 × 2^64 + 7)\n// ---------\n//    9    6    (sum = 9 × 2^64 + 6)\n\n</span><span class=\"kw\">let </span>(a1, a0): (u64, u64) = (<span class=\"number\">3</span>, u64::MAX);\n<span class=\"kw\">let </span>(b1, b0): (u64, u64) = (<span class=\"number\">5</span>, <span class=\"number\">7</span>);\n<span class=\"kw\">let </span>carry0 = <span class=\"bool-val\">false</span>;\n\n<span class=\"kw\">let </span>(sum0, carry1) = a0.carrying_add(b0, carry0);\n<span class=\"macro\">assert_eq!</span>(carry1, <span class=\"bool-val\">true</span>);\n<span class=\"kw\">let </span>(sum1, carry2) = a1.carrying_add(b1, carry1);\n<span class=\"macro\">assert_eq!</span>(carry2, <span class=\"bool-val\">false</span>);\n\n<span class=\"macro\">assert_eq!</span>((sum1, sum0), (<span class=\"number\">9</span>, <span class=\"number\">6</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.66.0, const since 1.66.0\">1.66.0 (const: 1.66.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_add_signed\" class=\"fn\">overflowing_add_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> + <code>rhs</code> with a signed <code>rhs</code>.</p>\n<p>Returns a tuple of the addition along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-80\"><a class=\"doc-anchor\" href=\"#examples-80\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.overflowing_add_signed(<span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.overflowing_add_signed(-<span class=\"number\">2</span>), (u64::MAX, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).overflowing_add_signed(<span class=\"number\">4</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> - <code>rhs</code>.</p>\n<p>Returns a tuple of the subtraction along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-81\"><a class=\"doc-anchor\" href=\"#examples-81\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.overflowing_sub(<span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.overflowing_sub(<span class=\"number\">1</span>), (u64::MAX, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrowing_sub\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.borrowing_sub\" class=\"fn\">borrowing_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, borrow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates <code>self</code> − <code>rhs</code> − <code>borrow</code> and returns a tuple\ncontaining the difference and the output borrow.</p>\n<p>Performs “ternary subtraction” by subtracting both an integer\noperand and a borrow-in bit from <code>self</code>, and returns an output\ninteger and a borrow-out bit. This allows chaining together multiple\nsubtractions to create a wider subtraction, and can be useful for\nbignum subtraction.</p>\n<h5 id=\"examples-82\"><a class=\"doc-anchor\" href=\"#examples-82\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n\n</span><span class=\"comment\">//    9    6    (a = 9 × 2^64 + 6)\n// -  5    7    (b = 5 × 2^64 + 7)\n// ---------\n//    3  MAX    (diff = 3 × 2^64 + 2^64 - 1)\n\n</span><span class=\"kw\">let </span>(a1, a0): (u64, u64) = (<span class=\"number\">9</span>, <span class=\"number\">6</span>);\n<span class=\"kw\">let </span>(b1, b0): (u64, u64) = (<span class=\"number\">5</span>, <span class=\"number\">7</span>);\n<span class=\"kw\">let </span>borrow0 = <span class=\"bool-val\">false</span>;\n\n<span class=\"kw\">let </span>(diff0, borrow1) = a0.borrowing_sub(b0, borrow0);\n<span class=\"macro\">assert_eq!</span>(borrow1, <span class=\"bool-val\">true</span>);\n<span class=\"kw\">let </span>(diff1, borrow2) = a1.borrowing_sub(b1, borrow1);\n<span class=\"macro\">assert_eq!</span>(borrow2, <span class=\"bool-val\">false</span>);\n\n<span class=\"macro\">assert_eq!</span>((diff1, diff0), (<span class=\"number\">3</span>, u64::MAX));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub_signed\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.90.0, const since 1.90.0\">1.90.0 (const: 1.90.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_sub_signed\" class=\"fn\">overflowing_sub_signed</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates <code>self</code> - <code>rhs</code> with a signed <code>rhs</code></p>\n<p>Returns a tuple of the subtraction along with a boolean indicating\nwhether an arithmetic overflow would occur. If an overflow would\nhave occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-83\"><a class=\"doc-anchor\" href=\"#examples-83\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.overflowing_sub_signed(<span class=\"number\">2</span>), (u64::MAX, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.overflowing_sub_signed(-<span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>((u64::MAX - <span class=\"number\">2</span>).overflowing_sub_signed(-<span class=\"number\">4</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.60.0, const since 1.60.0\">1.60.0 (const: 1.60.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.abs_diff\" class=\"fn\">abs_diff</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Computes the absolute difference between <code>self</code> and <code>other</code>.</p>\n<h5 id=\"examples-84\"><a class=\"doc-anchor\" href=\"#examples-84\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.abs_diff(<span class=\"number\">80</span>), <span class=\"number\">20u64</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">100u64</span>.abs_diff(<span class=\"number\">110</span>), <span class=\"number\">10u64</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the multiplication of <code>self</code> and <code>rhs</code>.</p>\n<p>Returns a tuple of the multiplication along with a boolean\nindicating whether an arithmetic overflow would occur. If an\noverflow would have occurred then the wrapped value is returned.</p>\n<h5 id=\"examples-85\"><a class=\"doc-anchor\" href=\"#examples-85\">§</a>Examples</h5>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.overflowing_mul(<span class=\"number\">2</span>), (<span class=\"number\">10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.overflowing_mul(<span class=\"number\">10</span>), (<span class=\"number\">1410065408</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.widening_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.widening_mul\" class=\"fn\">widening_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the complete product <code>self * rhs</code> without the possibility to overflow.</p>\n<p>This returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.</p>\n<p>If you also need to add a carry to the wide result, then you want\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.carrying_mul\" title=\"method u64::carrying_mul\"><code>Self::carrying_mul</code></a> instead.</p>\n<h5 id=\"examples-86\"><a class=\"doc-anchor\" href=\"#examples-86\">§</a>Examples</h5>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.widening_mul(<span class=\"number\">2</span>), (<span class=\"number\">10</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.widening_mul(<span class=\"number\">10</span>), (<span class=\"number\">1410065408</span>, <span class=\"number\">2</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.carrying_mul\" class=\"fn\">carrying_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, carry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the “full multiplication” <code>self * rhs + carry</code>\nwithout the possibility to overflow.</p>\n<p>This returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.</p>\n<p>Performs “long multiplication” which takes in an extra amount to add, and may return an\nadditional amount of overflow. This allows for chaining together multiple\nmultiplications to create “big integers” which represent larger values.</p>\n<p>If you don’t need the <code>carry</code>, then you can use <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.widening_mul\" title=\"method u64::widening_mul\"><code>Self::widening_mul</code></a> instead.</p>\n<h5 id=\"examples-87\"><a class=\"doc-anchor\" href=\"#examples-87\">§</a>Examples</h5>\n<p>Please note that this example is shared between integer types.\nWhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul(<span class=\"number\">2</span>, <span class=\"number\">0</span>), (<span class=\"number\">10</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul(<span class=\"number\">2</span>, <span class=\"number\">10</span>), (<span class=\"number\">20</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul(<span class=\"number\">10</span>, <span class=\"number\">0</span>), (<span class=\"number\">1410065408</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul(<span class=\"number\">10</span>, <span class=\"number\">10</span>), (<span class=\"number\">1410065418</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.carrying_mul(u64::MAX, u64::MAX), (<span class=\"number\">0</span>, u64::MAX));</code></pre></div>\n<p>This is the core operation needed for scalar multiplication when\nimplementing it for wider-than-native types.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"kw\">fn </span>scalar_mul_eq(little_endian_digits: <span class=\"kw-2\">&amp;mut </span>Vec&lt;u16&gt;, multiplicand: u16) {\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>carry = <span class=\"number\">0</span>;\n    <span class=\"kw\">for </span>d <span class=\"kw\">in </span>little_endian_digits.iter_mut() {\n        (<span class=\"kw-2\">*</span>d, carry) = d.carrying_mul(multiplicand, carry);\n    }\n    <span class=\"kw\">if </span>carry != <span class=\"number\">0 </span>{\n        little_endian_digits.push(carry);\n    }\n}\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">10</span>, <span class=\"number\">20</span>];\nscalar_mul_eq(<span class=\"kw-2\">&amp;mut </span>v, <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">30</span>, <span class=\"number\">60</span>]);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x87654321_u64 </span>* <span class=\"number\">0xFEED</span>, <span class=\"number\">0x86D3D159E38D</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">0x4321</span>, <span class=\"number\">0x8765</span>];\nscalar_mul_eq(<span class=\"kw-2\">&amp;mut </span>v, <span class=\"number\">0xFEED</span>);\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">0xE38D</span>, <span class=\"number\">0xD159</span>, <span class=\"number\">0x86D3</span>]);</code></pre></div>\n<p>If <code>carry</code> is zero, this is similar to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.overflowing_mul\" title=\"method u64::overflowing_mul\"><code>overflowing_mul</code></a>,\nexcept that it gives the value of the overflow instead of just whether one happened:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"kw\">let </span>r = u8::carrying_mul(<span class=\"number\">7</span>, <span class=\"number\">13</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((r.<span class=\"number\">0</span>, r.<span class=\"number\">1 </span>!= <span class=\"number\">0</span>), u8::overflowing_mul(<span class=\"number\">7</span>, <span class=\"number\">13</span>));\n<span class=\"kw\">let </span>r = u8::carrying_mul(<span class=\"number\">13</span>, <span class=\"number\">42</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>((r.<span class=\"number\">0</span>, r.<span class=\"number\">1 </span>!= <span class=\"number\">0</span>), u8::overflowing_mul(<span class=\"number\">13</span>, <span class=\"number\">42</span>));</code></pre></div>\n<p>The value of the first field in the returned tuple matches what you’d get\nby combining the <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.wrapping_mul\" title=\"method u64::wrapping_mul\"><code>wrapping_mul</code></a> and\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.wrapping_add\" title=\"method u64::wrapping_add\"><code>wrapping_add</code></a> methods:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(\n    <span class=\"number\">789_u16</span>.carrying_mul(<span class=\"number\">456</span>, <span class=\"number\">123</span>).<span class=\"number\">0</span>,\n    <span class=\"number\">789_u16</span>.wrapping_mul(<span class=\"number\">456</span>).wrapping_add(<span class=\"number\">123</span>),\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.carrying_mul_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.carrying_mul_add\" class=\"fn\">carrying_mul_add</a>(\n    self,\n    rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>,\n    carry: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>,\n    add: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>,\n) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bigint_helper_methods</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the “full multiplication” <code>self * rhs + carry1 + carry2</code>\nwithout the possibility to overflow.</p>\n<p>This returns the low-order (wrapping) bits and the high-order (overflow) bits\nof the result as two separate values, in that order.</p>\n<p>Performs “long multiplication” which takes in an extra amount to add, and may return an\nadditional amount of overflow. This allows for chaining together multiple\nmultiplications to create “big integers” which represent larger values.</p>\n<p>If you don’t need either <code>carry</code>, then you can use <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.widening_mul\" title=\"method u64::widening_mul\"><code>Self::widening_mul</code></a> instead,\nand if you only need one <code>carry</code>, then you can use <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.carrying_mul\" title=\"method u64::carrying_mul\"><code>Self::carrying_mul</code></a> instead.</p>\n<h5 id=\"examples-88\"><a class=\"doc-anchor\" href=\"#examples-88\">§</a>Examples</h5>\n<p>Please note that this example is shared between integer types,\nwhich explains why <code>u32</code> is used here.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul_add(<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>), (<span class=\"number\">10</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u32</span>.carrying_mul_add(<span class=\"number\">2</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>), (<span class=\"number\">30</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul_add(<span class=\"number\">10</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>), (<span class=\"number\">1410065408</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_000_000_000u32</span>.carrying_mul_add(<span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>), (<span class=\"number\">1410065428</span>, <span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.carrying_mul_add(u64::MAX, u64::MAX, u64::MAX), (u64::MAX, u64::MAX));</code></pre></div>\n<p>This is the core per-digit operation for “grade school” O(n²) multiplication.</p>\n<p>Please note that this example is shared between integer types,\nusing <code>u8</code> for simplicity of the demonstration.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bigint_helper_methods)]\n\n</span><span class=\"kw\">fn </span>quadratic_mul&lt;<span class=\"kw\">const </span>N: usize&gt;(a: [u8; N], b: [u8; N]) -&gt; [u8; N] {\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>out = [<span class=\"number\">0</span>; N];\n    <span class=\"kw\">for </span>j <span class=\"kw\">in </span><span class=\"number\">0</span>..N {\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>carry = <span class=\"number\">0</span>;\n        <span class=\"kw\">for </span>i <span class=\"kw\">in </span><span class=\"number\">0</span>..(N - j) {\n            (out[j + i], carry) = u8::carrying_mul_add(a[i], b[j], out[j + i], carry);\n        }\n    }\n    out\n}\n\n<span class=\"comment\">// -1 * -1 == 1\n</span><span class=\"macro\">assert_eq!</span>(quadratic_mul([<span class=\"number\">0xFF</span>; <span class=\"number\">3</span>], [<span class=\"number\">0xFF</span>; <span class=\"number\">3</span>]), [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]);\n\n<span class=\"macro\">assert_eq!</span>(u32::wrapping_mul(<span class=\"number\">0x9e3779b9</span>, <span class=\"number\">0x7f4a7c15</span>), <span class=\"number\">0xCFFC982D</span>);\n<span class=\"macro\">assert_eq!</span>(\n    quadratic_mul(u32::to_le_bytes(<span class=\"number\">0x9e3779b9</span>), u32::to_le_bytes(<span class=\"number\">0x7f4a7c15</span>)),\n    u32::to_le_bytes(<span class=\"number\">0xCFFC982D</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_div\" class=\"fn\">overflowing_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the divisor when <code>self</code> is divided by <code>rhs</code>.</p>\n<p>Returns a tuple of the divisor along with a boolean indicating\nwhether an arithmetic overflow would occur. Note that for unsigned\nintegers overflow never occurs, so the second value is always\n<code>false</code>.</p>\n<h5 id=\"panics-23\"><a class=\"doc-anchor\" href=\"#panics-23\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-89\"><a class=\"doc-anchor\" href=\"#examples-89\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.overflowing_div(<span class=\"number\">2</span>), (<span class=\"number\">2</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_div_euclid\" class=\"fn\">overflowing_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the quotient of Euclidean division <code>self.div_euclid(rhs)</code>.</p>\n<p>Returns a tuple of the divisor along with a boolean indicating\nwhether an arithmetic overflow would occur. Note that for unsigned\nintegers overflow never occurs, so the second value is always\n<code>false</code>.\nSince, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self.overflowing_div(rhs)</code>.</p>\n<h5 id=\"panics-24\"><a class=\"doc-anchor\" href=\"#panics-24\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-90\"><a class=\"doc-anchor\" href=\"#examples-90\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.overflowing_div_euclid(<span class=\"number\">2</span>), (<span class=\"number\">2</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.52.0\">1.7.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_rem\" class=\"fn\">overflowing_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the remainder when <code>self</code> is divided by <code>rhs</code>.</p>\n<p>Returns a tuple of the remainder after dividing along with a boolean\nindicating whether an arithmetic overflow would occur. Note that for\nunsigned integers overflow never occurs, so the second value is\nalways <code>false</code>.</p>\n<h5 id=\"panics-25\"><a class=\"doc-anchor\" href=\"#panics-25\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-91\"><a class=\"doc-anchor\" href=\"#examples-91\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.overflowing_rem(<span class=\"number\">2</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_rem_euclid\" class=\"fn\">overflowing_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Calculates the remainder <code>self.rem_euclid(rhs)</code> as if by Euclidean division.</p>\n<p>Returns a tuple of the modulo after dividing along with a boolean\nindicating whether an arithmetic overflow would occur. Note that for\nunsigned integers overflow never occurs, so the second value is\nalways <code>false</code>.\nSince, for the positive integers, all common\ndefinitions of division are equal, this operation\nis exactly equal to <code>self.overflowing_rem(rhs)</code>.</p>\n<h5 id=\"panics-26\"><a class=\"doc-anchor\" href=\"#panics-26\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-92\"><a class=\"doc-anchor\" href=\"#examples-92\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">5u64</span>.overflowing_rem_euclid(<span class=\"number\">2</span>), (<span class=\"number\">1</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Negates self in an overflowing fashion.</p>\n<p>Returns <code>!self + 1</code> using wrapping operations to return the value\nthat represents the negation of this unsigned value. Note that for\npositive unsigned values overflow always occurs, but negating 0 does\nnot overflow.</p>\n<h5 id=\"examples-93\"><a class=\"doc-anchor\" href=\"#examples-93\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.overflowing_neg(), (<span class=\"number\">0</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.overflowing_neg(), (-<span class=\"number\">2i32 </span><span class=\"kw\">as </span>u64, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shl\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_shl\" class=\"fn\">overflowing_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Shifts self left by <code>rhs</code> bits.</p>\n<p>Returns a tuple of the shifted version of self along with a boolean\nindicating whether the shift value was larger than or equal to the\nnumber of bits. If the shift value is too large, then value is\nmasked (N-1) where N is the number of bits, and this value is then\nused to perform the shift.</p>\n<h5 id=\"examples-94\"><a class=\"doc-anchor\" href=\"#examples-94\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u64</span>.overflowing_shl(<span class=\"number\">4</span>), (<span class=\"number\">0x10</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x1u64</span>.overflowing_shl(<span class=\"number\">132</span>), (<span class=\"number\">0x10</span>, <span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.overflowing_shl(<span class=\"number\">63</span>), (<span class=\"number\">0</span>, <span class=\"bool-val\">false</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_shr\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.32.0\">1.7.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_shr\" class=\"fn\">overflowing_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Shifts self right by <code>rhs</code> bits.</p>\n<p>Returns a tuple of the shifted version of self along with a boolean\nindicating whether the shift value was larger than or equal to the\nnumber of bits. If the shift value is too large, then value is\nmasked (N-1) where N is the number of bits, and this value is then\nused to perform the shift.</p>\n<h5 id=\"examples-95\"><a class=\"doc-anchor\" href=\"#examples-95\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.overflowing_shr(<span class=\"number\">4</span>), (<span class=\"number\">0x1</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0x10u64</span>.overflowing_shr(<span class=\"number\">132</span>), (<span class=\"number\">0x1</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const since 1.50.0\">1.34.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.overflowing_pow\" class=\"fn\">overflowing_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Raises self to the power of <code>exp</code>, using exponentiation by squaring.</p>\n<p>Returns a tuple of the exponentiation along with a bool indicating\nwhether an overflow happened.</p>\n<h5 id=\"examples-96\"><a class=\"doc-anchor\" href=\"#examples-96\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u64</span>.overflowing_pow(<span class=\"number\">5</span>), (<span class=\"number\">243</span>, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u8</span>.overflowing_pow(<span class=\"number\">6</span>), (<span class=\"number\">217</span>, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Raises self to the power of <code>exp</code>, using exponentiation by squaring.</p>\n<h5 id=\"examples-97\"><a class=\"doc-anchor\" href=\"#examples-97\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.pow(<span class=\"number\">5</span>), <span class=\"number\">32</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.isqrt\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.84.0, const since 1.84.0\">1.84.0 (const: 1.84.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.isqrt\" class=\"fn\">isqrt</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the square root of the number, rounded down.</p>\n<h5 id=\"examples-98\"><a class=\"doc-anchor\" href=\"#examples-98\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">10u64</span>.isqrt(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Performs Euclidean division.</p>\n<p>Since, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self / rhs</code>.</p>\n<h5 id=\"panics-27\"><a class=\"doc-anchor\" href=\"#panics-27\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-99\"><a class=\"doc-anchor\" href=\"#examples-99\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7u64</span>.div_euclid(<span class=\"number\">4</span>), <span class=\"number\">1</span>); <span class=\"comment\">// or any other integer type</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.38.0, const since 1.52.0\">1.38.0 (const: 1.52.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Calculates the least remainder of <code>self (mod rhs)</code>.</p>\n<p>Since, for the positive integers, all common\ndefinitions of division are equal, this\nis exactly equal to <code>self % rhs</code>.</p>\n<h5 id=\"panics-28\"><a class=\"doc-anchor\" href=\"#panics-28\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-100\"><a class=\"doc-anchor\" href=\"#examples-100\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7u64</span>.rem_euclid(<span class=\"number\">4</span>), <span class=\"number\">3</span>); <span class=\"comment\">// or any other integer type</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_floor\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.div_floor\" class=\"fn\">div_floor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_roundings</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the quotient of <code>self</code> and <code>rhs</code>, rounding the result towards negative infinity.</p>\n<p>This is the same as performing <code>self / rhs</code> for all unsigned integers.</p>\n<h5 id=\"panics-29\"><a class=\"doc-anchor\" href=\"#panics-29\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-101\"><a class=\"doc-anchor\" href=\"#examples-101\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(int_roundings)]\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7_u64</span>.div_floor(<span class=\"number\">4</span>), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_ceil\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.div_ceil\" class=\"fn\">div_ceil</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Calculates the quotient of <code>self</code> and <code>rhs</code>, rounding the result towards positive infinity.</p>\n<h5 id=\"panics-30\"><a class=\"doc-anchor\" href=\"#panics-30\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h5 id=\"examples-102\"><a class=\"doc-anchor\" href=\"#examples-102\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">7_u64</span>.div_ceil(<span class=\"number\">4</span>), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_multiple_of\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.next_multiple_of\" class=\"fn\">next_multiple_of</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Calculates the smallest value greater than or equal to <code>self</code> that\nis a multiple of <code>rhs</code>.</p>\n<h5 id=\"panics-31\"><a class=\"doc-anchor\" href=\"#panics-31\">§</a>Panics</h5>\n<p>This function will panic if <code>rhs</code> is zero.</p>\n<h6 id=\"overflow-behavior-9\"><a class=\"doc-anchor\" href=\"#overflow-behavior-9\">§</a>Overflow behavior</h6>\n<p>On overflow, this function will panic if overflow checks are enabled (default in debug\nmode) and wrap if overflow checks are disabled (default in release mode).</p>\n<h5 id=\"examples-103\"><a class=\"doc-anchor\" href=\"#examples-103\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">16_u64</span>.next_multiple_of(<span class=\"number\">8</span>), <span class=\"number\">16</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">23_u64</span>.next_multiple_of(<span class=\"number\">8</span>), <span class=\"number\">24</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_multiple_of\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0, const since 1.73.0\">1.73.0 (const: 1.73.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_next_multiple_of\" class=\"fn\">checked_next_multiple_of</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Calculates the smallest value greater than or equal to <code>self</code> that\nis a multiple of <code>rhs</code>. Returns <code>None</code> if <code>rhs</code> is zero or the\noperation would result in overflow.</p>\n<h5 id=\"examples-104\"><a class=\"doc-anchor\" href=\"#examples-104\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">16_u64</span>.checked_next_multiple_of(<span class=\"number\">8</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">16</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">23_u64</span>.checked_next_multiple_of(<span class=\"number\">8</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">24</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1_u64</span>.checked_next_multiple_of(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.checked_next_multiple_of(<span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_multiple_of\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.87.0, const since 1.87.0\">1.87.0 (const: 1.87.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.is_multiple_of\" class=\"fn\">is_multiple_of</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is an integer multiple of <code>rhs</code>, and false otherwise.</p>\n<p>This function is equivalent to <code>self % rhs == 0</code>, except that it will not panic\nfor <code>rhs == 0</code>. Instead, <code>0.is_multiple_of(0) == true</code>, and for any non-zero <code>n</code>,\n<code>n.is_multiple_of(0) == false</code>.</p>\n<h5 id=\"examples-105\"><a class=\"doc-anchor\" href=\"#examples-105\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(<span class=\"number\">6_u64</span>.is_multiple_of(<span class=\"number\">2</span>));\n<span class=\"macro\">assert!</span>(!<span class=\"number\">5_u64</span>.is_multiple_of(<span class=\"number\">2</span>));\n\n<span class=\"macro\">assert!</span>(<span class=\"number\">0_u64</span>.is_multiple_of(<span class=\"number\">0</span>));\n<span class=\"macro\">assert!</span>(!<span class=\"number\">6_u64</span>.is_multiple_of(<span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == 2^k</code> for some unsigned integer <code>k</code>.</p>\n<h5 id=\"examples-106\"><a class=\"doc-anchor\" href=\"#examples-106\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(<span class=\"number\">16u64</span>.is_power_of_two());\n<span class=\"macro\">assert!</span>(!<span class=\"number\">10u64</span>.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.next_power_of_two\" class=\"fn\">next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>self</code>.</p>\n<p>When return value overflows (i.e., <code>self &gt; (1 &lt;&lt; (N-1))</code> for type\n<code>uN</code>), it panics in debug mode and the return value is wrapped to 0 in\nrelease mode (the only situation in which this method can return 0).</p>\n<h5 id=\"examples-107\"><a class=\"doc-anchor\" href=\"#examples-107\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.next_power_of_two(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u64</span>.next_power_of_two(), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.next_power_of_two(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.50.0\">1.0.0 (const: 1.50.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>self</code>. If\nthe next power of two is greater than the type’s maximum value,\n<code>None</code> is returned, otherwise the power of two is wrapped in <code>Some</code>.</p>\n<h5 id=\"examples-108\"><a class=\"doc-anchor\" href=\"#examples-108\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.checked_next_power_of_two(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u64</span>.checked_next_power_of_two(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(u64::MAX.checked_next_power_of_two(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_next_power_of_two\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.wrapping_next_power_of_two\" class=\"fn\">wrapping_next_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>wrapping_next_power_of_two</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to <code>n</code>. If\nthe next power of two is greater than the type’s maximum value,\nthe return value is wrapped to <code>0</code>.</p>\n<h5 id=\"examples-109\"><a class=\"doc-anchor\" href=\"#examples-109\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(wrapping_next_power_of_two)]\n\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"number\">2u64</span>.wrapping_next_power_of_two(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">3u64</span>.wrapping_next_power_of_two(), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(u64::MAX.wrapping_next_power_of_two(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the memory representation of this integer as a byte array in\nbig-endian (network) byte order.</p>\n<h5 id=\"examples-110\"><a class=\"doc-anchor\" href=\"#examples-110\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x1234567890123456u64</span>.to_be_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, [<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the memory representation of this integer as a byte array in\nlittle-endian byte order.</p>\n<h5 id=\"examples-111\"><a class=\"doc-anchor\" href=\"#examples-111\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x1234567890123456u64</span>.to_le_bytes();\n<span class=\"macro\">assert_eq!</span>(bytes, [<span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the memory representation of this integer as a byte array in\nnative byte order.</p>\n<p>As the target platform’s native endianness is used, portable code\nshould use <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.to_be_bytes\" title=\"method u64::to_be_bytes\"><code>to_be_bytes</code></a> or <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.to_le_bytes\" title=\"method u64::to_le_bytes\"><code>to_le_bytes</code></a>, as appropriate,\ninstead.</p>\n<h5 id=\"examples-112\"><a class=\"doc-anchor\" href=\"#examples-112\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes = <span class=\"number\">0x1234567890123456u64</span>.to_ne_bytes();\n<span class=\"macro\">assert_eq!</span>(\n    bytes,\n    <span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n        [<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>]\n    } <span class=\"kw\">else </span>{\n        [<span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]\n    }\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Creates a native endian integer value from its representation\nas a byte array in big endian.</p>\n<h5 id=\"examples-113\"><a class=\"doc-anchor\" href=\"#examples-113\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u64::from_be_bytes([<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>]);\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x1234567890123456</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_be_u64(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u64 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(size_of::&lt;u64&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u64::from_be_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Creates a native endian integer value from its representation\nas a byte array in little endian.</p>\n<h5 id=\"examples-114\"><a class=\"doc-anchor\" href=\"#examples-114\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u64::from_le_bytes([<span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]);\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x1234567890123456</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_le_u64(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u64 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(size_of::&lt;u64&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u64::from_le_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0, const since 1.44.0\">1.32.0 (const: 1.44.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Creates a native endian integer value from its memory representation\nas a byte array in native endianness.</p>\n<p>As the target platform’s native endianness is used, portable code\nlikely wants to use <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.from_be_bytes\" title=\"associated function u64::from_be_bytes\"><code>from_be_bytes</code></a> or <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#method.from_le_bytes\" title=\"associated function u64::from_le_bytes\"><code>from_le_bytes</code></a>, as\nappropriate instead.</p>\n<h5 id=\"examples-115\"><a class=\"doc-anchor\" href=\"#examples-115\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>value = u64::from_ne_bytes(<span class=\"kw\">if </span><span class=\"macro\">cfg!</span>(target_endian = <span class=\"string\">\"big\"</span>) {\n    [<span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x56</span>]\n} <span class=\"kw\">else </span>{\n    [<span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x90</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x12</span>]\n});\n<span class=\"macro\">assert_eq!</span>(value, <span class=\"number\">0x1234567890123456</span>);</code></pre></div>\n<p>When starting from a slice rather than an array, fallible conversion APIs can be used:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>read_ne_u64(input: <span class=\"kw-2\">&amp;mut &amp;</span>[u8]) -&gt; u64 {\n    <span class=\"kw\">let </span>(int_bytes, rest) = input.split_at(size_of::&lt;u64&gt;());\n    <span class=\"kw-2\">*</span>input = rest;\n    u64::from_ne_bytes(int_bytes.try_into().unwrap())\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecating in a future version: replaced by the <code>MIN</code> associated constant on this type</span></div></span></summary><div class=\"docblock\"><p>New code should prefer to use\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#associatedconstant.MIN\" title=\"associated constant u64::MIN\"><code>u64::MIN</code></a> instead.</p>\n<p>Returns the smallest value that can be represented by this integer type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.32.0\">1.0.0 (const: 1.32.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1151-1169\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecating in a future version: replaced by the <code>MAX</code> associated constant on this type</span></div></span></summary><div class=\"docblock\"><p>New code should prefer to use\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#associatedconstant.MAX\" title=\"associated constant u64::MAX\"><code>u64::MAX</code></a> instead.</p>\n<p>Returns the largest value that can be represented by this integer type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.85.0, const since 1.85.0\">1.85.0 (const: 1.85.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1170\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Calculates the midpoint (average) between <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) / 2</code> as if it were performed in a\nsufficiently-large unsigned integral type. This implies that the result is\nalways rounded towards zero and that no overflow will ever occur.</p>\n<h5 id=\"examples-116\"><a class=\"doc-anchor\" href=\"#examples-116\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"number\">0u64</span>.midpoint(<span class=\"number\">4</span>), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1u64</span>.midpoint(<span class=\"number\">4</span>), <span class=\"number\">2</span>);</code></pre></div>\n</div></details></div></details>",0,"mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a><a href=\"#impl-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.82.0\">1.0.0 (const: 1.82.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses an integer from a string slice with digits in a given base.</p>\n<p>The string is expected to be an optional\n<code>+</code>\nsign followed by only digits. Leading and trailing non-digit characters (including\nwhitespace) represent an error. Underscores (which are accepted in Rust literals)\nalso represent an error.</p>\n<p>Digits are a subset of these characters, depending on <code>radix</code>:</p>\n<ul>\n<li><code>0-9</code></li>\n<li><code>a-z</code></li>\n<li><code>A-Z</code></li>\n</ul>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>This function panics if <code>radix</code> is not in the range from 2 to 36.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u64::from_str_radix(<span class=\"string\">\"A\"</span>, <span class=\"number\">16</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));</code></pre></div>\n<p>Trailing space returns error:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(u64::from_str_radix(<span class=\"string\">\"1 \"</span>, <span class=\"number\">10</span>).is_err());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ascii\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_ascii\" class=\"fn\">from_ascii</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_from_ascii</code>)</span></div></span></summary><div class=\"docblock\"><p>Parses an integer from an ASCII-byte slice with decimal digits.</p>\n<p>The characters are expected to be an optional\n<code>+</code>\nsign followed by only digits. Leading and trailing non-digit characters (including\nwhitespace) represent an error. Underscores (which are accepted in Rust literals)\nalso represent an error.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(int_from_ascii)]\n\n</span><span class=\"macro\">assert_eq!</span>(u64::from_ascii(<span class=\"string\">b\"+10\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));</code></pre></div>\n<p>Trailing space returns error:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(u64::from_ascii(<span class=\"string\">b\"1 \"</span>).is_err());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ascii_radix\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/mod.rs.html#1631\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html#tymethod.from_ascii_radix\" class=\"fn\">from_ascii_radix</a>(\n    src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>int_from_ascii</code>)</span></div></span></summary><div class=\"docblock\"><p>Parses an integer from an ASCII-byte slice with digits in a given base.</p>\n<p>The characters are expected to be an optional\n<code>+</code>\nsign followed by only digits. Leading and trailing non-digit characters (including\nwhitespace) represent an error. Underscores (which are accepted in Rust literals)\nalso represent an error.</p>\n<p>Digits are a subset of these characters, depending on <code>radix</code>:</p>\n<ul>\n<li><code>0-9</code></li>\n<li><code>a-z</code></li>\n<li><code>A-Z</code></li>\n</ul>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>This function panics if <code>radix</code> is not in the range from 2 to 36.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(int_from_ascii)]\n\n</span><span class=\"macro\">assert_eq!</span>(u64::from_ascii_radix(<span class=\"string\">b\"A\"</span>, <span class=\"number\">16</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));</code></pre></div>\n<p>Trailing space returns error:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert!</span>(u64::from_ascii_radix(<span class=\"string\">b\"1 \"</span>, <span class=\"number\">10</span>).is_err());</code></pre></div>\n</div></details></div></details>",0,"mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-ConstParamTy_-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#1116-1125\">Source</a><a href=\"#impl-ConstParamTy_-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.ConstParamTy_.html\" title=\"trait core::marker::ConstParamTy_\">ConstParamTy_</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","ConstParamTy_","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-Copy-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#483-493\">Source</a></span><a href=\"#impl-Copy-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","Copy","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-DefaultIsZeroes-for-u64\" class=\"impl\"><a href=\"#impl-DefaultIsZeroes-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DefaultIsZeroes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","DefaultIsZeroes","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-Eq-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1847\">Source</a></span><a href=\"#impl-Eq-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","Eq","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsCast%3Ci128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Ci128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<i128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsCast%3Ci16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Ci16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<i16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsCast%3Ci32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Ci32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<i32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsCast%3Ci64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Ci64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<i64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsCast%3Ci8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Ci8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<i8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsCast%3Cisize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cisize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<isize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsCast%3Cu128%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cu128%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<u128>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsCast%3Cu16%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cu16%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<u16>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsCast%3Cu32%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cu32%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<u32>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsCast%3Cu64%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cu64%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<u64>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsCast%3Cu8%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cu8%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<u8>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsCast%3Cusize%3E-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsCast%3Cusize%3E-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsCast.html\" title=\"trait fixed::traits_bits::FixedBitsCast\">FixedBitsCast</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsCast<usize>","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsOptionalArbitrary-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsOptionalArbitrary-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsOptionalArbitrary.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalArbitrary\">FixedBitsOptionalArbitrary</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsOptionalArbitrary","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsOptionalBorsh-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsOptionalBorsh-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsOptionalBorsh.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalBorsh\">FixedBitsOptionalBorsh</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsOptionalBorsh","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsOptionalNum-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsOptionalNum-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsOptionalNum.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalNum\">FixedBitsOptionalNum</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsOptionalNum","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-FixedBitsOptionalSerde-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/fixed/~1.29/src/fixed/traits_bits.rs.html#177\">Source</a><a href=\"#impl-FixedBitsOptionalSerde-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/fixed/~1.29/fixed/traits_bits/trait.FixedBitsOptionalSerde.html\" title=\"trait fixed::traits_bits::FixedBitsOptionalSerde\">FixedBitsOptionalSerde</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","FixedBitsOptionalSerde","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-Format-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/2.3.3/src/serde_with/formats.rs.html#30-59\">Source</a><a href=\"#impl-Format-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde_with/2.3.3/serde_with/formats/trait.Format.html\" title=\"trait serde_with::formats::Format\">Format</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3><div class=\"docblock\"><p>Serialize into a u64</p>\n</div></section>","Format","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-Format-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.14.0/src/serde_with/formats.rs.html#30-59\">Source</a><a href=\"#impl-Format-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde_with/3.14.0/serde_with/formats/trait.Format.html\" title=\"trait serde_with::formats::Format\">Format</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3><div class=\"docblock\"><p>Serialize into a u64</p>\n</div></section>","Format","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-Immutable-for-u64\" class=\"impl\"><a href=\"#impl-Immutable-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Immutable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","Immutable","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-Pod-for-u64\" class=\"impl\"><a href=\"#impl-Pod-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Pod for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","Pod","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-SimdCast-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/cast.rs.html#42\">Source</a><a href=\"#impl-SimdCast-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/cast/trait.SimdCast.html\" title=\"trait core::core_simd::cast::SimdCast\">SimdCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","SimdCast","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-StructuralPartialEq-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#266-278\">Source</a><a href=\"#impl-StructuralPartialEq-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","StructuralPartialEq","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-TrustedStep-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/range.rs.html#17\">Source</a><a href=\"#impl-TrustedStep-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/marker/trait.TrustedStep.html\" title=\"trait core::iter::traits::marker::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","TrustedStep","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-Unsigned-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/sign.rs.html#202\">Source</a><a href=\"#impl-Unsigned-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/sign/trait.Unsigned.html\" title=\"trait num_traits::sign::Unsigned\">Unsigned</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","Unsigned","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-UnsizedConstParamTy-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#1127-1140\">Source</a><a href=\"#impl-UnsizedConstParamTy-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.UnsizedConstParamTy.html\" title=\"trait core::marker::UnsizedConstParamTy\">UnsizedConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","UnsizedConstParamTy","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-UseCloned-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#275-280\">Source</a><a href=\"#impl-UseCloned-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.UseCloned.html\" title=\"trait core::clone::UseCloned\">UseCloned</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","UseCloned","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-VaArgSafe-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ffi/va_list.rs.html#226\">Source</a><a href=\"#impl-VaArgSafe-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ffi/va_list/trait.VaArgSafe.html\" title=\"trait core::ffi::va_list::VaArgSafe\">VaArgSafe</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","VaArgSafe","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"],["<section id=\"impl-ZeroablePrimitive-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/num/nonzero.rs.html#69-83\">Source</a><a href=\"#impl-ZeroablePrimitive-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/trait.ZeroablePrimitive.html\" title=\"trait core::num::nonzero::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h3></section>","ZeroablePrimitive","mithril_common::crypto_helper::merkle_tree::MKTreeLeafPosition","mithril_common::entities::type_alias::ImmutableFileNumber","mithril_common::entities::type_alias::Stake","mithril_common::entities::type_alias::LotteryIndex","mithril_common::entities::type_alias::MagicId"]]],["mithril_stm",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[1697199,1784406,19]}