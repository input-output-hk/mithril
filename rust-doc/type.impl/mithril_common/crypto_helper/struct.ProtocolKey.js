(function() {
    var type_impls = Object.fromEntries([["mithril_common",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ProtocolKey%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#19\">Source</a><a href=\"#impl-Clone-for-ProtocolKey%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#19\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","mithril_common::crypto_helper::ed25519::Ed25519VerificationKey","mithril_common::crypto_helper::ed25519::Ed25519SecretKey","mithril_common::crypto_helper::ed25519::Ed25519Signature","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolMkProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ProtocolKey%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#19\">Source</a><a href=\"#impl-Debug-for-ProtocolKey%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#19\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","mithril_common::crypto_helper::ed25519::Ed25519VerificationKey","mithril_common::crypto_helper::ed25519::Ed25519SecretKey","mithril_common::crypto_helper::ed25519::Ed25519Signature","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolMkProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-ProtocolKey%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#139-148\">Source</a><a href=\"#impl-Deref-for-ProtocolKey%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#143\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#145-147\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","mithril_common::crypto_helper::ed25519::Ed25519VerificationKey","mithril_common::crypto_helper::ed25519::Ed25519SecretKey","mithril_common::crypto_helper::ed25519::Ed25519Signature","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolMkProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-ProtocolKey%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#167-180\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-ProtocolKey%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.ProtocolKeyCodec.html\" title=\"trait mithril_common::crypto_helper::ProtocolKeyCodec\">ProtocolKeyCodec</a>&lt;T&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.TryToBytes.html\" title=\"trait mithril_common::crypto_helper::TryToBytes\">TryToBytes</a> + <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.TryFromBytes.html\" title=\"trait mithril_common::crypto_helper::TryFromBytes\">TryFromBytes</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#171-179\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(deserializer: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, D::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","mithril_common::crypto_helper::ed25519::Ed25519VerificationKey","mithril_common::crypto_helper::ed25519::Ed25519SecretKey","mithril_common::crypto_helper::ed25519::Ed25519Signature","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolMkProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAggregateSignature%3CCoreWrapper%3CCtVariableCoreWrapper%3CBlake2bVarCore,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E%3E%3E%3E%3E-for-ProtocolKey%3CAggregateSignature%3CCoreWrapper%3CCtVariableCoreWrapper%3CBlake2bVarCore,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E%3E%3E%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#impl-From%3CAggregateSignature%3CCoreWrapper%3CCtVariableCoreWrapper%3CBlake2bVarCore,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E%3E%3E%3E%3E-for-ProtocolKey%3CAggregateSignature%3CCoreWrapper%3CCtVariableCoreWrapper%3CBlake2bVarCore,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E%3E%3E%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AggregateSignature&lt;CoreWrapper&lt;CtVariableCoreWrapper&lt;Blake2bVarCore, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;&gt;&gt;&gt; for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;AggregateSignature&lt;Blake2b&lt;<a class=\"type\" href=\"https://docs.rs/typenum/1.18.0/typenum/gen/consts/type.U32.html\" title=\"type typenum::gen::consts::U32\">U32</a>&gt;&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: AggregateSignature&lt;Blake2b&lt;<a class=\"type\" href=\"https://docs.rs/typenum/1.18.0/typenum/gen/consts/type.U32.html\" title=\"type typenum::gen::consts::U32\">U32</a>&gt;&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AggregateSignature<CoreWrapper<CtVariableCoreWrapper<Blake2bVarCore, UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>>>>>","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAggregateVerificationKey%3CCoreWrapper%3CCtVariableCoreWrapper%3CBlake2bVarCore,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E%3E%3E%3E%3E-for-ProtocolKey%3CAggregateVerificationKey%3CCoreWrapper%3CCtVariableCoreWrapper%3CBlake2bVarCore,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E%3E%3E%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#impl-From%3CAggregateVerificationKey%3CCoreWrapper%3CCtVariableCoreWrapper%3CBlake2bVarCore,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E%3E%3E%3E%3E-for-ProtocolKey%3CAggregateVerificationKey%3CCoreWrapper%3CCtVariableCoreWrapper%3CBlake2bVarCore,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E,+B0%3E%3E%3E%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;AggregateVerificationKey&lt;CoreWrapper&lt;CtVariableCoreWrapper&lt;Blake2bVarCore, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.18.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;&gt;&gt;&gt; for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;AggregateVerificationKey&lt;Blake2b&lt;<a class=\"type\" href=\"https://docs.rs/typenum/1.18.0/typenum/gen/consts/type.U32.html\" title=\"type typenum::gen::consts::U32\">U32</a>&gt;&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: AggregateVerificationKey&lt;Blake2b&lt;<a class=\"type\" href=\"https://docs.rs/typenum/1.18.0/typenum/gen/consts/type.U32.html\" title=\"type typenum::gen::consts::U32\">U32</a>&gt;&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AggregateVerificationKey<CoreWrapper<CtVariableCoreWrapper<Blake2bVarCore, UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>>>>>","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBlsVerificationKeyProofOfPossession%3E-for-ProtocolKey%3CBlsVerificationKeyProofOfPossession%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#impl-From%3CBlsVerificationKeyProofOfPossession%3E-for-ProtocolKey%3CBlsVerificationKeyProofOfPossession%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BlsVerificationKeyProofOfPossession&gt; for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;VerificationKeyProofOfPossession&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: VerificationKeyProofOfPossession) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BlsVerificationKeyProofOfPossession>","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3COpCert%3E-for-ProtocolKey%3COpCert%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#impl-From%3COpCert%3E-for-ProtocolKey%3COpCert%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"mithril_common/crypto_helper/struct.OpCert.html\" title=\"struct mithril_common::crypto_helper::OpCert\">OpCert</a>&gt; for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;<a class=\"struct\" href=\"mithril_common/crypto_helper/struct.OpCert.html\" title=\"struct mithril_common::crypto_helper::OpCert\">OpCert</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.OpCert.html\" title=\"struct mithril_common::crypto_helper::OpCert\">OpCert</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<OpCert>","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignature%3E-for-ProtocolKey%3CSignature%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#37-39\">Source</a><a href=\"#impl-From%3CSignature%3E-for-ProtocolKey%3CSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Signature&gt; for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;Signature&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#37-39\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Signature) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Signature>","mithril_common::crypto_helper::ed25519::Ed25519Signature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSigningKey%3E-for-ProtocolKey%3CSigningKey%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#impl-From%3CSigningKey%3E-for-ProtocolKey%3CSigningKey%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SigningKey&gt; for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;SigningKey&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: SigningKey) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SigningKey>","mithril_common::crypto_helper::ed25519::Ed25519SecretKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSingleSignature%3E-for-ProtocolKey%3CSingleSignature%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#impl-From%3CSingleSignature%3E-for-ProtocolKey%3CSingleSignature%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SingleSignature&gt; for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;SingleSignature&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: SingleSignature) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SingleSignature>","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSum6KesSig%3E-for-ProtocolKey%3CSum6KesSig%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#impl-From%3CSum6KesSig%3E-for-ProtocolKey%3CSum6KesSig%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Sum6KesSig&gt; for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;Sum6KesSig&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: Sum6KesSig) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Sum6KesSig>","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVerifyingKey%3E-for-ProtocolKey%3CVerifyingKey%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#impl-From%3CVerifyingKey%3E-for-ProtocolKey%3CVerifyingKey%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;VerifyingKey&gt; for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;VerifyingKey&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/wrappers.rs.html#32-35\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: VerifyingKey) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VerifyingKey>","mithril_common::crypto_helper::ed25519::Ed25519VerificationKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-ProtocolKey%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#19\">Source</a><a href=\"#impl-PartialEq-for-ProtocolKey%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#19\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","mithril_common::crypto_helper::ed25519::Ed25519VerificationKey","mithril_common::crypto_helper::ed25519::Ed25519SecretKey","mithril_common::crypto_helper::ed25519::Ed25519Signature","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolMkProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProtocolKey%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#47-137\">Source</a><a href=\"#impl-ProtocolKey%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.TryToBytes.html\" title=\"trait mithril_common::crypto_helper::TryToBytes\">TryToBytes</a> + <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.TryFromBytes.html\" title=\"trait mithril_common::crypto_helper::TryFromBytes\">TryFromBytes</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#52-54\">Source</a><h4 class=\"code-header\">pub fn <a href=\"mithril_common/crypto_helper/struct.ProtocolKey.html#tymethod.new\" class=\"fn\">new</a>(key: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a ProtocolKey from the given key</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_json_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#57-66\">Source</a><h4 class=\"code-header\">pub fn <a href=\"mithril_common/crypto_helper/struct.ProtocolKey.html#tymethod.from_json_hex\" class=\"fn\">from_json_hex</a>(hex_string: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Create an instance from a JSON hex representation</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_json_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#69-71\">Source</a><h4 class=\"code-header\">pub fn <a href=\"mithril_common/crypto_helper/struct.ProtocolKey.html#tymethod.to_json_hex\" class=\"fn\">to_json_hex</a>(&amp;self) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a JSON hex representation of the key</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_to_json_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#74-81\">Source</a><h4 class=\"code-header\">pub fn <a href=\"mithril_common/crypto_helper/struct.ProtocolKey.html#tymethod.key_to_json_hex\" class=\"fn\">key_to_json_hex</a>(key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a JSON hash representation of the given key</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_json_hex_to_file\" class=\"method\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#84-90\">Source</a><h4 class=\"code-header\">pub fn <a href=\"mithril_common/crypto_helper/struct.ProtocolKey.html#tymethod.write_json_hex_to_file\" class=\"fn\">write_json_hex_to_file</a>(&amp;self, path: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Write to file in JSON hex format</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_json_hex_from_file\" class=\"method\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#93-97\">Source</a><h4 class=\"code-header\">pub fn <a href=\"mithril_common/crypto_helper/struct.ProtocolKey.html#tymethod.read_json_hex_from_file\" class=\"fn\">read_json_hex_from_file</a>(path: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Read from file in JSON hex format</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#100-109\">Source</a><h4 class=\"code-header\">pub fn <a href=\"mithril_common/crypto_helper/struct.ProtocolKey.html#tymethod.from_bytes\" class=\"fn\">from_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Create an instance from bytes</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#112-121\">Source</a><h4 class=\"code-header\">pub fn <a href=\"mithril_common/crypto_helper/struct.ProtocolKey.html#tymethod.from_bytes_hex\" class=\"fn\">from_bytes_hex</a>(hex_string: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Create an instance from a bytes hex representation</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#124-126\">Source</a><h4 class=\"code-header\">pub fn <a href=\"mithril_common/crypto_helper/struct.ProtocolKey.html#tymethod.to_bytes_hex\" class=\"fn\">to_bytes_hex</a>(&amp;self) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a bytes hex representation of the key</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_to_bytes_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#129-131\">Source</a><h4 class=\"code-header\">pub fn <a href=\"mithril_common/crypto_helper/struct.ProtocolKey.html#tymethod.key_to_bytes_hex\" class=\"fn\">key_to_bytes_hex</a>(key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a bytes hex representation of the given key</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#134-136\">Source</a><h4 class=\"code-header\">pub fn <a href=\"mithril_common/crypto_helper/struct.ProtocolKey.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Consume self and return the inner key</p>\n</div></details></div></details>",0,"mithril_common::crypto_helper::ed25519::Ed25519VerificationKey","mithril_common::crypto_helper::ed25519::Ed25519SecretKey","mithril_common::crypto_helper::ed25519::Ed25519Signature","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolMkProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-ProtocolKey%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#152-165\">Source</a><a href=\"#impl-Serialize-for-ProtocolKey%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.ProtocolKeyCodec.html\" title=\"trait mithril_common::crypto_helper::ProtocolKeyCodec\">ProtocolKeyCodec</a>&lt;T&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.TryToBytes.html\" title=\"trait mithril_common::crypto_helper::TryToBytes\">TryToBytes</a> + <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.TryFromBytes.html\" title=\"trait mithril_common::crypto_helper::TryFromBytes\">TryFromBytes</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#156-164\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","mithril_common::crypto_helper::ed25519::Ed25519VerificationKey","mithril_common::crypto_helper::ed25519::Ed25519SecretKey","mithril_common::crypto_helper::ed25519::Ed25519Signature","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolMkProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26str%3E-for-ProtocolKey%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#193-202\">Source</a><a href=\"#impl-TryFrom%3C%26str%3E-for-ProtocolKey%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.ProtocolKeyCodec.html\" title=\"trait mithril_common::crypto_helper::ProtocolKeyCodec\">ProtocolKeyCodec</a>&lt;T&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.TryToBytes.html\" title=\"trait mithril_common::crypto_helper::TryToBytes\">TryToBytes</a> + <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.TryFromBytes.html\" title=\"trait mithril_common::crypto_helper::TryFromBytes\">TryFromBytes</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#197\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#199-201\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&str>","mithril_common::crypto_helper::ed25519::Ed25519VerificationKey","mithril_common::crypto_helper::ed25519::Ed25519SecretKey","mithril_common::crypto_helper::ed25519::Ed25519Signature","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolMkProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CString%3E-for-ProtocolKey%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#182-191\">Source</a><a href=\"#impl-TryFrom%3CString%3E-for-ProtocolKey%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.ProtocolKeyCodec.html\" title=\"trait mithril_common::crypto_helper::ProtocolKeyCodec\">ProtocolKeyCodec</a>&lt;T&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.TryToBytes.html\" title=\"trait mithril_common::crypto_helper::TryToBytes\">TryToBytes</a> + <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.TryFromBytes.html\" title=\"trait mithril_common::crypto_helper::TryFromBytes\">TryFromBytes</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#186\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#188-190\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<String>","mithril_common::crypto_helper::ed25519::Ed25519VerificationKey","mithril_common::crypto_helper::ed25519::Ed25519SecretKey","mithril_common::crypto_helper::ed25519::Ed25519Signature","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolMkProof"],["<section id=\"impl-Copy-for-ProtocolKey%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#150\">Source</a><a href=\"#impl-Copy-for-ProtocolKey%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,</div></h3></section>","Copy","mithril_common::crypto_helper::ed25519::Ed25519VerificationKey","mithril_common::crypto_helper::ed25519::Ed25519SecretKey","mithril_common::crypto_helper::ed25519::Ed25519Signature","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolMkProof"],["<section id=\"impl-Eq-for-ProtocolKey%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#19\">Source</a><a href=\"#impl-Eq-for-ProtocolKey%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","mithril_common::crypto_helper::ed25519::Ed25519VerificationKey","mithril_common::crypto_helper::ed25519::Ed25519SecretKey","mithril_common::crypto_helper::ed25519::Ed25519Signature","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolMkProof"],["<section id=\"impl-StructuralPartialEq-for-ProtocolKey%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/types/protocol_key.rs.html#19\">Source</a><a href=\"#impl-StructuralPartialEq-for-ProtocolKey%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"mithril_common/crypto_helper/struct.ProtocolKey.html\" title=\"struct mithril_common::crypto_helper::ProtocolKey\">ProtocolKey</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,</div></h3></section>","StructuralPartialEq","mithril_common::crypto_helper::ed25519::Ed25519VerificationKey","mithril_common::crypto_helper::ed25519::Ed25519SecretKey","mithril_common::crypto_helper::ed25519::Ed25519Signature","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolSignerVerificationKeySignature","mithril_common::crypto_helper::types::wrappers::ProtocolSingleSignature","mithril_common::crypto_helper::types::wrappers::ProtocolMultiSignature","mithril_common::crypto_helper::types::wrappers::ProtocolOpCert","mithril_common::crypto_helper::types::wrappers::ProtocolAggregateVerificationKey","mithril_common::crypto_helper::types::wrappers::ProtocolMkProof"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[63434]}