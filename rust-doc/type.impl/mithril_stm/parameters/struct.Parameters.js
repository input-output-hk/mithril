(function() {
    var type_impls = Object.fromEntries([["mithril_common",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Parameters\" class=\"impl\"><a href=\"#impl-Clone-for-Parameters\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Parameters</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Parameters</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","mithril_common::crypto_helper::types::alias::ProtocolParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Parameters\" class=\"impl\"><a href=\"#impl-Debug-for-Parameters\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Parameters</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","mithril_common::crypto_helper::types::alias::ProtocolParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Parameters\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Parameters\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Parameters</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Parameters, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","mithril_common::crypto_helper::types::alias::ProtocolParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Parameters\" class=\"impl\"><a href=\"#impl-Parameters\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Parameters</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_bytes</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">24</a>]</h4></section></summary><div class=\"docblock\"><p>Convert to bytes</p>\n<h5 id=\"layout-1\"><a class=\"doc-anchor\" href=\"#layout-1\">§</a>Layout</h5>\n<ul>\n<li>Security parameter, <code>m</code> (as u64)</li>\n<li>Quorum parameter, <code>k</code> (as u64)</li>\n<li>Phi f, as (f64)</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Parameters, RegisterError&gt;</h4></section></summary><div class=\"docblock\"><p>Extract the <code>Parameters</code> from a byte slice.</p>\n<h5 id=\"error\"><a class=\"doc-anchor\" href=\"#error\">§</a>Error</h5>\n<p>The function fails if the given string of bytes is not of required size.</p>\n</div></details></div></details>",0,"mithril_common::crypto_helper::types::alias::ProtocolParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Parameters\" class=\"impl\"><a href=\"#impl-PartialEq-for-Parameters\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Parameters</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Parameters) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","mithril_common::crypto_helper::types::alias::ProtocolParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Parameters\" class=\"impl\"><a href=\"#impl-Serialize-for-Parameters\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Parameters</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","mithril_common::crypto_helper::types::alias::ProtocolParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFromBytes-for-Parameters\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/codec/binary.rs.html#54-58\">Source</a><a href=\"#impl-TryFromBytes-for-Parameters\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.TryFromBytes.html\" title=\"trait mithril_common::crypto_helper::TryFromBytes\">TryFromBytes</a> for Parameters</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/codec/binary.rs.html#55-57\">Source</a><a href=\"#method.try_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mithril_common/crypto_helper/trait.TryFromBytes.html#tymethod.try_from_bytes\" class=\"fn\">try_from_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Try to convert from a bytes slice.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_bytes_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/codec/binary.rs.html#22-31\">Source</a><a href=\"#method.try_from_bytes_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mithril_common/crypto_helper/trait.TryFromBytes.html#method.try_from_bytes_hex\" class=\"fn\">try_from_bytes_hex</a>(hex_string: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Try to convert from hex string encoded bytes.</div></details></div></details>","TryFromBytes","mithril_common::crypto_helper::types::alias::ProtocolParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryToBytes-for-Parameters\" class=\"impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/codec/binary.rs.html#48-52\">Source</a><a href=\"#impl-TryToBytes-for-Parameters\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"mithril_common/crypto_helper/trait.TryToBytes.html\" title=\"trait mithril_common::crypto_helper::TryToBytes\">TryToBytes</a> for Parameters</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/codec/binary.rs.html#49-51\">Source</a><a href=\"#method.to_bytes_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mithril_common/crypto_helper/trait.TryToBytes.html#tymethod.to_bytes_vec\" class=\"fn\">to_bytes_vec</a>(&amp;self) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class='docblock'>Try to convert to a bytes vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mithril_common/crypto_helper/codec/binary.rs.html#11-13\">Source</a><a href=\"#method.to_bytes_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mithril_common/crypto_helper/trait.TryToBytes.html#method.to_bytes_hex\" class=\"fn\">to_bytes_hex</a>(&amp;self) -&gt; <a class=\"type\" href=\"mithril_common/type.StdResult.html\" title=\"type mithril_common::StdResult\">StdResult</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class='docblock'>Try to convert to hex bytes representation</div></details></div></details>","TryToBytes","mithril_common::crypto_helper::types::alias::ProtocolParameters"],["<section id=\"impl-Copy-for-Parameters\" class=\"impl\"><a href=\"#impl-Copy-for-Parameters\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Parameters</h3></section>","Copy","mithril_common::crypto_helper::types::alias::ProtocolParameters"],["<section id=\"impl-StructuralPartialEq-for-Parameters\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-Parameters\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for Parameters</h3></section>","StructuralPartialEq","mithril_common::crypto_helper::types::alias::ProtocolParameters"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[16636]}