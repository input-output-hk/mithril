(function() {
    var type_impls = Object.fromEntries([["mithril_common",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Signer%3CD%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Signer%3CD%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Signer&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Digest,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Signer&lt;D&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","mithril_common::crypto_helper::types::alias::ProtocolSigner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Signer%3CD%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Signer%3CD%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Signer&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + Digest,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","mithril_common::crypto_helper::types::alias::ProtocolSigner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Signer%3CD%3E\" class=\"impl\"><a href=\"#impl-Signer%3CD%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;D&gt; Signer&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Digest + FixedOutput,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_stm_signer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_stm_signer</a>(\n    signer_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>,\n    stake: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>,\n    params: Parameters,\n    sk: BlsSigningKey,\n    vk: BlsVerificationKey,\n    closed_reg: ClosedKeyRegistration&lt;D&gt;,\n) -&gt; Signer&lt;D&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.0: Use <code>set_signer</code> instead</span></div></span></summary><div class=\"docblock\"><p>Create a Signer for given input</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_core_signer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_core_signer</a>(\n    signer_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>,\n    stake: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>,\n    params: Parameters,\n    sk: BlsSigningKey,\n    vk: BlsVerificationKey,\n) -&gt; Signer&lt;D&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.0: Use <code>set_basic_signer</code> instead</span></div></span></summary><div class=\"docblock\"><p>Create a core signer (no registration data) for given input</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">sign</a>(&amp;self, msg: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;SingleSignature&gt;</h4></section></summary><div class=\"docblock\"><p>This function produces a signature following the description of Section 2.4.\nOnce the signature is produced, this function checks whether any index in <code>[0,..,self.params.m]</code>\nwins the lottery by evaluating the dense mapping.\nIt records all the winning indexes in <code>Self.indexes</code>.\nIf it wins at least one lottery, it stores the signerâ€™s merkle tree index. The proof of membership\nwill be handled by the aggregator.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_verification_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_verification_key</a>(&amp;self) -&gt; BlsVerificationKey</h4></section></summary><div class=\"docblock\"><p>Extract the verification key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verification_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">verification_key</a>(&amp;self) -&gt; BlsVerificationKey</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.0: Use <code>get_verification_key</code> instead</span></div></span></summary><div class=\"docblock\"><p>Extract the verification key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_stake\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_stake</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Extract stake from the signer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.basic_sign\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">basic_sign</a>(\n    &amp;self,\n    msg: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    total_stake: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;SingleSignature&gt;</h4></section></summary><div class=\"docblock\"><p>A basic signature generated without closed key registration.\nThe basic signature can be verified by basic verifier.\nOnce the signature is produced, this function checks whether any index in <code>[0,..,self.params.m]</code>\nwins the lottery by evaluating the dense mapping.\nIt records all the winning indexes in <code>Self.indexes</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.core_sign\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">core_sign</a>(&amp;self, msg: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], total_stake: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;SingleSignature&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.0: Use <code>basic_sign</code> instead</span></div></span></summary><div class=\"docblock\"><p>A basic signature generated without closed key registration.\nThe basic signature can be verified by basic verifier.\nOnce the signature is produced, this function checks whether any index in <code>[0,..,self.params.m]</code>\nwins the lottery by evaluating the dense mapping.\nIt records all the winning indexes in <code>Self.indexes</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_lottery\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_lottery</a>(\n    &amp;self,\n    msg: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    sigma: &amp;BlsSignature,\n    total_stake: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Collects and returns the winning indices.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_params\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_params</a>(&amp;self) -&gt; Parameters</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.0: Use <code>get_parameters</code> instead</span></div></span></summary><div class=\"docblock\"><p>Get Parameters</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_closed_reg\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_closed_reg</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;ClosedKeyRegistration&lt;D&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 0.5.0: Use <code>get_closed_key_registration</code> instead</span></div></span></summary><div class=\"docblock\"><p>Get closed key registration</p>\n</div></details></div></details>",0,"mithril_common::crypto_helper::types::alias::ProtocolSigner"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[12234]}