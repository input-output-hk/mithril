version: "3.9"

services:
  cardano-node-aggregator:
    image: cardano-node/${CARDANO_IMAGE_ID}-modified
    container_name: cardano-node-aggregator
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.cardano
      args:
        CARDANO_IMAGE_ID: ${CARDANO_IMAGE_ID}
        CARDANO_IMAGE_REGISTRY: ${CARDANO_IMAGE_REGISTRY}
    user: ${CURRENT_UID}
    profiles:
      - cardano
      - all
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    volumes:
      - ../data/${NETWORK}/mithril-aggregator/cardano/config/${NETWORK}:/config
      - ../data/${NETWORK}/mithril-aggregator/cardano/db:/db
      - ../data/${NETWORK}/mithril-aggregator/cardano/ipc:/ipc
    environment:
      - CARDANO_SOCKET_PATH=/ipc/node.socket
      - CARDANO_NODE_SOCKET_PATH=/ipc/node.socket
    command:
      [
        "run",
        "--config",
        "/config/cardano-node/config.json",
        "--topology",
        "/config/cardano-node/topology.json",
        "--database-path",
        "/db"
      ]

  mithril-aggregator:
    image: ghcr.io/input-output-hk/mithril-aggregator:${MITHRIL_IMAGE_ID}
    container_name: mithril-aggregator
    restart: always
    user: ${CURRENT_UID}
    profiles:
      - mithril
      - all
    environment:
      - RUST_BACKTRACE=1
      - GOOGLE_APPLICATION_CREDENTIALS_JSON=${GOOGLE_APPLICATION_CREDENTIALS_JSON}
      - NETWORK=${NETWORK}
      - PROTOCOL_PARAMETERS__K=${PROTOCOL_PARAMETERS__K}
      - PROTOCOL_PARAMETERS__M=${PROTOCOL_PARAMETERS__M}
      - PROTOCOL_PARAMETERS__PHI_F=${PROTOCOL_PARAMETERS__PHI_F}
      - RUN_INTERVAL=60000
      - SIGNED_ENTITY_TYPES=${SIGNED_ENTITY_TYPES}
      - SNAPSHOT_STORE_TYPE=local
      - SNAPSHOT_UPLOADER_TYPE=gcp
      - SNAPSHOT_BUCKET_NAME=${SNAPSHOT_BUCKET_NAME}
      - SNAPSHOT_USE_CDN_DOMAIN=${SNAPSHOT_USE_CDN_DOMAIN}
      - SNAPSHOT_COMPRESSION_ALGORITHM=${SNAPSHOT_COMPRESSION_ALGORITHM}
      - ZSTANDARD_PARAMETERS__LEVEL=${ZSTANDARD_PARAMETERS__LEVEL}
      - ZSTANDARD_PARAMETERS__NUMBER_OF_WORKERS=${ZSTANDARD_PARAMETERS__NUMBER_OF_WORKERS}
      - DATA_STORES_DIRECTORY=/mithril-aggregator/mithril/stores
      - STORE_RETENTION_LIMIT=5
      - CARDANO_NODE_SOCKET_PATH=/ipc/node.socket
      - CARDANO_NODE_VERSION=${CARDANO_IMAGE_ID}
      - CARDANO_CLI_PATH=/app/bin/cardano-cli
      - CHAIN_OBSERVER_TYPE=${CHAIN_OBSERVER_TYPE}
      - GENESIS_VERIFICATION_KEY=${GENESIS_VERIFICATION_KEY}
      - GENESIS_SECRET_KEY=${GENESIS_SECRET_KEY}
      - DB_DIRECTORY=/db
      - SNAPSHOT_DIRECTORY=/mithril-aggregator/mithril/snapshots
      - SERVER_PORT=8080
      - ERA_READER_ADAPTER_TYPE=${ERA_READER_ADAPTER_TYPE}
      - ERA_READER_ADAPTER_PARAMS=${ERA_READER_ADAPTER_PARAMS}
      - CEXPLORER_POOLS_URL=${CEXPLORER_POOLS_URL}
      - ALLOW_UNPARSABLE_BLOCK=${ALLOW_UNPARSABLE_BLOCK}
      - CARDANO_TRANSACTIONS_PROVER_CACHE_POOL_SIZE=${CARDANO_TRANSACTIONS_PROVER_CACHE_POOL_SIZE}
      - CARDANO_TRANSACTIONS_DATABASE_CONNECTION_POOL_SIZE=${CARDANO_TRANSACTIONS_DATABASE_CONNECTION_POOL_SIZE}
      - CARDANO_TRANSACTIONS_SIGNING_CONFIG__SECURITY_PARAMETER=${CARDANO_TRANSACTIONS_SIGNING_CONFIG__SECURITY_PARAMETER}
      - CARDANO_TRANSACTIONS_SIGNING_CONFIG__STEP=${CARDANO_TRANSACTIONS_SIGNING_CONFIG__STEP}
    volumes:
      - ../data/${NETWORK}/mithril-aggregator/mithril:/mithril-aggregator/mithril
      - ../data/${NETWORK}/mithril-aggregator/cardano/db:/db
      - ../data/${NETWORK}/mithril-aggregator/cardano/ipc:/ipc
    ports:
      - "8080:8080"
    command: ["-vvv", "serve"]
    depends_on:
      cardano-node-aggregator:
        condition: service_started
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mithril-aggregator.rule=Host(`${AGGREGATOR_HOST}`)"
      - "traefik.http.routers.mithril-aggregator.tls=true"
      - "traefik.http.routers.mithril-aggregator.tls.certresolver=lets-encrypt"
      - "traefik.http.routers.mithril-aggregator.middlewares=test-auth"
      - "traefik.http.middlewares.test-auth.basicauth.users=${AUTH_USER_PASSWORD}"

  mithril-aggregator-relay:
    image: ghcr.io/input-output-hk/mithril-relay:${MITHRIL_IMAGE_ID}
    container_name: mithril-aggregator-relay
    restart: always
    user: ${CURRENT_UID}
    profiles:
      - mithril
      - all
    environment:
      - RUST_BACKTRACE=1
      - LISTEN_PORT=${AGGREGATOR_RELAY_LISTEN_PORT}
      - AGGREGATOR_ENDPOINT=http://${AGGREGATOR_CREDENTIALS}mithril-aggregator:8080/aggregator
    ports:
      - "${AGGREGATOR_RELAY_LISTEN_PORT}:${AGGREGATOR_RELAY_LISTEN_PORT}"
    command: ["-vvv", "aggregator"]
    depends_on:
      mithril-aggregator:
        condition: service_started
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

networks:
  default:
    name: mithril_network
    external: true
