[package]
name = "mithril-client"
version = "0.12.26"
description = "Mithril client library"
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
categories = ["cryptography"]
include = ["**/*.rs", "Cargo.toml", "README.md", ".gitignore"]

[package.metadata.docs.rs]
all-features = true
# enable unstable features in the documentation
rustdoc-args = ["--cfg", "docsrs"]

[lib]
crate-type = ["lib", "cdylib", "staticlib"]

[features]
# Include native-tls in reqwest by default
default = ["native-tls", "rug-backend", "enable-http-compression"]

# Full feature set
full = ["fs"]

# Enable file system related functionality, right now that mean only snapshot download
fs = ["flate2", "flume", "tar", "tokio/rt", "zstd"]
portable = []                                       # deprecated, will be removed soon
unstable = []

# These features are for support of dependent crates only.
# They do not change the operation of the main crate.
native-tls = ["reqwest/native-tls"]
native-tls-alpn = ["reqwest/native-tls-alpn"]
native-tls-vendored = ["reqwest/native-tls-vendored"]

rustls-tls = ["reqwest/rustls-tls"]
rustls-tls-manual-roots = ["reqwest/rustls-tls-manual-roots"]
rustls-tls-webpki-roots = ["reqwest/rustls-tls-webpki-roots"]
rustls-tls-native-roots = ["reqwest/rustls-tls-native-roots"]

# Support compressed traffic with `reqwest`
enable-http-compression = ["reqwest/gzip", "reqwest/zstd", "reqwest/deflate", "reqwest/brotli"]

# Enables usage of `rug` numerical backend in `mithril-stm` (dependency of `mithril-common`).
rug-backend = ["mithril-common/rug-backend"]
# Enables usage of `num-integer` numerical backend in `mithril-stm` (dependency of `mithril-common`)
# by default it's `rug-backend`
num-integer-backend = ["mithril-common/num-integer-backend"]

[dependencies]
anyhow = { workspace = true }
async-recursion = { workspace = true }
async-trait = { workspace = true }
chrono = { workspace = true }
flate2 = { version = "1.1.2", optional = true }
flume = { version = "0.11.1", optional = true }
futures = "0.3.31"
mithril-common = { path = "../mithril-common", version = ">=0.5", default-features = false }
reqwest = { workspace = true, default-features = false, features = [
    "charset",
    "http2",
    "macos-system-configuration",
    "stream",
] }
semver = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
slog = { workspace = true }
strum = { workspace = true }
tar = { version = "0.4.44", optional = true }
thiserror = { workspace = true }
tokio = { workspace = true }
uuid = { version = "1.17.0", features = ["v4"] }
zstd = { version = "0.13.3", optional = true }

[target.'cfg(not(target_family = "wasm"))'.dependencies]
mithril-cardano-node-internal-database = { path = "../internal/cardano-node/mithril-cardano-node-internal-database", version = "=0.1" }

[target.'cfg(target_family = "wasm")'.dependencies]
getrandom = { version = "0.2.15", features = ["js"] }
uuid = { version = "1.17.0", features = ["v4", "js"] }

[dev-dependencies]
axum = { version = "0.8.4", features = ["json"] }
axum-test = "17.3.0"
bon = "3.6.4"
hex = { workspace = true }
http = "1.3.1"
httpmock = "0.7.0"
mockall = { workspace = true }
sha2 = "0.10.9"
slog-async = { workspace = true }
slog-term = { workspace = true }
tokio = { workspace = true, features = ["macros"] }
tower-http = { version = "0.6.6", features = ["fs"] }

[[test]]
name = "snapshot_list_get_show_download_verify"
path = "tests/snapshot_list_get_show_download_verify.rs"
required-features = ["fs"]

[[test]]
name = "cardano_transaction_proof"
path = "tests/cardano_transaction_proof.rs"

[[test]]
name = "cardano_db_snapshot_list_get_download_verify"
path = "tests/cardano_db_snapshot_list_get_download_verify.rs"
required-features = ["fs"]
