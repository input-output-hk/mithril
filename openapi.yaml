openapi: "3.0.0"
info:
  # The protocol version is embedded in the code as constant in the
  # `mithril-common/src/lib.rs` file. If you plan to update it
  # here to reflect changes in the API, please also update the constant in the
  # Rust file.
  version: 0.1.27
  title: Mithril Aggregator Server
  description: |
    The REST API provided by a Mithril Aggregator Node in a Mithril network.

    You can play with it [here](https://mithril.network/openapi-ui/).
  termsOfService: http://swagger.io/terms/
  contact:
    name: Mithril Team
    url: https://github.com/input-output-hk/mithril
  license:
    name: BSD 3-Clause License
    url: https://github.com/input-output-hk/mithril/blob/main/LICENSE
servers:
  - url: https://aggregator.release-preprod.api.mithril.network/aggregator
  - url: https://aggregator.pre-release-preview.api.mithril.network/aggregator
  - url: https://aggregator.testing-preview.api.mithril.network/aggregator
  - url: http://localhost:8080/aggregator
paths:
  /:
    get:
      summary: Get public specifications about the aggregator
      description: |
        Returns the specifications related to the aggregator:
          * Open API version
          * URL of Mithril documentation
          * Capabilities of the aggregator
          * Cardano transactions prover capabilities
      responses:
        "200":
          description: root found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AggregatorFeaturesMessage"
        "412":
          description: API version mismatch
        default:
          description: root error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /epoch-settings:
    get:
      summary: Get current epoch settings
      description: |
        Returns the information related to the current epoch:
          * protocol parameters for current epoch
          * protocol parameters for next epoch (to setup cryptography, allowing signers to register)
      responses:
        "200":
          description: epoch settings found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EpochSettingsMessage"
        "412":
          description: API version mismatch
        default:
          description: epoch settings error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /certificate-pending:
    get:
      summary: Get current pending certificate information
      description: |
        Returns the information related to the current pending certificate:
          * protocol parameters, for current and next epoch (to setup cryptography)
          * beacon information (where on the chain the pending certificate should be triggered)
          * entity type of the message that must be signed
          * verification keys of the signers, for current and next epoch
      responses:
        "200":
          description: pending certificate found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificatePendingMessage"
        "204":
          description: no pending certificate available
        "412":
          description: API version mismatch
        default:
          description: pending certificate error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /certificates:
    get:
      summary: Get most recent certificates
      description: |
        Returns the list of the most recent certificates
      responses:
        "200":
          description: certificates found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateListMessage"
        "412":
          description: API version mismatch
        default:
          description: certificates retrieval error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /certificate/{certificate_hash}:
    get:
      summary: Get certificate by hash
      description: |
        Returns the certificate identified by its hash
      parameters:
        - name: certificate_hash
          in: path
          description: Hash of the certificate to retrieve
          required: true
          schema:
            type: string
            format: bytes
          example: "7905e83ab5d7bc082c1bbc3033bfd19c539078830d19080d1f241c70aa532572"
      responses:
        "200":
          description: certificate found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateMessage"
        "404":
          description: certificate not found
        "412":
          description: API version mismatch
        default:
          description: pending certificate error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /artifact/snapshots:
    get:
      summary: Get most recent snapshots
      description: |
        Returns the list of the most recent snapshots
      responses:
        "200":
          description: snapshots found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotListMessage"
        "412":
          description: API version mismatch
        default:
          description: snapshots retrieval error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /artifact/snapshot/{digest}:
    get:
      summary: Get snapshot information
      description: |
        Returns the information of a snapshot and where to retrieve its binary content
      parameters:
        - name: digest
          in: path
          description: Digest of the snapshot to retrieve
          required: true
          schema:
            type: string
            format: bytes
          example: "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732"
      responses:
        "200":
          description: snapshot found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotMessage"
        "404":
          description: snapshot not found
        "412":
          description: API version mismatch
        default:
          description: snapshot retrieval error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /artifact/snapshot/{digest}/download:
    get:
      summary: Download the snapshot
      description: |
        Returns the snapshot archive binary content
      parameters:
        - name: digest
          in: path
          description: Digest of the snapshot to download
          required: true
          schema:
            type: string
            format: bytes
          example: "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732"
      responses:
        "200":
          description: snapshot found
          content:
            application/gzip:
              schema:
                type: string
                format: binary
        "404":
          description: snapshot not found
        "412":
          description: API version mismatch
        default:
          description: snapshot retrieval error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /artifact/mithril-stake-distributions:
    get:
      summary: Get most recent Mithril stake distributions
      description: |
        Returns the list of the most recent Mithril stake distributions
      responses:
        "200":
          description: Mithril stake distribution found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MithrilStakeDistributionListMessage"
        "412":
          description: API version mismatch
        default:
          description: Mithril stake distribution retrieval error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /artifact/mithril-stake-distribution/{hash}:
    get:
      summary: Get Mithril stake distribution information
      description: |
        Returns the information of a Mithril stake distribution
      parameters:
        - name: hash
          in: path
          description: Hash of the Mithril stake distribution to retrieve
          required: true
          schema:
            type: string
            format: bytes
          example: "6da2b104ed68481ef829d72d72c2f6a20142916d17985e01774b14ed49f0fea1"
      responses:
        "200":
          description: Mithril stake distribution found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MithrilStakeDistributionMessage"
        "404":
          description: Mithril stake distribution not found
        "412":
          description: API version mismatch
        default:
          description: Mithril stake distribution retrieval error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /artifact/cardano-transactions:
    get:
      summary: Get most recent Cardano transactions set snapshots
      description: |
        Returns the list of the most recent Cardano transactions set snapshots
      responses:
        "200":
          description: Cardano transactions set snapshots found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardanoTransactionSnapshotListMessage"
        "412":
          description: API version mismatch
        default:
          description: Cardano transactions set snapshots retrieval error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /artifact/cardano-transaction/{hash}:
    get:
      summary: Get Cardano transactions set snapshot information
      description: |
        Returns the information of a Cardano transactions set snapshot
      parameters:
        - name: hash
          in: path
          description: Hash of the Cardano transactions set snapshot to retrieve
          required: true
          schema:
            type: string
            format: bytes
          example: "6da2b104ed68481ef829d72d72c2f6a20142916d17985e01774b14ed49f0fea1"
      responses:
        "200":
          description: Cardano transactions set snapshot found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardanoTransactionSnapshotMessage"
        "404":
          description: Cardano transactions set snapshot not found
        "412":
          description: API version mismatch
        default:
          description: Cardano transactions set snapshot retrieval error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /proof/cardano-transaction:
    get:
      summary: Get the proofs of a Cardano transaction list
      description: |
        Returns the transaction hashes and the corresponding proofs
      parameters:
        - name: transaction_hashes
          in: query
          description: Hashes of the Cardano transactions to retrieve proofs for
          required: true
          schema:
            type: array
            items:
              type: string
              format: bytes
              example: "6dbb104ed68481ef829a26a20142916d17985e01774d72d72c2f"
          explode: false
      responses:
        "200":
          description: Cardano transaction proofs found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardanoTransactionProofMessage"
        "404":
          description: No Cardano transactions were ever signed
        "412":
          description: API version mismatch
        default:
          description: Cardano transaction proofs retrieval error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /signers/registered/{epoch}:
    get:
      summary: Get registered signers for an epoch
      description: |
        Returns the signers that registered at a given Epoch
      parameters:
        - name: epoch
          in: path
          description: Cardano Epoch at which the signer registrations are registered
          required: true
          schema:
            type: integer
            format: int64
          example: 419
      responses:
        "200":
          description: Registered Signers found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignerRegistrationsMessage"
        "404":
          description: Registered Signers not found
        "412":
          description: API version mismatch
        default:
          description: Registered Signers retrieval error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /signers/tickers:
    get:
      summary: Get the signers known by the aggregator
      description: |
        Returns the signers party id and, if available, their pool ticker
      responses:
        "200":
          description: Signers found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignersTickersMessage"
        "412":
          description: API version mismatch
        default:
          description: Signers retrieval error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /register-signer:
    post:
      summary: Registers signer
      description: |
        Registers a signer for the next certificate production
      requestBody:
        description: Signer information to register
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterSignerMessage"
      responses:
        "201":
          description: signer registration succeeded
        "400":
          description: signer registration bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "412":
          description: API version mismatch
        "503":
          description: signer registration is unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: signer registration error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /register-signatures:
    post:
      summary: Registers signatures
      description: |
        Registers the single signatures from a signer participant for the pending certificate
      requestBody:
        description: List of signatures
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterSingleSignatureMessage"
      responses:
        "201":
          description: signatures registration succeeded
        "400":
          description: signatures registration bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: open message not found
        "410":
          description: signatures registration done too late
        "412":
          description: API version mismatch
        default:
          description: signatures registration error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /statistics/snapshot:
    post:
      summary: Records snapshot download event
      description: Records snapshot download event
      requestBody:
        description: Downloaded snapshot message
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapshotDownloadMessage"
      responses:
        "201":
          description: Event successfully recorded
        "400":
          description: Record event bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "412":
          description: API version mismatch
        default:
          description: Record event error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    AggregatorFeaturesMessage:
      description: Represents general information about Aggregator public information and signing capabilities
      type: object
      additionalProperties: false
      required:
        - open_api_version
        - documentation_url
        - capabilities
      properties:
        open_api_version:
          description: Open API version
          type: string
          format: byte
        documentation_url:
          description: Mithril documentation
          type: string
          format: byte
        capabilities:
          description: Capabilities of the aggregator
          type: object
          additionalProperties: false
          required:
            - signed_entity_types
          properties:
            signed_entity_types:
              description: Signed entity types that are signed by the aggregator
              type: array
              minItems: 1
              items:
                description: Signed entity types that can be signed
                type: string
                enum:
                  - MithrilStakeDistribution
                  - CardanoStakeDistribution
                  - CardanoImmutableFilesFull
                  - CardanoTransactions
            cardano_transactions_prover:
              description: Cardano transactions prover capabilities
              type: object
              additionalProperties: false
              required:
                - max_hashes_allowed_by_request
              properties:
                max_hashes_allowed_by_request:
                  description: Maximum number of hashes allowed for a single request
                  type: integer
                  format: int64
      example:
        {
          "open_api_version": "0.1.17",
          "documentation_url": "https://mithril.network",
          "capabilities":
            {
              "signed_entity_types":
                [
                  "MithrilStakeDistribution",
                  "CardanoImmutableFilesFull",
                  "CardanoTransactions"
                ],
              "cardano_transactions_prover":
                { "max_hashes_allowed_by_request": 100 }
            }
        }

    Epoch:
      description: Cardano chain epoch number
      type: integer
      format: int64

    EpochSettingsMessage:
      description: Epoch settings
      type: object
      additionalProperties: false
      required:
        - epoch
        - protocol
        - next_protocol
      properties:
        epoch:
          $ref: "#/components/schemas/Epoch"
        protocol:
          $ref: "#/components/schemas/ProtocolParameters"
        next_protocol:
          $ref: "#/components/schemas/ProtocolParameters"
      example:
        {
          "epoch": 329,
          "protocol": { "k": 857, "m": 6172, "phi_f": 0.2 },
          "next_protocol": { "k": 2422, "m": 20973, "phi_f": 0.2 }
        }

    ProtocolParameters:
      description: Protocol cryptographic parameters
      type: object
      additionalProperties: true
      required:
        - k
        - m
        - phi_f
      properties:
        k:
          description: Quorum parameter
          type: integer
          format: int64
        m:
          description: Security parameter (number of lotteries)
          type: integer
          format: int64
        phi_f:
          description: f in phi(w) = 1 - (1 - f)^w, where w is the stake of a participant
          type: number
          format: double
      example: { "k": 857, "m": 6172, "phi_f": 0.2 }

    CardanoDbBeacon:
      description: A point in the Cardano chain at which a Mithril certificate of the Cardano Database should be produced
      type: object
      additionalProperties: true
      required:
        - network
        - epoch
        - immutable_file_number
      properties:
        network:
          description: Cardano network
          type: string
        epoch:
          $ref: "#/components/schemas/Epoch"
        immutable_file_number:
          description: Number of the last immutable file that should be included the snapshot
          type: integer
          format: int64
      example:
        { "network": "mainnet", "epoch": 329, "immutable_file_number": 7060000 }

    SignedEntityType:
      description: Entity type of the message that is signed
      type: object
      additionalProperties: true
      example: { "MithrilStakeDistribution": 246 }

    CertificatePendingMessage:
      description: CertificatePendingMessage represents all the information related to the certificate currently expecting to receive quorum of single signatures
      type: object
      additionalProperties: false
      required:
        - epoch
        - entity_type
        - protocol
        - next_protocol
        - signers
        - next_signers
      properties:
        epoch:
          $ref: "#/components/schemas/Epoch"
        beacon:
          deprecated: true
          allOf:
            - $ref: "#/components/schemas/CardanoDbBeacon"
        entity_type:
          $ref: "#/components/schemas/SignedEntityType"
        protocol:
          $ref: "#/components/schemas/ProtocolParameters"
        next_protocol:
          $ref: "#/components/schemas/ProtocolParameters"
        signers:
          type: array
          items:
            $ref: "#/components/schemas/Signer"
        next_signers:
          type: array
          items:
            $ref: "#/components/schemas/Signer"
      example:
        {
          "epoch": 329,
          "beacon":
            {
              "network": "mainnet",
              "epoch": 329,
              "immutable_file_number": 7060000
            },
          "entity_type": { "MithrilStakeDistribution": 246 },
          "protocol": { "k": 857, "m": 6172, "phi_f": 0.2 },
          "next_protocol": { "k": 2422, "m": 20973, "phi_f": 0.2 },
          "signers":
            [
              {
                "party_id": "1234567890",
                "verification_key": "7b12766b223a5c342b39302c32392c39392c39382c3131313138342c32252c32352c31353",
                "verification_key_signature": "7b5473693727369676d61223a7b227369676d6d61223a7b261223a9b227369676d61213a",
                "operational_certificate": "5b73136372c38302c37342c3136362c313535b5b3232352c3230332c3235352c313030262c38322c39382c32c39332c3138342c3135362c3136362c32312c3131312c3232312c36332c3137372c3232332c3232332c31392c3537",
                "kes_period": 123
              },
              {
                "party_id": "2345678900",
                "verification_key": "7b392c39392c13131312766b223a5c39382c313342b39302c252c32352c31353328342c32",
                "verification_key_signature": "2c33302c3133312c3138322c34362c3133352c372c3139302c3235322c35352c32322c39",
                "operational_certificate": "3231342c3137372c37312c3232352c3233332c3135335d2c322c3139322c5b3133352c34312c3230332c3131332c3c33352c3234302c3230392c312c32392c3233332c33342c3138382c3134312c3130342c3234382c3231392c3",
                "kes_period": 456
              }
            ],
          "next_signers":
            [
              {
                "party_id": "3456789000",
                "verification_key": "7b22766b223a5b3133382c32392c3137332c3134342c36332c3233352c39372c3138302c3",
                "verification_key_signature": "7b227369676d61223a7b227369676d61223a7b227369676d61223a7b227369676d612239",
                "operational_certificate": "5b5b5b3232352c3230332c3235352c3130302c3136372c38302c37342c3136362c3135362c38322c39382c3232312c36332c3137372c3232332c3232332c31392c35372c39332c312c35302c3133392c3233342c3137332c32352",
                "kes_period": 789
              },
              {
                "party_id": "4567890000",
                "verification_key": "34302c3132332c3139302c3134352c3132342c35342c3133302c37302c3136332c3139332",
                "verification_key_signature": "302c3230312c38362c3139312c36302c3234352c3138332c3134342c3139392c3130335f",
                "operational_certificate": "2c38382c3138372c3233332c34302c37322c31362c36365d2c312c3132332c5b31362c3136392c3134312c3138332c32322c3137342c3131312c33322c36342c35322c2c3232382c37392c3137352c32395312c3838282c323030",
                "kes_period": 876
              }
            ]
        }

    Stake:
      description: Stake represents the stakes of a participant in the Cardano chain
      type: object
      additionalProperties: true
      required:
        - stake
      properties:
        stake:
          description: Stake share as computed in the 'stake distribution' by the Cardano Node, multiplied by a billion (1.0e9)
          type: integer
          format: int64
      example: { "stake": 1234 }

    Signer:
      description: Signer represents a signing participant in the network
      type: object
      additionalProperties: true
      required:
        - party_id
        - verification_key
      properties:
        party_id:
          description: The unique identifier of the signer
          type: string
        verification_key:
          description: The public key used to authenticate signer signature
          type: string
          format: byte
        verification_key_signature:
          description: The signature of the verification_key (signed by the Cardano node KES secret key)
          type: string
          format: byte
        operational_certificate:
          description: The operational certificate of the stake pool operator attached to the signer node
          type: string
          format: byte
        kes_period:
          description: The number of updates of the KES secret key that signed the verification key
          type: integer
          format: int64
      example:
        {
          "party_id": "1234567890",
          "verification_key": "7b12766b223a5c342b39302c32392c39392c39382c3131313138342c32252c32352c31353",
          "verification_key_signature": "7b5473693727369676d61223a7b227369676d6d61223a7b261223a9b227369676d61213a",
          "operational_certificate": "5b73136372c38302c37342c3136362c313535b5b3232352c3230332c3235352c313030262c38322c39382c32c39332c3138342c3135362c3136362c32312c3131312c3232312c36332c3137372c3232332c3232332c31392c3537",
          "kes_period": 123
        }

    RegisterSignerMessage:
      description: This message represents a signing participant in the network.
      additionalProperties: true
      properties:
        epoch:
          $ref: "#/components/schemas/Epoch"
      allOf:
        - $ref: "#/components/schemas/Signer"
      example:
        {
          "epoch": 329,
          "party_id": "1234567890",
          "verification_key": "7b12766b223a5c342b39302c32392c39392c39382c3131313138342c32252c32352c31353",
          "verification_key_signature": "7b5473693727369676d61223a7b227369676d6d61223a7b261223a9b227369676d61213a",
          "operational_certificate": "5b73136372c38302c37342c3136362c313535b5b3232352c3230332c3235352c313030262c38322c39382c32c39332c3138342c3135362c3136362c32312c3131312c3232312c36332c3137372c3232332c3232332c31392c3537",
          "kes_period": 123
        }

    SignerWithStake:
      description: Signer represents a signing party in the network (including its stakes)
      additionalProperties: true
      allOf:
        - $ref: "#/components/schemas/Signer"
        - $ref: "#/components/schemas/Stake"
      example:
        {
          "party_id": "1234567890",
          "verification_key": "7b12766b223a5c342b39302c32392c39392c39382c3131313138342c32252c32352c31353",
          "verification_key_signature": "7b5473693727369676d61223a7b227369676d6d61223a7b261223a9b227369676d61213a",
          "operational_certificate": "5b73136372c38302c37342c3136362c313535b5b3232352c3230332c3235352c313030262c38322c39382c32c39332c3138342c3135362c3136362c32312c3131312c3232312c36332c3137372c3232332c3232332c31392c3537",
          "kes_period": 123,
          "stake": 1234
        }

    StakeDistributionParty:
      description: |
        Signer registered to a signature round.
      type: object
      additionalProperties: true
      properties:
        party_id:
          description: The unique identifier of the signer
          type: string
        stake:
          description: Stake share as computed in the 'stake distribution' by the Cardano Node, multiplied by a billion (1.0e9)
          type: integer
          format: int64
      example: { "party_id": "1234567890", "stake": 1234 }

    SignerRegistrationsMessage:
      description: |
        This message holds the registered signers at a given epoch.
      type: object
      additionalProperties: false
      properties:
        registered_at:
          $ref: "#/components/schemas/Epoch"
        signing_at:
          $ref: "#/components/schemas/Epoch"
        registrations:
          type: array
          items:
            $ref: "#/components/schemas/SignerRegistrationsListItemMessage"
      example:
        {
          "registered_at": 420,
          "signing_at": 422,
          "registrations": [{ "party_id": "1234567890", "stake": 1234 }]
        }

    SignerRegistrationsListItemMessage:
      description: represents an item of a SignerRegistrationsMessage registration
      type: object
      additionalProperties: true
      allOf:
        - $ref: "#/components/schemas/Stake"
      properties:
        party_id:
          description: The unique identifier of the signer
          type: string

    SignersTickersMessage:
      description: represents the list of signers known by the aggregator
      type: object
      required:
        - network
        - signers
      properties:
        network:
          description: Cardano network of the aggregator
          type: string
          format: bytes
        signers:
          description: Known signers
          items:
            $ref: "#/components/schemas/SignerTickerListItemMessage"
      example:
        {
          "network": "mainnet",
          "signers":
            [
              {
                "party_id": "pool1234567890",
                "pool_ticker": "[Pool_Name]",
                "has_registered": true
              },
              { "party_id": "pool0987654321", "has_registered": false }
            ]
        }

    SignerTickerListItemMessage:
      description: represents a known signer with its pool ticker
      type: object
      additionalProperties: true
      required:
        - party_id
        - has_registered
      properties:
        party_id:
          description: The unique identifier of the signer
          type: string
        pool_ticker:
          description: The signer pool ticker
          type: string
        has_registered:
          description: The signer has registered at least once
          type: boolean
      example:
        {
          "party_id": "pool1234567890",
          "pool_ticker": "[Pool_Name]",
          "has_registered": true
        }

    RegisterSingleSignatureMessage:
      description: |
        This message holds a Signer Single Signature with the
        list of won indexes in the lottery.
      type: object
      additionalProperties: false
      required:
        - entity_type
        - party_id
        - signature
        - indexes
      properties:
        entity_type:
          $ref: "#/components/schemas/SignedEntityType"
        party_id:
          description: The unique identifier of the signer
          type: string
        signature:
          description: The single signature of the digest
          type: string
          format: byte
        indexes:
          description: The indexes of the lottery won that lead to the single signature
          type: array
          items:
            type: integer
            format: int64
      example:
        {
          "entity_type": { "MithrilStakeDistribution": 246 },
          "party_id": "1234567890",
          "signature": "7b2c36322c3130352c3232322c31302c3131302c33312c37312c39372c22766b223a5b3136342c2c31393137352c313834",
          "indexes": [25, 35]
        }

    ProtocolMessageParts:
      description: ProtocolMessage represents a message that is signed (or verified) by the Mithril protocol
      type: object
      additionalProperties: true
      required:
        - next_aggregate_verification_key
      properties:
        snapshot_digest:
          description: Digest of the snapshot archive
          type: string
          format: bytes
        next_aggregate_verification_key:
          description: Aggregate verification key (AVK) that will be used to create the next multi signature
          type: string
          format: bytes
        latest_block_number:
          description: The latest signed block number
          type: string
      example:
        {
          "snapshot_digest": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
          "next_aggregate_verification_key": "b132362c3232352c36392c31373133352c31323235392c3235332c3233342c34226d745f636f6d6d69746d656e74223a7b22726f6f74223a5b33382c3382c3138322c3231322c2c363",
          "latest_block_number": "123456"
        }

    ProtocolMessage:
      description: ProtocolMessage represents a message that is signed (or verified) by the Mithril protocol
      type: object
      additionalProperties: false
      required:
        - message_parts
      properties:
        message_parts:
          $ref: "#/components/schemas/ProtocolMessageParts"
      example:
        {
          "message_parts":
            {
              "snapshot_digest": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
              "next_aggregate_verification_key": "b132362c3232352c36392c31373133352c31323235392c3235332c3233342c34226d745f636f6d6d69746d656e74223a7b22726f6f74223a5b33382c3382c3138322c3231322c2c363"
            }
        }

    CertificateListItemMessageMetadata:
      description: CertificateListItemMessageMetadata represents the metadata associated to a CertificateListItemMessage
      type: object
      additionalProperties: false
      required:
        - network
        - version
        - parameters
        - initiated_at
        - sealed_at
        - total_signers
      properties:
        network:
          description: Cardano network
          type: string
        version:
          description: Version of the protocol
          type: string
          format: bytes
        parameters:
          $ref: "#/components/schemas/ProtocolParameters"
        initiated_at:
          description: Date and time at which the certificate was initialized and ready to accept single signatures from signers
          type: string
          format: date-time
        sealed_at:
          description: Date and time at which the certificate was sealed (when the quorum of single signatures was reached so that a multi signature could be aggregated from them)
          type: string
          format: date-time
        total_signers:
          description: The number of the signers with their stakes and verification keys
          type: integer
          format: int64
      example:
        {
          "network": "mainnet",
          "version": "0.1.0",
          "parameters": { "k": 5, "m": 100, "phi_f": 0.65 },
          "initiated_at": "2022-07-17T18:51:23.192811338Z",
          "sealed_at": "2022-07-17T18:51:35.830832580Z",
          "total_signers": 3
        }

    CertificateListMessage:
      description: CertificateListMessage represents a list of Mithril certificates
      type: array
      items:
        $ref: "#/components/schemas/CertificateListItemMessage"
      example:
        [
          {
            "hash": "9dc998101590f733f7a50e7c03b5b336e69a751cc02d811395d49618db3ba3d7",
            "previous_hash": "aa2ddfb87a17103bdf15bfb21a2941b3f3223a3c8d710910496c392b14f8c403",
            "epoch": 329,
            "beacon":
              {
                "network": "mainnet",
                "epoch": 329,
                "immutable_file_number": 7060000
              },
            signed_entity_type: { "MithrilStakeDistribution": 246 },
            "metadata":
              {
                "network": "mainnet",
                "version": "0.1.0",
                "parameters": { "k": 5, "m": 100, "phi_f": 0.65 },
                "initiated_at": "2022-07-17T18:51:23.192811338Z",
                "sealed_at": "2022-07-17T18:51:35.830832580Z",
                "total_signers": 3
              },
            "protocol_message":
              {
                "message_parts":
                  {
                    "snapshot_digest": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
                    "next_aggregate_verification_key": "b132362c3232352c36392c31373133352c31323235392c3235332c3233342c34226d745f636f6d6d69746d656e74223a7b22726f6f74223a5b33382c3382c3138322c3231322c2c363"
                  }
              },
            "signed_message": "07ed7c9e128744c1a4797b7eb34c54823cc7a21fc95c19876122ab4bb0fe796d6bba2bc",
            "aggregate_verification_key": "7b232392c3130342c34392c35312c3130332c3136352c37364223a7b22726f6f74223a5b3137392c3135312c3135382c37332c37372c2c3135392c3226d745f636f6d6d69746d656e7"
          }
        ]

    CertificateListItemMessage:
      description: CertificateListItemMessage represents an item of a list of Mithril certificates
      type: object
      additionalProperties: false
      required:
        - hash
        - previous_hash
        - epoch
        - signed_entity_type
        - metadata
        - protocol_message
        - signed_message
        - aggregate_verification_key
      properties:
        hash:
          description: Hash of the current certificate
          type: string
          format: bytes
        previous_hash:
          description: Hash of the previous certificate
          type: string
          format: bytes
        epoch:
          $ref: "#/components/schemas/Epoch"
        beacon:
          deprecated: true
          allOf:
            - $ref: "#/components/schemas/CardanoDbBeacon"
        signed_entity_type:
          $ref: "#/components/schemas/SignedEntityType"
        metadata:
          $ref: "#/components/schemas/CertificateListItemMessageMetadata"
        protocol_message:
          $ref: "#/components/schemas/ProtocolMessage"
        signed_message:
          description: Hash of the protocol message that is signed by the signer participants
          type: string
          format: bytes
        aggregate_verification_key:
          description: Aggregate verification key used to verify the multi signature
          type: string
          format: bytes
      example:
        {
          "hash": "9dc998101590f733f7a50e7c03b5b336e69a751cc02d811395d49618db3ba3d7",
          "previous_hash": "aa2ddfb87a17103bdf15bfb21a2941b3f3223a3c8d710910496c392b14f8c403",
          "epoch": 32,
          "beacon":
            {
              "network": "mainnet",
              "epoch": 329,
              "immutable_file_number": 7060000
            },
          signed_entity_type: { "MithrilStakeDistribution": 246 },
          "metadata":
            {
              "network": "mainnet",
              "version": "0.1.0",
              "parameters": { "k": 5, "m": 100, "phi_f": 0.65 },
              "initiated_at": "2022-07-17T18:51:23.192811338Z",
              "sealed_at": "2022-07-17T18:51:35.830832580Z",
              "total_signers": 3
            },
          "protocol_message":
            {
              "message_parts":
                {
                  "snapshot_digest": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
                  "next_aggregate_verification_key": "b132362c3232352c36392c31373133352c31323235392c3235332c3233342c34226d745f636f6d6d69746d656e74223a7b22726f6f74223a5b33382c3382c3138322c3231322c2c363"
                }
            },
          "signed_message": "07ed7c9e128744c1a4797b7eb34c54823cc7a21fc95c19876122ab4bb0fe796d6bba2bc",
          "aggregate_verification_key": "7b232392c3130342c34392c35312c3130332c3136352c37364223a7b22726f6f74223a5b3137392c3135312c3135382c37332c37372c2c3135392c3226d745f636f6d6d69746d656e7"
        }

    CertificateMetadata:
      description: CertificateMetadata represents the metadata associated to a Certificate
      type: object
      additionalProperties: false
      required:
        - network
        - version
        - parameters
        - initiated_at
        - sealed_at
        - signers
      properties:
        network:
          description: Cardano network
          type: string
        version:
          description: Version of the protocol
          type: string
          format: bytes
        parameters:
          $ref: "#/components/schemas/ProtocolParameters"
        initiated_at:
          description: Date and time at which the certificate was initialized and ready to accept single signatures from signers
          type: string
          format: date-time
        sealed_at:
          description: Date and time at which the certificate was sealed (when the quorum of single signatures was reached so that a multi signature could be aggregated from them)
          type: string
          format: date-time
        signers:
          description: The list of the signers identifiers with their stakes and verification keys
          type: array
          items:
            $ref: "#/components/schemas/StakeDistributionParty"
      example:
        {
          "network": "mainnet",
          "version": "0.1.0",
          "parameters": { "k": 5, "m": 100, "phi_f": 0.65 },
          "initiated_at": "2022-07-17T18:51:23.192811338Z",
          "sealed_at": "2022-07-17T18:51:35.830832580Z",
          "signers":
            [
              { "party_id": "1234567890", "stake": 1234 },
              { "party_id": "2345678900", "stake": 2345 }
            ]
        }

    CertificateMessage:
      description: Certificate represents a Mithril certificate embedding a Mithril STM multi signature
      type: object
      additionalProperties: false
      required:
        - hash
        - previous_hash
        - epoch
        - signed_entity_type
        - metadata
        - protocol_message
        - signed_message
        - aggregate_verification_key
        - multi_signature
        - genesis_signature
      properties:
        hash:
          description: Hash of the current certificate
          type: string
          format: bytes
        previous_hash:
          description: Hash of the previous certificate
          type: string
          format: bytes
        epoch:
          $ref: "#/components/schemas/Epoch"
        beacon:
          deprecated: true
          allOf:
            - $ref: "#/components/schemas/CardanoDbBeacon"
        signed_entity_type:
          $ref: "#/components/schemas/SignedEntityType"
        metadata:
          $ref: "#/components/schemas/CertificateMetadata"
        protocol_message:
          $ref: "#/components/schemas/ProtocolMessage"
        signed_message:
          description: Hash of the protocol message that is signed by the signer participants
          type: string
          format: bytes
        aggregate_verification_key:
          description: Aggregate verification key used to verify the multi signature
          type: string
          format: bytes
        multi_signature:
          description: STM multi signature created from a quorum of single signatures from the signers
          type: string
          format: bytes
        genesis_signature:
          description: Genesis signature created to bootstrap the certificate chain with the Cardano Genesis Keys
          type: string
          format: bytes
      example:
        {
          "hash": "9dc998101590f733f7a50e7c03b5b336e69a751cc02d811395d49618db3ba3d7",
          "previous_hash": "aa2ddfb87a17103bdf15bfb21a2941b3f3223a3c8d710910496c392b14f8c403",
          "epoch": 329,
          "beacon":
            {
              "network": "mainnet",
              "epoch": 329,
              "immutable_file_number": 7060000
            },
          signed_entity_type: { "MithrilStakeDistribution": 246 },
          "metadata":
            {
              "network": "mainnet",
              "version": "0.1.0",
              "parameters": { "k": 5, "m": 100, "phi_f": 0.65 },
              "initiated_at": "2022-07-17T18:51:23.192811338Z",
              "sealed_at": "2022-07-17T18:51:35.830832580Z",
              "signers":
                [
                  {
                    "party_id": "1234567890",
                    "verification_key": "7b12766b223a5c342b39302c32392c39392c39382c3131313138342c32252c32352c31353",
                    "verification_key_signature": "7b5473693727369676d61223a7b227369676d6d61223a7b261223a9b227369676d61213a",
                    "operational_certificate": "5b73136372c38302c37342c3136362c313535b5b3232352c3230332c3235352c313030262c38322c39382c32c39332c3138342c3135362c3136362c32312c3131312c3232312c36332c3137372c3232332c3232332c31392c3537",
                    "kes_period": 123,
                    "stake": 1234
                  },
                  {
                    "party_id": "2345678900",
                    "verification_key": "7b392c39392c13131312766b223a5c39382c313342b39302c252c32352c31353328342c32",
                    "verification_key_signature": "2c33302c3133312c3138322c34362c3133352c372c3139302c3235322c35352c32322c39",
                    "operational_certificate": "3231342c3137372c37312c3232352c3233332c3135335d2c322c3139322c5b3133352c34312c3230332c3131332c3c33352c3234302c3230392c312c32392c3233332c33342c3138382c3134312c3130342c3234382c3231392c3",
                    "kes_period": 456,
                    "stake": 2345
                  }
                ]
            },
          "protocol_message":
            {
              "message_parts":
                {
                  "snapshot_digest": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
                  "next_aggregate_verification_key": "b132362c3232352c36392c31373133352c31323235392c3235332c3233342c34226d745f636f6d6d69746d656e74223a7b22726f6f74223a5b33382c3382c3138322c3231322c2c363"
                }
            },
          "signed_message": "07ed7c9e128744c1a4797b7eb34c54823cc7a21fc95c19876122ab4bb0fe796d6bba2bc",
          "aggregate_verification_key": "7b232392c3130342c34392c35312c3130332c3136352c37364223a7b22726f6f74223a5b3137392c3135312c3135382c37332c37372c2c3135392c3226d745f636f6d6d69746d656e7",
          "multi_signature": "",
          "genesis_signature": ""
        }

    SnapshotListMessage:
      description: SnapshotListMessage represents a list of snapshots
      type: array
      items:
        $ref: "#/components/schemas/Snapshot"
      example:
        [
          {
            "digest": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
            "beacon":
              {
                "network": "mainnet",
                "epoch": 329,
                "immutable_file_number": 7060000
              },
            "certificate_hash": "7905e83ab5d7bc082c1bbc3033bfd19c539078830d19080d1f241c70aa532572",
            "size": 26058531636,
            "created_at": "2022-07-21T17:32:28Z",
            "locations":
              [
                "https://mithril-cdn-us.iohk.io/snapshot/6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
                "https://mithril-cdn-eu.iohk.io/snapshot/6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
                "magnet:?xt=urn:sha1:YNCKHTQCWBTRNJIV4WNAE52SJUQCZO5C",
                "ipfs:QmPXME1oRtoT627YKaDPDQ3PwA8tdP9rWuAAweLzqSwAWT"
              ]
          }
        ]

    Snapshot:
      description: Snapshot represents a snapshot file and its metadata
      type: object
      additionalProperties: false
      required:
        - digest
        - beacon
        - certificate_hash
        - size
        - created_at
        - locations
      properties:
        digest:
          description: Digest that is signed by the signer participants
          type: string
          format: bytes
        beacon:
          $ref: "#/components/schemas/CardanoDbBeacon"
        certificate_hash:
          description: Hash of the associated certificate
          type: string
          format: bytes
        size:
          description: Size of the snapshot file in Bytes
          type: integer
          format: int64
        created_at:
          description: Date and time at which the snapshot was created
          type: string
          format: date-time
        locations:
          description: Locations where the binary content of the snapshot can be retrieved
          type: array
          items:
            type: string
        compression_algorithm:
          description: Compression algorithm for the snapshot archive
          type: string
        cardano_node_version:
          description: Version of the Cardano node which is used to create snapshot archives.
          type: string
      example:
        {
          "digest": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
          "beacon":
            {
              "network": "mainnet",
              "epoch": 329,
              "immutable_file_number": 7060000
            },
          "certificate_hash": "7905e83ab5d7bc082c1bbc3033bfd19c539078830d19080d1f241c70aa532572",
          "size": 26058531636,
          "created_at": "2022-07-21T17:32:28Z",
          "locations":
            [
              "https://mithril-cdn-us.iohk.io/snapshot/6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
              "https://mithril-cdn-eu.iohk.io/snapshot/6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
              "magnet:?xt=urn:sha1:YNCKHTQCWBTRNJIV4WNAE52SJUQCZO5C",
              "ipfs:QmPXME1oRtoT627YKaDPDQ3PwA8tdP9rWuAAweLzqSwAWT"
            ],
          "compression_algorithm": "zstandard",
          "cardano_node_version": "1.0.0"
        }

    SnapshotMessage:
      description: This message represents a snapshot file and its metadata.
      allOf:
        - $ref: "#/components/schemas/Snapshot"
      example:
        {
          "digest": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
          "beacon":
            {
              "network": "mainnet",
              "epoch": 329,
              "immutable_file_number": 7060000
            },
          "certificate_hash": "7905e83ab5d7bc082c1bbc3033bfd19c539078830d19080d1f241c70aa532572",
          "size": 26058531636,
          "created_at": "2022-07-21T17:32:28Z",
          "locations":
            [
              "https://mithril-cdn-us.iohk.io/snapshot/6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
              "https://mithril-cdn-eu.iohk.io/snapshot/6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
              "magnet:?xt=urn:sha1:YNCKHTQCWBTRNJIV4WNAE52SJUQCZO5C",
              "ipfs:QmPXME1oRtoT627YKaDPDQ3PwA8tdP9rWuAAweLzqSwAWT"
            ],
          "compression_algorithm": "zstandard",
          "cardano_node_version": "1.0.0"
        }

    SnapshotDownloadMessage:
      description: SnapshotDownloadMessage represents a downloaded snapshot event
      type: object
      additionalProperties: false
      required:
        - digest
        - beacon
        - size
        - locations
        - compression_algorithm
        - cardano_node_version
      properties:
        digest:
          description: Digest that is signed by the signer participants
          type: string
          format: bytes
        beacon:
          $ref: "#/components/schemas/CardanoDbBeacon"
        size:
          description: Size of the snapshot file in Bytes
          type: integer
          format: int64
        locations:
          description: Locations where the binary content of the snapshot can be retrieved
          type: array
          items:
            type: string
        compression_algorithm:
          description: Compression algorithm for the snapshot archive
          type: string
        cardano_node_version:
          description: Version of the Cardano node which is used to create snapshot archives.
          type: string
      example:
        {
          "digest": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
          "beacon":
            {
              "network": "mainnet",
              "epoch": 329,
              "immutable_file_number": 7060000
            },
          "size": 26058531636,
          "locations":
            [
              "https://mithril-cdn-us.iohk.io/snapshot/6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
              "https://mithril-cdn-eu.iohk.io/snapshot/6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
              "magnet:?xt=urn:sha1:YNCKHTQCWBTRNJIV4WNAE52SJUQCZO5C",
              "ipfs:QmPXME1oRtoT627YKaDPDQ3PwA8tdP9rWuAAweLzqSwAWT"
            ],
          "compression_algorithm": "zstandard",
          "cardano_node_version": "1.0.0"
        }

    MithrilStakeDistributionListMessage:
      description: MithrilStakeDistributionListMessage represents a list of Mithril stake distribution
      type: array
      items:
        type: object
        additionalProperties: false
        required:
          - epoch
          - hash
          - created_at
        properties:
          epoch:
            $ref: "#/components/schemas/Epoch"
          hash:
            description: Hash of the Mithril stake distribution
            type: string
            format: bytes
          certificate_hash:
            description: Hash of the associated certificate
            type: string
            format: bytes
          created_at:
            description: Date and time at which the Mithril stake distribution was created
            type: string
            format: date-time,
        example:
          {
            "epoch": 123,
            "hash": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
            "certificate_hash": "7905e83ab5d7bc082c1bbc3033bfd19c539078830d19080d1f241c70aa532572",
            "created_at": "2022-06-14T10:52:31Z"
          }

    MithrilStakeDistributionMessage:
      description: This message represents a Mithril stake distribution.
      type: object
      additionalProperties: false
      required:
        - epoch
        - hash
        - signers
        - created_at
        - protocol_parameters
      properties:
        epoch:
          $ref: "#/components/schemas/Epoch"
        hash:
          description: Hash of the Mithril stake distribution
          type: string
          format: bytes
        certificate_hash:
          description: Hash of the associated certificate
          type: string
          format: bytes
        signers:
          description: The list of the signers with their stakes and verification keys
          type: array
          items:
            $ref: "#/components/schemas/SignerWithStake"
        created_at:
          description: Date and time of the entity creation
          type: string
          format: date-time,
        protocol_parameters:
          $ref: "#/components/schemas/ProtocolParameters"
      example:
        {
          "epoch": 123,
          "hash": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
          "certificate_hash": "7905e83ab5d7bc082c1bbc3033bfd19c539078830d19080d1f241c70aa532572",
          "signers":
            [
              {
                "party_id": "1234567890",
                "verification_key": "7b12766b223a5c342b39302c32392c39392c39382c3131313138342c32252c32352c31353",
                "verification_key_signature": "7b5473693727369676d61223a7b227369676d6d61223a7b261223a9b227369676d61213a",
                "operational_certificate": "5b73136372c38302c37342c3136362c313535b5b3232352c3230332c3235352c313030262c38322c39382c32c39332c3138342c3135362c3136362c32312c3131312c3232312c36332c3137372c3232332c3232332c31392c3537",
                "kes_period": 123,
                "stake": 1234
              },
              {
                "party_id": "2345678900",
                "verification_key": "7b392c39392c13131312766b223a5c39382c313342b39302c252c32352c31353328342c32",
                "verification_key_signature": "2c33302c3133312c3138322c34362c3133352c372c3139302c3235322c35352c32322c39",
                "operational_certificate": "3231342c3137372c37312c3232352c3233332c3135335d2c322c3139322c5b3133352c34312c3230332c3131332c3c33352c3234302c3230392c312c32392c3233332c33342c3138382c3134312c3130342c3234382c3231392c3",
                "kes_period": 456,
                "stake": 2345
              }
            ],
          "created_at": "2022-06-14T10:52:31Z",
          "protocol_parameters": { "k": 5, "m": 100, "phi_f": 0.65 }
        }

    CardanoTransactionSnapshotListMessage:
      description: CardanoTransactionSnapshotListMessage represents a list of Cardano transactions set snapshots
      type: array
      items:
        type: object
        additionalProperties: false
        required:
          - hash
          - certificate_hash
          - merkle_root
          - epoch
          - block_number
          - created_at
        properties:
          hash:
            description: Hash of the Cardano transactions set
            type: string
            format: bytes
          certificate_hash:
            description: Hash of the associated certificate
            type: string
            format: bytes
          merkle_root:
            description: Merkle root of the Cardano transactions set
            type: string
            format: bytes
          epoch:
            $ref: "#/components/schemas/Epoch"
          block_number:
            description: Cardano block number
            type: integer
            format: int64
          created_at:
            description: Date and time at which the Cardano transactions set was created
            type: string
            format: date-time,
        example:
          {
            "hash": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
            "certificate_hash": "7905e83ab5d7bc082c1bbc3033bfd19c539078830d19080d1f241c70aa532572",
            "merkle_root": "33bfd17bc082ab5dd1fc0788241c70aa5325241c70aa532530d190809c5391bbc307905e8372",
            "epoch": 123,
            "block_number": 1234,
            "created_at": "2022-06-14T10:52:31Z"
          }

    CardanoTransactionSnapshotMessage:
      description: This message represents a Cardano transactions set snapshot.
      type: object
      additionalProperties: false
      required:
        - hash
        - certificate_hash
        - merkle_root
        - epoch
        - block_number
        - created_at
      properties:
        hash:
          description: Hash of the Cardano transactions set
          type: string
          format: bytes
        certificate_hash:
          description: Hash of the associated certificate
          type: string
          format: bytes
        merkle_root:
          description: Merkle root of the Cardano transactions set
          type: string
          format: bytes
        epoch:
          $ref: "#/components/schemas/Epoch"
        block_number:
          description: Cardano block number
          type: integer
          format: int64
        created_at:
          description: Date and time at which the Cardano transactions set was created
          type: string
          format: date-time,
      example:
        {
          "hash": "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
          "certificate_hash": "7905e83ab5d7bc082c1bbc3033bfd19c539078830d19080d1f241c70aa532572",
          "merkle_root": "33bfd17bc082ab5dd1fc0788241c70aa5325241c70aa532530d190809c5391bbc307905e8372",
          "epoch": 123,
          "block_number": 1234,
          "created_at": "2022-06-14T10:52:31Z"
        }

    CardanoTransactionProofMessage:
      description: This message represents proofs for Cardano Transactions.
      type: object
      additionalProperties: false
      required:
        - certificate_hash
        - certified_transactions
        - non_certified_transactions
        - latest_block_number
      properties:
        certificate_hash:
          description: Hash of the certificate that validate the merkle root of this proof
          type: string
          format: bytes
        certified_transactions:
          description: Proofs for certified Cardano transactions
          type: array
          items:
            type: object
            required:
              - transactions_hashes
              - proof
            properties:
              transactions_hashes:
                type: array
                items:
                  description: Hash of the Cardano transactions
                  type: string
                  format: bytes
              proof:
                description: Proof for the Cardano transactions
                type: string
                format: bytes
        non_certified_transactions:
          type: array
          items:
            description: Hash of the non certified Cardano transactions
            type: string
            format: bytes
        latest_block_number:
          description: Last block number
          type: integer
          format: int64
      example:
        {
          "certificate_hash": "7905e83ab5d7bc082c1bbc3033bfd19c539078830d19080d1f241c70aa532572",
          "certified_transactions":
            [
              {
                "transactions_hashes":
                  [
                    "6367ee65d0d1272e6e70736a1ea2cae34015874517f6328364f6b73930966732",
                    "5d0d1272e6e70736a1ea2cae34015876367ee64517f6328364f6b73930966732"
                  ],
                "proof": "5b73136372c38302c37342c3136362c313535b5b323136362c313535b5b3232352c3230332c3235352c313030262c38322c39382c32c39332c3138342c313532352c3230332c3235352c313030262c33136362c313535b5b3232352c3230332c3235352c313030262c38322c39382c32c39332c3138342c31358322c39382c32c39332c3138342c3135362c3136362c32312c3131312c3232312c36332c3137372c3232332c3232332c31392c3537"
              }
            ],
          "non_certified_transactions":
            ["732d0d1272e6e70736367ee6f6328364f6b739309666a1ea2cae34015874517"],
          "latest_block_number": 7060000
        }

    Error:
      description: Internal error representation
      type: object
      additionalProperties: false
      required:
        - message
      properties:
        label:
          description: optional label
          type: string
        message:
          description: error message
          type: string
          example: "An error occurred, the operation could not be completed"
      example:
        {
          "label": "Internal error",
          "message": "An error occurred, the operation could not be completed"
        }
